Total Time: 68.193s
Min Time: 54.386s
VC refinements : 33
Avg VC size : 311.24242424242425
Max VC size : 822
Avg UIF-ADT size : 78.63636363636364
Max UIF-ADT size : 200
avgTempVars : 3.393939393939394
maxTempVars : 4
### Farkas solver stats ####
Disjunct Explorations : 82
Total retries: 0
avgFarkaSize : 39.926829268292686
maxFarkaSize : 300
avgFarkaTime : 0.016365853658536586s
maxFarkaTime : 0.359s
avgNLSize : 5.597560975609756
maxNLSize : 36
avgDijSize : 88.40243902439025
maxDijSize : 738
avgElimvars : 36.26829268292683
maxElimvars : 205
avgElimAtoms : 72.42682926829268
maxElimAtoms : 594
avgExploreTime : 0.12369512195121951s
maxExploreTime : 1.463s
avgCompatCalls : 176.64634146341464
maxCompatCalls : 2541
avgLemmaApps : 0.0
maxLemmaApps : 0
### Cegis solver stats #### 
# of bounds tried: 0
cegis iterations: 0
avgTemplateCtrSize : NaN
maxTemplateCtrSize : 0
########## Outputs ############
Invariants for Function: reverseRec
reverseRec --> ((((-3 * size(l1)) + (1 * res22._2)) + -1) ≤ 0)
size --> (((-2 * #res) + -1) ≤ 0)

Invariants for Function: reverse
reverse --> ((((1 * res23._2) + (-3 * size(l))) + -3) ≤ 0)
size --> (((-4 * #res) + -1) ≤ 0)
reverseRec --> ((((-3 * size(l1)) + (1 * res22._2)) + -1) ≤ 0)

Invariants for Function: sizeList
sizeList --> ((((1 * res17._2) + (-3 * size(list))) + -1) ≤ 0)
size --> (((-2 * #res) + -1) ≤ 0)

Invariants for Function: concat
concat --> ((((-3 * size(l1)) + (1 * res18._2)) + -1) ≤ 0)
size --> (((-1 * #res) + 0) ≤ 0)

Invariants for Function: removeLast
removeLast --> ((((-3 * size(l)) + (1 * res24._2)) + 0) ≤ 0)
size --> (((-1 * #res) + 0) ≤ 0)

Invariants for Function: pop
pop --> ((((1 * res19._2) + (-3 * size(q.front))) + -3) ≤ 0)
removeLast --> ((((-3 * size(l)) + (1 * res24._2)) + 0) ≤ 0)
size --> (((-4 * #res) + -1) ≤ 0)
sizeList --> ((((1 * res17._2) + (-3 * size(list))) + -1) ≤ 0)

Invariants for Function: enqueue
reverseRec --> ((((-3 * size(l1)) + (1 * res22._2)) + -1) ≤ 0)
enqueue --> ((((-3 * qsize(q)) + (1 * res21._2)) + -13) ≤ 0)
size --> (((-4 * #res) + -1) ≤ 0)
sizeList --> ((((1 * res17._2) + (-3 * size(list))) + -1) ≤ 0)
concat --> ((((-3 * size(l1)) + (1 * res18._2)) + -1) ≤ 0)

Invariants for Function: dequeue
reverseRec --> ((((-3 * size(l1)) + (1 * res22._2)) + -1) ≤ 0)
size --> (((-4 * #res) + -1) ≤ 0)
sizeList --> ((((1 * res17._2) + (-3 * size(list))) + -1) ≤ 0)
dequeue --> ((((1 * res20._2) + (-3 * qsize(q))) + -7) ≤ 0)
concat --> ((((-3 * size(l1)) + (1 * res18._2)) + -1) ≤ 0)


########## Lower Bounds ############
reverseRec: 	(a?2->2), (b?2->0), 
reverse: 	(a?3->2), (b?3->2), 
removeLast: 	(a?6->2), (b?6->-1), 
pop: 	(a?7->2), (b?7->2), 
enqueue: 	(a?4->2), (b?4->12), 
sizeList: 	(a?->2), (b?->0), 
dequeue: 	(a?5->2), (b?5->6), 
concat: 	(a?1->2), (b?1->0), 
