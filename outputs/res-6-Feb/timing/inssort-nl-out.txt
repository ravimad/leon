After Depth Instrumentation: 
object InsertionSort {
  case class Cons(head: Int, tail: List) extends List

  sealed abstract class List

  case class Nil() extends List

  def sortedIns(e : Int, l : List) : List = {(l match {
    case Nil() =>
      Cons(e, Nil())
    case Cons(x, xs) =>
      if ((x <= e)) {
        Cons(x, sortedIns(e, xs))
      } else {
        Cons(e, l)
      }
  })} ensuring(res => (size(res) == (size(l) + 1)))

  def sort(l : List) : List = {(l match {
    case Nil() =>
      Nil()
    case Cons(x, xs) =>
      sortedIns(x, sort(xs))
  })} ensuring(res => (size(res) == size(l)))

  def size(l : List) : Int = {(l match {
    case Nil() =>
      0
    case Cons(_, xs) =>
      (1 + size(xs))
  })}

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}
}

Defined fun: sortedIns
Defined fun: sort
Defined fun: size
Defined fun: max
FunMap: Map(sortedIns -> sortedIns, sort -> sort, size -> size, max -> max)
After Time Instrumentation: 
object InsertionSort {
  case class Cons(head: Int, tail: List) extends List

  sealed abstract class List

  case class Nil() extends List

  def sortedIns(e : Int, l : List) : (List, Int) = {locally {
    val t = 1
    if (l.isInstanceOf[Nil]) {
      (Cons(e, Nil()), (t + 2))
    } else {
      locally {
        val (e5: Cons, t4: Int) = locally {
          val t5 = 2
          if ((l.head <= e)) {
            locally {
              val (e7: Cons, t6: Int) = locally {
                val (e9: List, t8: Int) = locally {
                  val (e12: List, t11: Int) = sortedIns(e, l.tail)
                  (e12, (1 + (1 + t11)))
                }
                
                (Cons(l.head, e9), (t8 + 2))
              }
              
              (e7, (t5 + t6))
            }
            
          } else {
            (Cons(e, l), (t5 + 1))
          }
        }
        
        (e5, (t + t4))
      }
      
    }
  }
  } ensuring(res5 => (size(res5._1) == (size(l) + 1)))

  def sort(l : List) : (List, Int) = {locally {
    val t21 = 1
    if (l.isInstanceOf[Nil]) {
      (Nil(), (t21 + 1))
    } else {
      locally {
        val (e24: List, t23: Int) = locally {
          val (e26: List, t25: Int) = locally {
            val (e29: List, t28: Int) = sort(l.tail)
            (e29, (1 + (1 + t28)))
          }
          
          locally {
            val (e27: List, t26: Int) = sortedIns(l.head, e26)
            (e27, (t25 + (1 + (1 + t26))))
          }
          
        }
        
        (e24, (t21 + t23))
      }
      
    }
  }
  } ensuring(res6 => (size(res6._1) == size(l)))

  def size(l : List) : Int = {(l match {
    case Nil() =>
      0
    case Cons(_, xs) =>
      (1 + size(xs))
  })}

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}
}

New Prog: 
object InsertionSort {
  case class Cons(head: Int, tail: List) extends List

  sealed abstract class List

  case class Nil() extends List

  def sortedIns(e : Int, l : List) : (List, Int) = {if (l.isInstanceOf[Nil]) {
    (Cons(e, Nil()), (1 + 2))
  } else {
    locally {
      val (e5: Cons, t4: Int) = if ((l.head <= e)) {
        locally {
          val (e7: Cons, t6: Int) = locally {
            val (e9: List, t8: Int) = locally {
              val (e12: List, t11: Int) = sortedIns(e, l.tail)
              (e12, (1 + (1 + t11)))
            }
            
            (Cons(l.head, e9), (t8 + 2))
          }
          
          (e7, (2 + t6))
        }
        
      } else {
        (Cons(e, l), (2 + 1))
      }
      (e5, (1 + t4))
    }
    
  }} ensuring(res5 => (size(res5._1) == (size(l) + 1)))

  def sort(l : List) : (List, Int) = {if (l.isInstanceOf[Nil]) {
    (Nil(), (1 + 1))
  } else {
    locally {
      val (e24: List, t23: Int) = locally {
        val (e26: List, t25: Int) = locally {
          val (e29: List, t28: Int) = sort(l.tail)
          (e29, (1 + (1 + t28)))
        }
        
        locally {
          val (e27: List, t26: Int) = sortedIns(l.head, e26)
          (e27, (t25 + (1 + (1 + t26))))
        }
        
      }
      
      (e24, (1 + t23))
    }
    
  }} ensuring(res6 => (size(res6._1) == size(l)))

  def size(l : List) : Int = {(l match {
    case Nil() =>
      0
    case Cons(_, xs) =>
      (1 + size(xs))
  })}

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}

  def mult(x : Int, y : Int) : Int = {locally {
    val r = locally {
      val px = if ((x < 0)) {
        -(x)
      } else {
        x
      }
      locally {
        val py = if ((y < 0)) {
          -(y)
        } else {
          y
        }
        pmult(px, py)
      }
      
    }
    
    if ((((x >= 0) && (y >= 0)) || ((x < 0) && (y < 0)))) {
      r
    } else {
      -(r)
    }
  }
  }

  def pmult(x : Int, y : Int) : Int = {if (((x == 0) || (y == 0))) {
    0
  } else {
    (pmult((x - 1), y) + y)
  }} ensuring(res => ((res >= 0) && (((x == 0) || (y == 0)) || (res == (pmult(x, (y - 1)) + x)))))
}

Function: sortedIns template --> (res5._2 ≤ ((a? * size(l)) + b?))
Function: sort template --> (res6._2 ≤ ((a?1 * mult(size(l), size(l))) + b?1))
[[34m Info  [0m] Running Invariant Inference Phase...
[[34m Info  [0m] Analysis Order: List(pmult, size, sortedIns, mult, sort)
[[34m Info  [0m] - considering function sortedIns...
[[34m Info  [0m] Body: if (l.isInstanceOf[Nil])
            (Cons(e, Nil()), (1 + 2))
          else
            (let (e5,t4 := if ((l.head ≤ e))
              (let (e7,t6 := (let (e9,t8 := (let (e12,t11 := sortedIns(e, l.tail)) in
                (e12, (1 + (1 + t11))))) in
                (Cons(l.head, e9), (t8 + 2)))) in
                (e7, (2 + t6)))
            else
              (Cons(e, l), (2 + 1))) in
              (e5, (1 + t4)))
[[34m Info  [0m] Post: (size(res5._1) == (size(l) + 1))
falttened Body: ((res5 == ifres) && ((ci && (ci == l.isInstanceOf[Nil]) && (ifres == tp) && (cc == Nil()) && (cc1 == Cons(e, cc)) && (arg == (1 + 2)) && (tp == (cc1, arg))) || (!(ci1) && (ci1 == l.isInstanceOf[Nil]) && (ifres == tp1) && (arg1 == (1 + t4)) && (tp1 == (e5, arg1)) && (((cs <= e) && (cs == l.head) && (ifres1 == tp2) && (arg2 == (2 + t6)) && (tp2 == (e7, arg2)) && (t11 == ts) && (ts == tres._2) && (t6 == (t8 + 2)) && (t8 == (1 + (1 + t11))) && (e7 == cc2) && (cs1 == l.head) && (cc2 == Cons(cs1, e9)) && (tres == r1) && (cs2 == l.tail) && (r1 == sortedIns(e, cs2)) && (e12 == ts1) && (ts1 == tres._1) && (e9 == e12)) || ((cs3 > e) && (cs3 == l.head) && (ifres1 == tp3) && (cc3 == Cons(e, l)) && (arg3 == (2 + 1)) && (tp3 == (cc3, arg3)))) && (e5 == ts2) && (ts2 == ifres1._1) && (t4 == ts3) && (ts3 == ifres1._2))))
Flattened Post: ((((r2 < (r3 + 1)) && (ts4 == res5._1) && (r2 == size(ts4)) && (r3 == size(l))) || ((r4 > (r5 + 1)) && (ts5 == res5._1) && (r4 == size(ts5)) && (r5 == size(l)))) || ((ts6 > ((a? * r6) + b?)) && (ts6 == res5._2) && (r6 == size(l))))
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
sortedIns-->((((1 * res5._2) + (0 * size(l))) + 0) ≤ 0)
Function: sortedIns--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 11
[[34m Info  [0m] Number of equal calls: 3
# of atomic predicates: 9 + 0
solving...
solved... in 0.012s
candidate Invariants
sortedIns-->((((1 * res5._2) + (0 * size(l))) + -6) ≤ 0)
Function: sortedIns--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 12
[[34m Info  [0m] Number of equal calls: 3
# of atomic predicates: 0 + 9
solving...
solved... in 0.006s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 3/8
Unrolled calls: Set((r6 == size(l)), (r5 == size(l)), (r4 == size(ts5)))
Creating VC for size
[[34m Info  [0m] - Number of new terms enumerated: 2
[[34m Info  [0m] - Template generated for function size : (((a?3 * #res) + a?2) ≤ 0)
Unrolling (r6 == size(l))
Unrolling (r5 == size(l))
Unrolling (r4 == size(ts5))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
sortedIns-->((((1 * res5._2) + (0 * size(l))) + 0) ≤ 0)
size-->(((0 * #res) + 0) ≤ 0)
Function: sortedIns--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 14
[[34m Info  [0m] Number of equal calls: 4
# of atomic predicates: 10 + 0
solving...
solved... in 0.007s
candidate Invariants
sortedIns-->((((-8 * size(l)) + (16 * res5._2)) + -2) ≤ 0)
size-->(((-8 * #res) + 94) ≤ 0)
Function: sortedIns--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 56
[[34m Info  [0m] Number of equal calls: 11
Function: size--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 21 + 10
solving...
solved... in 0.009s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 3/10
Unrolled calls: Set((r15 == size(cs2)), (r8 == size(cs2)), (r7 == size(ts7)))
Unrolling (r15 == size(cs2))
Unrolling (r8 == size(cs2))
Unrolling (r7 == size(ts7))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
sortedIns-->((((1 * res5._2) + (0 * size(l))) + 0) ≤ 0)
size-->(((0 * #res) + 0) ≤ 0)
Function: sortedIns--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 14
[[34m Info  [0m] Number of equal calls: 4
# of atomic predicates: 12 + 0
solving...
solved... in 0.007s
candidate Invariants
sortedIns-->((((16 * res5._2) + (-2 * size(l))) + -8) ≤ 0)
size-->(((-32 * #res) + 1392) ≤ 0)
Function: sortedIns--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 92
[[34m Info  [0m] Number of equal calls: 13
Function: size--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 27 + 12
solving...
solved... in 0.011s
candidate Invariants
sortedIns-->((((-16 * size(l)) + (2 * res5._2)) + -29) ≤ 0)
size-->(((-1 * #res) + -2) ≤ 0)
Function: sortedIns--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 85
[[34m Info  [0m] Number of equal calls: 11
# of atomic predicates: 14 + 39
solving...
solved... in 0.015s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 2/10
Unrolled calls: Set((r2 == size(ts4)), (r3 == size(l)))
Unrolling (r2 == size(ts4))
Unrolling (r3 == size(l))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
sortedIns-->((((0 * size(l)) + (1 * res5._2)) + 0) ≤ 0)
size-->(((0 * #res) + 0) ≤ 0)
Function: sortedIns--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 14
[[34m Info  [0m] Number of equal calls: 4
# of atomic predicates: 12 + 0
solving...
solved... in 0.006s
candidate Invariants
sortedIns-->((((-2 * size(l)) + (16 * res5._2)) + -8) ≤ 0)
size-->(((-32 * #res) + 1392) ≤ 0)
Function: sortedIns--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 92
[[34m Info  [0m] Number of equal calls: 13
Function: size--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 34 + 12
solving...
solved... in 0.013s
candidate Invariants
sortedIns-->((((-16 * size(l)) + (2 * res5._2)) + -29) ≤ 0)
size-->(((-1 * #res) + -2) ≤ 0)
Nesting level: a?-->1
Nesting level: b?-->0
minimizing...
Minimizing variable: a? Initial upperbound: 8
Found new lower bound: 4
Found new lower bound: 6
Found new upper bound: 7
Minimizing variable: b? Initial upperbound: 27/2
Found new upper bound: 23/4
Found new upper bound: 159/80
Found new upper bound: -1/12
Found new upper bound: -89/88
Found new upper bound: -3
Found new lower bound: -6
Found new lower bound: -5
Found new lower bound: -4
Minimization complete...
candidate Invariants
sortedIns-->((((1 * res5._2) + (-7 * size(l))) + 3) ≤ 0)
size-->(((-1 * #res) + 0) ≤ 0)
Function: sortedIns--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 1
[[34m Info  [0m] Number of equal calls: 1
# of atomic predicates: 10 + 46
solving...
solved... in 0.013s
candidate Invariants
sortedIns-->((((-8 * size(l)) + (1 * res5._2)) + -5) ≤ 0)
size-->(((-1 * #res) + -1) ≤ 0)
Nesting level: a?-->1
Nesting level: b?-->0
minimizing...
Minimizing variable: a? Initial upperbound: 8
Found new lower bound: 4
Found new lower bound: 6
Found new upper bound: 7
Minimizing variable: b? Initial upperbound: 6
Found new upper bound: 3
Found new lower bound: 1
Found new lower bound: 2
Minimization complete...
[[34m Info  [0m] - Found inductive invariant: sortedIns --> ((((1 * res5._2) + (-7 * size(l))) + -3) <= 0)
[[34m Info  [0m] - Found inductive invariant: size --> (((-3 * #res) + -1) <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[34m Info  [0m] - Invariant verified
[[34m Info  [0m] - considering function sort...
[[34m Info  [0m] Body: if (l.isInstanceOf[Nil])
            (Nil(), (1 + 1))
          else
            (let (e24,t23 := (let (e26,t25 := (let (e29,t28 := sort(l.tail)) in
              (e29, (1 + (1 + t28))))) in
              (let (e27,t26 := sortedIns(l.head, e26)) in
                (e27, (t25 + (1 + (1 + t26))))))) in
              (e24, (1 + t23)))
[[34m Info  [0m] Post: (size(res6._1) == size(l))
falttened Body: ((res6 == ifres11) && ((ci20 && (ci20 == l.isInstanceOf[Nil]) && (ifres11 == tp4) && (cc4 == Nil()) && (arg4 == (1 + 1)) && (tp4 == (cc4, arg4))) || (!(ci21) && (ci21 == l.isInstanceOf[Nil]) && (ifres11 == tp5) && (arg5 == (1 + t23)) && (tp5 == (e24, arg5)) && (t28 == ts22) && (ts22 == tres2._2) && (e24 == e27) && (t25 == (1 + (1 + t28))) && (t23 == (t25 + (1 + (1 + t26)))) && (tres1 == r32) && (cs13 == l.head) && (r32 == sortedIns(cs13, e26)) && (e27 == ts23) && (ts23 == tres1._1) && (e26 == e29) && (t26 == ts24) && (ts24 == tres1._2) && (e29 == ts25) && (ts25 == tres2._1) && (tres2 == r33) && (cs14 == l.tail) && (r33 == sort(cs14)))))
Flattened Post: ((((r34 < r35) && (ts26 == res6._1) && (r34 == size(ts26)) && (r35 == size(l))) || ((r36 > r37) && (ts27 == res6._1) && (r36 == size(ts27)) && (r37 == size(l)))) || ((ts28 > ((a?1 * r40) + b?1)) && (ts28 == res6._2) && (r38 == size(l)) && (r39 == size(l)) && (r40 == mult(r38, r39))))
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
sort-->((((1 * res6._2) + (0 * mult(size(l), size(l)))) + 0) ≤ 0)
Function: sort--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 9 + 0
solving...
solved... in 0.006s
candidate Invariants
sort-->((((1 * res6._2) + (0 * mult(size(l), size(l)))) + -4) ≤ 0)
Function: sort--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 44
[[34m Info  [0m] Number of equal calls: 9
# of atomic predicates: 0 + 9
solving...
solved... in 0.005s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 10/13
Unrolled calls: Set((r41 == size(ts29)), (r37 == size(l)), (r42 == size(cs14)), (r39 == size(l)), (r36 == size(ts27)), (r38 == size(l)), (r40 == mult(r38, r39)), (r44 == size(e26)), (r43 == size(ts30)), (r32 == sortedIns(cs13, e26)))
Creating VC for sortedIns
Unrolling (r32 == sortedIns(cs13, e26))
Creating VC for size
Unrolling (r42 == size(cs14))
Unrolling (r44 == size(e26))
Unrolling (r39 == size(l))
Unrolling (r43 == size(ts30))
Inlining (r40 == mult(r38, r39))
Unrolling (r41 == size(ts29))
Unrolling (r38 == size(l))
Unrolling (r37 == size(l))
Unrolling (r36 == size(ts27))
[[34m Info  [0m] Number of axiom instances: 8
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
sort-->((((0 * mult(size(l), size(l))) + (1 * res6._2)) + 0) ≤ 0)
sortedIns-->((((1 * res5._2) + (-7 * size(l))) + -3) ≤ 0)
size-->(((0 * #res) + 0) ≤ 0)
Function: sort--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2
[[34m Info  [0m] Number of equal calls: 2
Function: sortedIns--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 1
[[34m Info  [0m] Number of equal calls: 1
# of atomic predicates: 17 + 0
solving...
solved... in 0.005s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 2/25
Unrolled calls: Set((r52 == size(l)), (r60 == pmult(px1, py1)))
Unrolling (r52 == size(l))
Unrolling (r60 == pmult(px1, py1))
[[34m Info  [0m] Number of axiom instances: 50
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
sort-->((((0 * mult(size(l), size(l))) + (1 * res6._2)) + 0) ≤ 0)
sortedIns-->((((1 * res5._2) + (-7 * size(l))) + -3) ≤ 0)
size-->(((0 * #res) + 0) ≤ 0)
Function: sort--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2
[[34m Info  [0m] Number of equal calls: 2
Function: sortedIns--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 14
[[34m Info  [0m] Number of equal calls: 4
# of atomic predicates: 20 + 0
solving...
solved... in 0.007s
candidate Invariants
sort-->((((4 * res6._2) + (0 * mult(size(l), size(l)))) + -15) ≤ 0)
sortedIns-->((((1 * res5._2) + (-7 * size(l))) + -3) ≤ 0)
size-->(((-8 * #res) + 1) ≤ 0)
Function: sort--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 197
[[34m Info  [0m] Number of equal calls: 22
Function: size--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 35 + 20
solving...
solved... in 0.008s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 6/29
Unrolled calls: Set((r71 == size(cs14)), (r72 == mult(r70, r71)), (r34 == size(ts26)), (r70 == size(cs14)), (r35 == size(l)), (r73 == size(e26)))
Unrolling (r70 == size(cs14))
Unrolling (r35 == size(l))
Inlining (r72 == mult(r70, r71))
Unrolling (r73 == size(e26))
Unrolling (r71 == size(cs14))
Unrolling (r34 == size(ts26))
[[34m Info  [0m] Number of axiom instances: 162
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
sort-->((((0 * mult(size(l), size(l))) + (1 * res6._2)) + 0) ≤ 0)
sortedIns-->((((1 * res5._2) + (-7 * size(l))) + -3) ≤ 0)
size-->(((0 * #res) + 0) ≤ 0)
Function: sort--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2
[[34m Info  [0m] Number of equal calls: 2
Function: sortedIns--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 14
[[34m Info  [0m] Number of equal calls: 4
# of atomic predicates: 22 + 0
solving...
solved... in 0.007s
candidate Invariants
sort-->((((4 * res6._2) + (0 * mult(size(l), size(l)))) + -15) ≤ 0)
sortedIns-->((((1 * res5._2) + (-7 * size(l))) + -3) ≤ 0)
size-->(((-16 * #res) + 1) ≤ 0)
Function: sort--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 359
Axiom pre1 implied 
Axiom pre1 implied 
Axiom pre1 implied 
Axiom pre2 implied 
Axiom pre not implied 
Axiom pre1 implied 
Axiom pre1 implied 
Axiom pre1 implied 
Axiom pre2 implied 
Axiom pre not implied 
Axiom pre2 implied 
Axiom pre2 implied 
Axiom pre1 implied 
Axiom pre1 implied 
Axiom pre not implied 
Axiom pre2 implied 
Axiom pre1 implied 
Axiom pre1 implied 
Axiom pre1 implied 
Axiom pre1 implied 
Axiom pre2 implied 
Axiom pre not implied 
Axiom pre not implied 
Axiom pre not implied 
Axiom pre2 implied 
Axiom pre1 implied 
Axiom pre not implied 
Axiom pre not implied 
Axiom pre1 implied 
Axiom pre1 implied 
Axiom pre1 implied 
Axiom pre2 implied 
Axiom pre not implied 
Axiom pre2 implied 
[[34m Info  [0m] Number of equal calls: 34
Function: size--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 70 + 22
solving...
solved... in 0.035s
candidate Invariants
sort-->((((1 * res6._2) + (-7 * mult(size(l), size(l)))) + -6) ≤ 0)
sortedIns-->((((1 * res5._2) + (-7 * size(l))) + -3) ≤ 0)
size-->(((-2 * #res) + -1) ≤ 0)
Function: sort--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 143
Axiom pre1 implied 
Axiom pre2 implied 
Axiom pre2 implied 
Axiom pre1 implied 
Axiom pre not implied 
Axiom pre1 implied 
[[34m Info  [0m] Number of equal calls: 23
# of atomic predicates: 49 + 92
solving...
solved... in 0.05s
candidate Invariants
sort-->((((1 * res6._2) + (-9 * mult(size(l), size(l)))) + -6) ≤ 0)
sortedIns-->((((1 * res5._2) + (-7 * size(l))) + -3) ≤ 0)
size-->(((-2 * #res) + -1) ≤ 0)
Nesting level: a?1-->3
Nesting level: b?1-->0
minimizing...
Minimizing variable: a?1 Initial upperbound: 9
Found new lower bound: 4
Found new lower bound: 6
Found new lower bound: 7
Found new upper bound: 8
Minimizing variable: b?1 Initial upperbound: 6
Found new upper bound: 3
Found new lower bound: 1
Found new upper bound: 2
Minimization complete...
[[34m Info  [0m] - Found inductive invariant: sort --> ((((-8 * (size(l) * size(l))) + (1 * res6._2)) + -2) <= 0)
[[34m Info  [0m] - Found inductive invariant: sortedIns --> ((((1 * res5._2) + (-7 * size(l))) + -3) <= 0)
[[34m Info  [0m] - Found inductive invariant: size --> (((-2 * #res) + -1) <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[31m Error [0m] - Unable to prove or disprove invariant, the invariant is probably true
Inferrence did not succeeded for functions: List()
[[34m Info  [0m] - Dumping statistics
[[34m Info  [0m] . ┌─────────┐
          ╔═╡ Summary ╞═══════════════════════════════════════════════════════════════════════╗
          ║ └─────────┘                                                                       ║
          
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ total: 0      valid: 0      invalid: 0      unknown 0                       0.000 ║
          ╚═══════════════════════════════════════════════════════════════════════════════════╝
