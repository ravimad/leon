Total Time: 17.889s
Min Time: 0.782s
VC refinements : 34
Avg VC size : 278.61764705882354
Max VC size : 681
Avg UIF-ADT size : 83.3529411764706
Max UIF-ADT size : 194
avgTempVars : 3.411764705882353
maxTempVars : 4
### Farkas solver stats ####
Disjunct Explorations : 85
Total retries: 0
avgFarkaSize : 40.38823529411765
maxFarkaSize : 251
avgFarkaTime : 0.012352941176470589s
maxFarkaTime : 0.143s
avgNLSize : 5.5058823529411764
maxNLSize : 39
avgDijSize : 87.72941176470589
maxDijSize : 704
avgElimvars : 30.294117647058822
maxElimvars : 180
avgElimAtoms : 68.95294117647059
maxElimAtoms : 577
avgExploreTime : 0.1233529411764706s
maxExploreTime : 1.281s
avgCompatCalls : 182.8470588235294
maxCompatCalls : 2166
avgLemmaApps : 0.0
maxLemmaApps : 0
### Cegis solver stats #### 
# of bounds tried: 0
cegis iterations: 0
avgTemplateCtrSize : NaN
maxTemplateCtrSize : 0
########## Outputs ############
Invariants for Function: reverseRec
reverseRec --> ((((1 * res21._2) + (-5 * size(l1))) + -1) ≤ 0)
size --> (((-1 * #res) + -1) ≤ 0)

Invariants for Function: reverse
reverse --> ((((-5 * size(l)) + (1 * res23._2)) + -3) ≤ 0)
size --> (((-1 * #res) + -1) ≤ 0)
reverseRec --> ((((1 * res21._2) + (-5 * size(l1))) + -1) ≤ 0)

Invariants for Function: sizeList
sizeList --> ((((-4 * size(list)) + (1 * res17._2)) + -1) ≤ 0)
size --> (((0 * #res) + -1) ≤ 0)

Invariants for Function: concat
concat --> ((((1 * res18._2) + (-5 * size(l1))) + -1) ≤ 0)
size --> (((-1 * #res) + -2) ≤ 0)

Invariants for Function: removeLast
removeLast --> ((((352 * res24._2) + (-3168 * size(l))) + 1057) ≤ 0)
size --> (((-16 * #res) + -1) ≤ 0)

Invariants for Function: pop
pop --> ((((-4608 * size(q.front)) + (512 * res19._2)) + -3071) ≤ 0)
removeLast --> ((((352 * res24._2) + (-3168 * size(l))) + 1057) ≤ 0)
size --> (((-16 * #res) + -1) ≤ 0)
sizeList --> ((((-4 * size(list)) + (1 * res17._2)) + -1) ≤ 0)

Invariants for Function: enqueue
reverseRec --> ((((1 * res21._2) + (-5 * size(l1))) + -1) ≤ 0)
enqueue --> ((((-9 * qsize(q)) + (1 * res20._2)) + -26) ≤ 0)
sizeList --> ((((-4 * size(list)) + (1 * res17._2)) + -1) ≤ 0)
size --> (((-2 * #res) + -1) ≤ 0)
concat --> ((((1 * res18._2) + (-5 * size(l1))) + -1) ≤ 0)

Invariants for Function: dequeue
reverseRec --> ((((1 * res21._2) + (-5 * size(l1))) + -1) ≤ 0)
dequeue --> ((((1 * res22._2) + (-9 * qsize(q))) + -12) ≤ 0)
sizeList --> ((((-4 * size(list)) + (1 * res17._2)) + -1) ≤ 0)
size --> (((-2 * #res) + -1) ≤ 0)
concat --> ((((1 * res18._2) + (-5 * size(l1))) + -1) ≤ 0)


########## Lower Bounds ############
reverseRec: 	(a?2->4), (b?2->0), 
reverse: 	(a?3->4), (b?3->2), 
removeLast: 	(a?6->8), (b?6->-5), 
pop: 	(a?7->8), (b?7->5), 
enqueue: 	(a?4->8), (b?4->25), 
dequeue: 	(a?5->8), (b?5->11), 
sizeList: 	(a?->3), (b?->0), 
concat: 	(a?1->4), (b?1->0), 
