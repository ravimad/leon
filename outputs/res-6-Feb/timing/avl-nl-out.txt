After Depth Instrumentation: 
object AVLTree {
  sealed abstract class Tree

  case class None() extends OptionInt

  case class Some(i: Int) extends OptionInt

  sealed abstract class OptionInt

  case class Node(left: Tree, value: Int, right: Tree, rank: Int) extends Tree

  case class Leaf() extends Tree

  def balanceFactor(t : Tree) : Int = {(t match {
    case Leaf() =>
      0
    case Node(l, _, r, _) =>
      (rank(l) - rank(r))
  })}

  def rotateRight(t : Tree) : Tree = {(t match {
    case Node(Node(ll, vl, rl, _), v, r, _) =>
      locally {
        val hr = (max(rank(rl), rank(r)) + 1)
        Node(ll, vl, Node(rl, v, r, hr), (max(rank(ll), hr) + 1))
      }
      
    case _ =>
      t
  })}

  def avlInsert(t : Tree, e : Int) : Tree = {balance(unbalancedInsert(t, e))} ensuring(res => true)

  def size(t : Tree) : Int = {(t match {
    case Leaf() =>
      0
    case Node(l, _, r, _) =>
      ((size(l) + 1) + size(r))
  })} ensuring(res => true)

  def unbalancedInsert(t : Tree, e : Int) : Tree = {(t match {
    case Leaf() =>
      Node(Leaf(), e, Leaf(), 1)
    case Node(l, v, r, h) =>
      if ((e == v)) {
        t
      } else {
        if ((e < v)) {
          locally {
            val newl = avlInsert(l, e)
            Node(newl, v, r, (max(rank(newl), rank(r)) + 1))
          }
          
        } else {
          locally {
            val newr = avlInsert(r, e)
            Node(l, v, newr, (max(rank(l), rank(newr)) + 1))
          }
          
        }
      }
  })}

  def balance(t : Tree) : Tree = {(t match {
    case Leaf() =>
      Leaf()
    case Node(l, v, r, h) =>
      locally {
        val bfactor = balanceFactor(t)
        if ((bfactor > 1)) {
          locally {
            val newL = if ((balanceFactor(l) < 0)) {
              rotateLeft(l)
            } else {
              l
            }
            rotateRight(Node(newL, v, r, (max(rank(newL), rank(r)) + 1)))
          }
          
        } else {
          if ((bfactor < -1)) {
            locally {
              val newR = if ((balanceFactor(r) > 0)) {
                rotateRight(r)
              } else {
                r
              }
              rotateLeft(Node(l, v, newR, (max(rank(newR), rank(l)) + 1)))
            }
            
          } else {
            t
          }
        }
      }
      
  })}

  def avlDelete(t : Tree, e : Int) : Tree = {balance(unbalancedDelete(t, e))} ensuring(res => true)

  def height(t : Tree) : Int = {(t match {
    case Leaf() =>
      0
    case Node(l, x, r, _) =>
      locally {
        val hl = height(l)
        locally {
          val hr = height(r)
          (max(hl, hr) + 1)
        }
        
      }
      
  })}

  def rank(t : Tree) : Int = {(t match {
    case Leaf() =>
      0
    case Node(_, _, _, rk) =>
      rk
  })}

  def min(i1 : Int, i2 : Int) : Int = {if ((i1 <= i2)) {
    i1
  } else {
    i2
  }}

  def max(i1 : Int, i2 : Int) : Int = {if ((i1 >= i2)) {
    i1
  } else {
    i2
  }}

  def deleteMax(t : Tree) : (Tree, OptionInt) = {(t match {
    case Node(Leaf(), v, Leaf(), _) =>
      (Leaf(), Some(v))
    case Node(l, v, Leaf(), _) =>
      locally {
        val x$1 = (deleteMax(l) match {
          case (newl, opt) =>
            (newl, opt)
        })
        locally {
          val newl = x$1._1
          locally {
            val opt = x$1._2
            (opt match {
              case None() =>
                (t, None())
              case Some(lmax) =>
                locally {
                  val newt = balance(Node(newl, lmax, Leaf(), (rank(newl) + 1)))
                  (newt, Some(v))
                }
                
            })
          }
          
        }
        
      }
      
    case Node(_, _, r, _) =>
      deleteMax(r)
    case _ =>
      (t, None())
  })} ensuring(res => true)

  def unbalancedDelete(t : Tree, e : Int) : Tree = {(t match {
    case Leaf() =>
      Leaf()
    case Node(l, v, r, h) =>
      if ((e == v)) {
        if ((l == Leaf())) {
          r
        } else {
          if ((r == Leaf())) {
            l
          } else {
            locally {
              val x$2 = (deleteMax(l) match {
                case (newl, opt) =>
                  (newl, opt)
              })
              locally {
                val newl = x$2._1
                locally {
                  val opt = x$2._2
                  (opt match {
                    case None() =>
                      t
                    case Some(newe) =>
                      Node(newl, newe, r, (max(rank(newl), rank(r)) + 1))
                  })
                }
                
              }
              
            }
            
          }
        }
      } else {
        if ((e < v)) {
          locally {
            val newl = avlDelete(l, e)
            Node(newl, v, r, (max(rank(newl), rank(r)) + 1))
          }
          
        } else {
          locally {
            val newr = avlDelete(r, e)
            Node(l, v, newr, (max(rank(l), rank(newr)) + 1))
          }
          
        }
      }
  })}

  def rankHeight(t : Tree) : Boolean = {(t match {
    case Leaf() =>
      true
    case Node(l, _, r, rk) =>
      (rankHeight(l) && rankHeight(r) && (rk == height(t)))
  })}

  def rotateLeft(t : Tree) : Tree = {(t match {
    case Node(l, v, Node(lr, vr, rr, _), _) =>
      locally {
        val hl = (max(rank(l), rank(lr)) + 1)
        Node(Node(l, v, lr, hl), vr, rr, (max(hl, rank(rr)) + 1))
      }
      
    case _ =>
      t
  })}

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}
}

Defined fun: balanceFactor
Defined fun: rotateRight
Defined fun: avlInsert
Defined fun: size
Defined fun: unbalancedInsert
Defined fun: balance
Defined fun: avlDelete
Defined fun: height
Defined fun: rank
Defined fun: min
Defined fun: max
Defined fun: deleteMax
Defined fun: unbalancedDelete
Defined fun: rankHeight
Defined fun: rotateLeft
Defined fun: max
FunMap: Map(size -> size, height -> height, unbalancedDelete -> unbalancedDelete, avlInsert -> avlInsert, avlDelete -> avlDelete, max -> max, rankHeight -> rankHeight, rotateLeft -> rotateLeft, min -> min, balance -> balance, balanceFactor -> balanceFactor, max -> max, rank -> rank, unbalancedInsert -> unbalancedInsert, deleteMax -> deleteMax, rotateRight -> rotateRight)
After Time Instrumentation: 
object AVLTree {
  sealed abstract class Tree

  case class None() extends OptionInt

  case class Some(i: Int) extends OptionInt

  sealed abstract class OptionInt

  case class Node(left: Tree, value: Int, right: Tree, rank: Int) extends Tree

  case class Leaf() extends Tree

  def balanceFactor(t : Tree) : (Int, Int) = {locally {
    val t253 = 1
    if (t.isInstanceOf[Leaf]) {
      (0, t253)
    } else {
      locally {
        val (e236: Int, t255: Int) = locally {
          val (e237: Int, t256: Int) = locally {
            val (e243: Int, t262: Int) = rank(t.left)
            (e243, (1 + (1 + t262)))
          }
          
          locally {
            val (e238: Int, t257: Int) = locally {
              val (e240: Int, t259: Int) = rank(t.right)
              (e240, (1 + (1 + t259)))
            }
            
            ((e237 - e238), (t257 + (t256 + 1)))
          }
          
        }
        
        (e236, (t253 + t255))
      }
      
    }
  }
  }

  def rotateRight(t : Tree) : (Tree, Int) = {locally {
    val t404 = 4
    if ((t.isInstanceOf[Node] && t.left.isInstanceOf[Node])) {
      locally {
        val (e379: Node, t405: Int) = locally {
          val (ir17: Int, it17: Int) = locally {
            val (e380: Int, t407: Int) = locally {
              val (e382: Int, t409: Int) = locally {
                val (e389: Int, t416: Int) = rank(t.left.right)
                (e389, (2 + (1 + t416)))
              }
              
              locally {
                val (e383: Int, t410: Int) = locally {
                  val (e386: Int, t413: Int) = rank(t.right)
                  (e386, (1 + (1 + t413)))
                }
                
                locally {
                  val (e384: Int, t411: Int) = max(e382, e383)
                  (e384, (t410 + (t409 + (1 + t411))))
                }
                
              }
              
            }
            
            ((e380 + 1), (t407 + 1))
          }
          
          locally {
            val (r27: Node, t406: Int) = locally {
              val (e395: Int, t422: Int) = locally {
                val (e396: Int, t423: Int) = locally {
                  val (e398: Int, t425: Int) = locally {
                    val (e402: Int, t429: Int) = rank(t.left.left)
                    (e402, (2 + (1 + t429)))
                  }
                  
                  locally {
                    val (e400: Int, t427: Int) = max(e398, ir17)
                    (e400, (t425 + (1 + t427)))
                  }
                  
                }
                
                ((e396 + 1), (t423 + 1))
              }
              
              (Node(t.left.left, t.left.value, Node(t.left.right, t.value, t.right, ir17), e395), (t422 + 10))
            }
            
            (r27, (t406 + (it17 + 1)))
          }
          
        }
        
        (e379, (t404 + t405))
      }
      
    } else {
      (t, t404)
    }
  }
  }

  def avlInsert(t : Tree, e : Int) : (Tree, Int) = {locally {
    val (e103: Tree, t118: Int) = locally {
      val (e107: Tree, t122: Int) = unbalancedInsert(t, e)
      (e107, (1 + t122))
    }
    
    locally {
      val (e104: Tree, t119: Int) = balance(e103)
      (e104, (t118 + (1 + t119)))
    }
    
  }
  } ensuring(res10 => true)

  def size(t : Tree) : Int = {(t match {
    case Leaf() =>
      0
    case Node(l, _, r, _) =>
      ((size(l) + 1) + size(r))
  })} ensuring(res9 => true)

  def unbalancedInsert(t : Tree, e : Int) : (Tree, Int) = {locally {
    val t275 = 1
    if (t.isInstanceOf[Leaf]) {
      (Node(Leaf(), e, Leaf(), 1), (t275 + 3))
    } else {
      locally {
        val (e262: Tree, t281: Int) = locally {
          val t282 = 2
          if ((e == t.value)) {
            (t, t282)
          } else {
            locally {
              val (e265: Node, t284: Int) = locally {
                val t285 = 2
                if ((e < t.value)) {
                  locally {
                    val (e267: Node, t286: Int) = locally {
                      val (ir10: Tree, it10: Int) = locally {
                        val (e270: Tree, t290: Int) = avlInsert(t.left, e)
                        (e270, (1 + (1 + t290)))
                      }
                      
                      locally {
                        val (r20: Node, t287: Int) = locally {
                          val (e275: Int, t295: Int) = locally {
                            val (e276: Int, t296: Int) = locally {
                              val (e278: Int, t298: Int) = locally {
                                val (e285: Int, t305: Int) = rank(ir10)
                                (e285, (1 + t305))
                              }
                              
                              locally {
                                val (e279: Int, t299: Int) = locally {
                                  val (e282: Int, t302: Int) = rank(t.right)
                                  (e282, (1 + (1 + t302)))
                                }
                                
                                locally {
                                  val (e280: Int, t300: Int) = max(e278, e279)
                                  (e280, (t299 + (t298 + (1 + t300))))
                                }
                                
                              }
                              
                            }
                            
                            ((e276 + 1), (t296 + 1))
                          }
                          
                          (Node(ir10, t.value, t.right, e275), (t295 + 3))
                        }
                        
                        (r20, (t287 + (it10 + 1)))
                      }
                      
                    }
                    
                    (e267, (t285 + t286))
                  }
                  
                } else {
                  locally {
                    val (e288: Node, t308: Int) = locally {
                      val (ir11: Tree, it11: Int) = locally {
                        val (e291: Tree, t312: Int) = avlInsert(t.right, e)
                        (e291, (1 + (1 + t312)))
                      }
                      
                      locally {
                        val (r21: Node, t309: Int) = locally {
                          val (e296: Int, t317: Int) = locally {
                            val (e297: Int, t318: Int) = locally {
                              val (e299: Int, t320: Int) = locally {
                                val (e305: Int, t326: Int) = rank(t.left)
                                (e305, (1 + (1 + t326)))
                              }
                              
                              locally {
                                val (e300: Int, t321: Int) = locally {
                                  val (e303: Int, t324: Int) = rank(ir11)
                                  (e303, (1 + t324))
                                }
                                
                                locally {
                                  val (e301: Int, t322: Int) = max(e299, e300)
                                  (e301, (t321 + (t320 + (1 + t322))))
                                }
                                
                              }
                              
                            }
                            
                            ((e297 + 1), (t318 + 1))
                          }
                          
                          (Node(t.left, t.value, ir11, e296), (t317 + 3))
                        }
                        
                        (r21, (t309 + (it11 + 1)))
                      }
                      
                    }
                    
                    (e288, (t285 + t308))
                  }
                  
                }
              }
              
              (e265, (t282 + t284))
            }
            
          }
        }
        
        (e262, (t275 + t281))
      }
      
    }
  }
  }

  def balance(t : Tree) : (Tree, Int) = {locally {
    val t174 = 1
    if (t.isInstanceOf[Leaf]) {
      (Leaf(), (t174 + 1))
    } else {
      locally {
        val (e160: Tree, t176: Int) = locally {
          val (ir7: Int, it7: Int) = locally {
            val (e162: Int, t179: Int) = balanceFactor(t)
            (e162, (1 + t179))
          }
          
          locally {
            val (r17: Tree, t177: Int) = locally {
              val t180 = 1
              if ((ir7 > 1)) {
                locally {
                  val (e164: Tree, t181: Int) = locally {
                    val (ir8: Tree, it8: Int) = locally {
                      val (e165: Boolean, t183: Int) = locally {
                        val (e172: Int, t190: Int) = locally {
                          val (e175: Int, t193: Int) = balanceFactor(t.left)
                          (e175, (1 + (1 + t193)))
                        }
                        
                        ((e172 < 0), (t190 + 1))
                      }
                      
                      if (e165) {
                        locally {
                          val (e166: Tree, t184: Int) = locally {
                            val (e168: Tree, t186: Int) = rotateLeft(t.left)
                            (e168, (1 + (1 + t186)))
                          }
                          
                          (e166, (t183 + t184))
                        }
                        
                      } else {
                        (t.left, (t183 + 1))
                      }
                    }
                    
                    locally {
                      val (r18: Tree, t182: Int) = locally {
                        val (e177: Node, t195: Int) = locally {
                          val (e182: Int, t200: Int) = locally {
                            val (e183: Int, t201: Int) = locally {
                              val (e185: Int, t203: Int) = locally {
                                val (e192: Int, t210: Int) = rank(ir8)
                                (e192, (1 + t210))
                              }
                              
                              locally {
                                val (e186: Int, t204: Int) = locally {
                                  val (e189: Int, t207: Int) = rank(t.right)
                                  (e189, (1 + (1 + t207)))
                                }
                                
                                locally {
                                  val (e187: Int, t205: Int) = max(e185, e186)
                                  (e187, (t204 + (t203 + (1 + t205))))
                                }
                                
                              }
                              
                            }
                            
                            ((e183 + 1), (t201 + 1))
                          }
                          
                          (Node(ir8, t.value, t.right, e182), (t200 + 3))
                        }
                        
                        locally {
                          val (e178: Tree, t196: Int) = rotateRight(e177)
                          (e178, (t195 + (1 + t196)))
                        }
                        
                      }
                      
                      (r18, (t182 + (it8 + 1)))
                    }
                    
                  }
                  
                  (e164, (t180 + t181))
                }
                
              } else {
                locally {
                  val (e195: Tree, t213: Int) = locally {
                    val t214 = 1
                    if ((ir7 < -1)) {
                      locally {
                        val (e197: Tree, t215: Int) = locally {
                          val (ir9: Tree, it9: Int) = locally {
                            val (e198: Boolean, t217: Int) = locally {
                              val (e205: Int, t224: Int) = locally {
                                val (e208: Int, t227: Int) = balanceFactor(t.right)
                                (e208, (1 + (1 + t227)))
                              }
                              
                              ((e205 > 0), (t224 + 1))
                            }
                            
                            if (e198) {
                              locally {
                                val (e199: Tree, t218: Int) = locally {
                                  val (e201: Tree, t220: Int) = rotateRight(t.right)
                                  (e201, (1 + (1 + t220)))
                                }
                                
                                (e199, (t217 + t218))
                              }
                              
                            } else {
                              (t.right, (t217 + 1))
                            }
                          }
                          
                          locally {
                            val (r19: Tree, t216: Int) = locally {
                              val (e210: Node, t229: Int) = locally {
                                val (e215: Int, t234: Int) = locally {
                                  val (e216: Int, t235: Int) = locally {
                                    val (e218: Int, t237: Int) = locally {
                                      val (e225: Int, t244: Int) = rank(ir9)
                                      (e225, (1 + t244))
                                    }
                                    
                                    locally {
                                      val (e219: Int, t238: Int) = locally {
                                        val (e222: Int, t241: Int) = rank(t.left)
                                        (e222, (1 + (1 + t241)))
                                      }
                                      
                                      locally {
                                        val (e220: Int, t239: Int) = max(e218, e219)
                                        (e220, (t238 + (t237 + (1 + t239))))
                                      }
                                      
                                    }
                                    
                                  }
                                  
                                  ((e216 + 1), (t235 + 1))
                                }
                                
                                (Node(t.left, t.value, ir9, e215), (t234 + 3))
                              }
                              
                              locally {
                                val (e211: Tree, t230: Int) = rotateLeft(e210)
                                (e211, (t229 + (1 + t230)))
                              }
                              
                            }
                            
                            (r19, (t216 + (it9 + 1)))
                          }
                          
                        }
                        
                        (e197, (t214 + t215))
                      }
                      
                    } else {
                      (t, t214)
                    }
                  }
                  
                  (e195, (t180 + t213))
                }
                
              }
            }
            
            (r17, (t177 + (it7 + 1)))
          }
          
        }
        
        (e160, (t174 + t176))
      }
      
    }
  }
  }

  def avlDelete(t : Tree, e : Int) : (Tree, Int) = {locally {
    val (e108: Tree, t123: Int) = locally {
      val (e112: Tree, t127: Int) = unbalancedDelete(t, e)
      (e112, (1 + t127))
    }
    
    locally {
      val (e109: Tree, t124: Int) = balance(e108)
      (e109, (t123 + (1 + t124)))
    }
    
  }
  } ensuring(res11 => true)

  def height(t : Tree) : Int = {(t match {
    case Leaf() =>
      0
    case Node(l, x, r, _) =>
      locally {
        val hl = height(l)
        locally {
          val hr = height(r)
          (max(hl, hr)._1 + 1)
        }
        
      }
      
  })}

  def rank(t : Tree) : (Int, Int) = {locally {
    val t270 = 1
    if (t.isInstanceOf[Leaf]) {
      (0, t270)
    } else {
      (t.rank, (t270 + 1))
    }
  }
  }

  def min(i1 : Int, i2 : Int) : Int = {if ((i1 <= i2)) {
    i1
  } else {
    i2
  }}

  def max(i1 : Int, i2 : Int) : (Int, Int) = {locally {
    val t265 = 1
    if ((i1 >= i2)) {
      (i1, t265)
    } else {
      (i2, t265)
    }
  }
  }

  def deleteMax(t : Tree) : ((Tree, OptionInt), Int) = {locally {
    val t337 = 6
    if ((t.isInstanceOf[Node] && t.left.isInstanceOf[Leaf] && t.right.isInstanceOf[Leaf])) {
      ((Leaf(), Some(t.value)), (t337 + 4))
    } else {
      locally {
        val (e322: (Tree, OptionInt), t343: Int) = locally {
          val t344 = 4
          if ((t.isInstanceOf[Node] && t.right.isInstanceOf[Leaf])) {
            locally {
              val (e324: (Tree, OptionInt), t345: Int) = locally {
                val (ir12: (Tree, OptionInt), it12: Int) = locally {
                  val (ir13: (Tree, OptionInt), it13: Int) = locally {
                    val (e326: (Tree, OptionInt), t349: Int) = deleteMax(t.left)
                    (e326, (1 + (1 + t349)))
                  }
                  
                  ((ir13._1, ir13._2), (3 + (it13 + 1)))
                }
                
                locally {
                  val (r22: (Tree, OptionInt), t346: Int) = locally {
                    val ir14 = ir12._1
                    locally {
                      val (r24: (Tree, OptionInt), t355: Int) = locally {
                        val ir15 = ir12._2
                        locally {
                          val (r25: (Tree, OptionInt), t357: Int) = locally {
                            val t359 = 1
                            if (ir15.isInstanceOf[None]) {
                              ((t, None()), (t359 + 2))
                            } else {
                              locally {
                                val (e338: (Tree, OptionInt), t363: Int) = locally {
                                  val (ir16: Tree, it16: Int) = locally {
                                    val (e339: Node, t365: Int) = locally {
                                      val (e344: Int, t370: Int) = locally {
                                        val (e345: Int, t371: Int) = locally {
                                          val (e348: Int, t374: Int) = rank(ir14)
                                          (e348, (1 + t374))
                                        }
                                        
                                        ((e345 + 1), (t371 + 1))
                                      }
                                      
                                      (Node(ir14, ir15.i, Leaf(), e344), (t370 + 3))
                                    }
                                    
                                    locally {
                                      val (e340: Tree, t366: Int) = balance(e339)
                                      (e340, (t365 + (1 + t366)))
                                    }
                                    
                                  }
                                  
                                  ((ir16, Some(t.value)), (3 + (it16 + 1)))
                                }
                                
                                (e338, (t359 + t363))
                              }
                              
                            }
                          }
                          
                          (r25, (t357 + 2))
                        }
                        
                      }
                      
                      (r24, (t355 + 2))
                    }
                    
                  }
                  
                  (r22, (t346 + (it12 + 1)))
                }
                
              }
              
              (e324, (t344 + t345))
            }
            
          } else {
            locally {
              val (e355: (Tree, OptionInt), t381: Int) = locally {
                val t382 = 1
                if (t.isInstanceOf[Node]) {
                  locally {
                    val (e357: (Tree, OptionInt), t383: Int) = locally {
                      val (e359: (Tree, OptionInt), t385: Int) = deleteMax(t.right)
                      (e359, (1 + (1 + t385)))
                    }
                    
                    (e357, (t382 + t383))
                  }
                  
                } else {
                  ((t, None()), (t382 + 2))
                }
              }
              
              (e355, (t344 + t381))
            }
            
          }
        }
        
        (e322, (t337 + t343))
      }
      
    }
  }
  } ensuring(res12 => true)

  def unbalancedDelete(t : Tree, e : Int) : (Tree, Int) = {locally {
    val t13 = 1
    if (t.isInstanceOf[Leaf]) {
      (Leaf(), (t13 + 1))
    } else {
      locally {
        val (e6: Tree, t15: Int) = locally {
          val t16 = 2
          if ((e == t.value)) {
            locally {
              val (e8: Tree, t17: Int) = locally {
                val t18 = 3
                if ((t.left == Leaf())) {
                  (t.right, (t18 + 1))
                } else {
                  locally {
                    val (e12: Tree, t21: Int) = locally {
                      val t22 = 3
                      if ((t.right == Leaf())) {
                        (t.left, (t22 + 1))
                      } else {
                        locally {
                          val (e16: Tree, t25: Int) = locally {
                            val (ir: (Tree, OptionInt), it: Int) = locally {
                              val (ir1: (Tree, OptionInt), it1: Int) = locally {
                                val (e18: (Tree, OptionInt), t29: Int) = deleteMax(t.left)
                                (e18, (1 + (1 + t29)))
                              }
                              
                              ((ir1._1, ir1._2), (3 + (it1 + 1)))
                            }
                            
                            locally {
                              val (r10: Tree, t26: Int) = locally {
                                val ir2 = ir._1
                                locally {
                                  val (r12: Tree, t35: Int) = locally {
                                    val ir3 = ir._2
                                    locally {
                                      val (r13: Tree, t37: Int) = locally {
                                        val t39 = 1
                                        if (ir3.isInstanceOf[None]) {
                                          (t, t39)
                                        } else {
                                          locally {
                                            val (e28: Node, t41: Int) = locally {
                                              val (e32: Int, t45: Int) = locally {
                                                val (e33: Int, t46: Int) = locally {
                                                  val (e35: Int, t48: Int) = locally {
                                                    val (e42: Int, t55: Int) = rank(ir2)
                                                    (e42, (1 + t55))
                                                  }
                                                  
                                                  locally {
                                                    val (e36: Int, t49: Int) = locally {
                                                      val (e39: Int, t52: Int) = rank(t.right)
                                                      (e39, (1 + (1 + t52)))
                                                    }
                                                    
                                                    locally {
                                                      val (e37: Int, t50: Int) = max(e35, e36)
                                                      (e37, (t49 + (t48 + (1 + t50))))
                                                    }
                                                    
                                                  }
                                                  
                                                }
                                                
                                                ((e33 + 1), (t46 + 1))
                                              }
                                              
                                              (Node(ir2, ir3.i, t.right, e32), (t45 + 3))
                                            }
                                            
                                            (e28, (t39 + t41))
                                          }
                                          
                                        }
                                      }
                                      
                                      (r13, (t37 + 2))
                                    }
                                    
                                  }
                                  
                                  (r12, (t35 + 2))
                                }
                                
                              }
                              
                              (r10, (t26 + (it + 1)))
                            }
                            
                          }
                          
                          (e16, (t22 + t25))
                        }
                        
                      }
                    }
                    
                    (e12, (t18 + t21))
                  }
                  
                }
              }
              
              (e8, (t16 + t17))
            }
            
          } else {
            locally {
              val (e52: Node, t65: Int) = locally {
                val t66 = 2
                if ((e < t.value)) {
                  locally {
                    val (e54: Node, t67: Int) = locally {
                      val (ir4: Tree, it4: Int) = locally {
                        val (e57: Tree, t71: Int) = avlDelete(t.left, e)
                        (e57, (1 + (1 + t71)))
                      }
                      
                      locally {
                        val (r14: Node, t68: Int) = locally {
                          val (e62: Int, t76: Int) = locally {
                            val (e63: Int, t77: Int) = locally {
                              val (e65: Int, t79: Int) = locally {
                                val (e72: Int, t86: Int) = rank(ir4)
                                (e72, (1 + t86))
                              }
                              
                              locally {
                                val (e66: Int, t80: Int) = locally {
                                  val (e69: Int, t83: Int) = rank(t.right)
                                  (e69, (1 + (1 + t83)))
                                }
                                
                                locally {
                                  val (e67: Int, t81: Int) = max(e65, e66)
                                  (e67, (t80 + (t79 + (1 + t81))))
                                }
                                
                              }
                              
                            }
                            
                            ((e63 + 1), (t77 + 1))
                          }
                          
                          (Node(ir4, t.value, t.right, e62), (t76 + 3))
                        }
                        
                        (r14, (t68 + (it4 + 1)))
                      }
                      
                    }
                    
                    (e54, (t66 + t67))
                  }
                  
                } else {
                  locally {
                    val (e75: Node, t89: Int) = locally {
                      val (ir5: Tree, it5: Int) = locally {
                        val (e78: Tree, t93: Int) = avlDelete(t.right, e)
                        (e78, (1 + (1 + t93)))
                      }
                      
                      locally {
                        val (r15: Node, t90: Int) = locally {
                          val (e83: Int, t98: Int) = locally {
                            val (e84: Int, t99: Int) = locally {
                              val (e86: Int, t101: Int) = locally {
                                val (e92: Int, t107: Int) = rank(t.left)
                                (e92, (1 + (1 + t107)))
                              }
                              
                              locally {
                                val (e87: Int, t102: Int) = locally {
                                  val (e90: Int, t105: Int) = rank(ir5)
                                  (e90, (1 + t105))
                                }
                                
                                locally {
                                  val (e88: Int, t103: Int) = max(e86, e87)
                                  (e88, (t102 + (t101 + (1 + t103))))
                                }
                                
                              }
                              
                            }
                            
                            ((e84 + 1), (t99 + 1))
                          }
                          
                          (Node(t.left, t.value, ir5, e83), (t98 + 3))
                        }
                        
                        (r15, (t90 + (it5 + 1)))
                      }
                      
                    }
                    
                    (e75, (t66 + t89))
                  }
                  
                }
              }
              
              (e52, (t16 + t65))
            }
            
          }
        }
        
        (e6, (t13 + t15))
      }
      
    }
  }
  }

  def rankHeight(t : Tree) : Boolean = {(t match {
    case Leaf() =>
      true
    case Node(l, _, r, rk) =>
      (rankHeight(l) && rankHeight(r) && (rk == height(t)))
  })}

  def rotateLeft(t : Tree) : (Tree, Int) = {locally {
    val t128 = 4
    if ((t.isInstanceOf[Node] && t.right.isInstanceOf[Node])) {
      locally {
        val (e114: Node, t129: Int) = locally {
          val (ir6: Int, it6: Int) = locally {
            val (e115: Int, t131: Int) = locally {
              val (e117: Int, t133: Int) = locally {
                val (e125: Int, t141: Int) = rank(t.left)
                (e125, (1 + (1 + t141)))
              }
              
              locally {
                val (e118: Int, t134: Int) = locally {
                  val (e121: Int, t137: Int) = rank(t.right.left)
                  (e121, (2 + (1 + t137)))
                }
                
                locally {
                  val (e119: Int, t135: Int) = max(e117, e118)
                  (e119, (t134 + (t133 + (1 + t135))))
                }
                
              }
              
            }
            
            ((e115 + 1), (t131 + 1))
          }
          
          locally {
            val (r16: Node, t130: Int) = locally {
              val (e130: Int, t146: Int) = locally {
                val (e131: Int, t147: Int) = locally {
                  val (e134: Int, t150: Int) = locally {
                    val (e137: Int, t153: Int) = rank(t.right.right)
                    (e137, (2 + (1 + t153)))
                  }
                  
                  locally {
                    val (e135: Int, t151: Int) = max(ir6, e134)
                    (e135, (t150 + (1 + t151)))
                  }
                  
                }
                
                ((e131 + 1), (t147 + 1))
              }
              
              (Node(Node(t.left, t.value, t.right.left, ir6), t.right.value, t.right.right, e130), (t146 + 10))
            }
            
            (r16, (t130 + (it6 + 1)))
          }
          
        }
        
        (e114, (t128 + t129))
      }
      
    } else {
      (t, t128)
    }
  }
  }

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}
}

New Prog: 
object AVLTree {
  sealed abstract class Tree

  case class None() extends OptionInt

  case class Some(i: Int) extends OptionInt

  sealed abstract class OptionInt

  case class Node(left: Tree, value: Int, right: Tree, rank: Int) extends Tree

  case class Leaf() extends Tree

  def balanceFactor(t : Tree) : (Int, Int) = {if (t.isInstanceOf[Leaf]) {
    (0, 1)
  } else {
    locally {
      val (e236: Int, t255: Int) = locally {
        val (e237: Int, t256: Int) = locally {
          val (e243: Int, t262: Int) = rank(t.left)
          (e243, (1 + (1 + t262)))
        }
        
        locally {
          val (e238: Int, t257: Int) = locally {
            val (e240: Int, t259: Int) = rank(t.right)
            (e240, (1 + (1 + t259)))
          }
          
          ((e237 - e238), (t257 + (t256 + 1)))
        }
        
      }
      
      (e236, (1 + t255))
    }
    
  }}

  def rotateRight(t : Tree) : (Tree, Int) = {if ((t.isInstanceOf[Node] && t.left.isInstanceOf[Node])) {
    locally {
      val (e379: Node, t405: Int) = locally {
        val (ir17: Int, it17: Int) = locally {
          val (e380: Int, t407: Int) = locally {
            val (e382: Int, t409: Int) = locally {
              val (e389: Int, t416: Int) = rank(t.left.right)
              (e389, (2 + (1 + t416)))
            }
            
            locally {
              val (e383: Int, t410: Int) = locally {
                val (e386: Int, t413: Int) = rank(t.right)
                (e386, (1 + (1 + t413)))
              }
              
              locally {
                val (e384: Int, t411: Int) = max(e382, e383)
                (e384, (t410 + (t409 + (1 + t411))))
              }
              
            }
            
          }
          
          ((e380 + 1), (t407 + 1))
        }
        
        locally {
          val (r27: Node, t406: Int) = locally {
            val (e395: Int, t422: Int) = locally {
              val (e396: Int, t423: Int) = locally {
                val (e398: Int, t425: Int) = locally {
                  val (e402: Int, t429: Int) = rank(t.left.left)
                  (e402, (2 + (1 + t429)))
                }
                
                locally {
                  val (e400: Int, t427: Int) = max(e398, ir17)
                  (e400, (t425 + (1 + t427)))
                }
                
              }
              
              ((e396 + 1), (t423 + 1))
            }
            
            (Node(t.left.left, t.left.value, Node(t.left.right, t.value, t.right, ir17), e395), (t422 + 10))
          }
          
          (r27, (t406 + (it17 + 1)))
        }
        
      }
      
      (e379, (4 + t405))
    }
    
  } else {
    (t, 4)
  }}

  def avlInsert(t : Tree, e : Int) : (Tree, Int) = {locally {
    val (e103: Tree, t118: Int) = locally {
      val (e107: Tree, t122: Int) = unbalancedInsert(t, e)
      (e107, (1 + t122))
    }
    
    locally {
      val (e104: Tree, t119: Int) = balance(e103)
      (e104, (t118 + (1 + t119)))
    }
    
  }
  } ensuring(res10 => true)

  def size(t : Tree) : Int = {(t match {
    case Leaf() =>
      0
    case Node(l, _, r, _) =>
      ((size(l) + 1) + size(r))
  })} ensuring(res9 => true)

  def unbalancedInsert(t : Tree, e : Int) : (Tree, Int) = {if (t.isInstanceOf[Leaf]) {
    (Node(Leaf(), e, Leaf(), 1), (1 + 3))
  } else {
    locally {
      val (e262: Tree, t281: Int) = if ((e == t.value)) {
        (t, 2)
      } else {
        locally {
          val (e265: Node, t284: Int) = if ((e < t.value)) {
            locally {
              val (e267: Node, t286: Int) = locally {
                val (ir10: Tree, it10: Int) = locally {
                  val (e270: Tree, t290: Int) = avlInsert(t.left, e)
                  (e270, (1 + (1 + t290)))
                }
                
                locally {
                  val (r20: Node, t287: Int) = locally {
                    val (e275: Int, t295: Int) = locally {
                      val (e276: Int, t296: Int) = locally {
                        val (e278: Int, t298: Int) = locally {
                          val (e285: Int, t305: Int) = rank(ir10)
                          (e285, (1 + t305))
                        }
                        
                        locally {
                          val (e279: Int, t299: Int) = locally {
                            val (e282: Int, t302: Int) = rank(t.right)
                            (e282, (1 + (1 + t302)))
                          }
                          
                          locally {
                            val (e280: Int, t300: Int) = max(e278, e279)
                            (e280, (t299 + (t298 + (1 + t300))))
                          }
                          
                        }
                        
                      }
                      
                      ((e276 + 1), (t296 + 1))
                    }
                    
                    (Node(ir10, t.value, t.right, e275), (t295 + 3))
                  }
                  
                  (r20, (t287 + (it10 + 1)))
                }
                
              }
              
              (e267, (2 + t286))
            }
            
          } else {
            locally {
              val (e288: Node, t308: Int) = locally {
                val (ir11: Tree, it11: Int) = locally {
                  val (e291: Tree, t312: Int) = avlInsert(t.right, e)
                  (e291, (1 + (1 + t312)))
                }
                
                locally {
                  val (r21: Node, t309: Int) = locally {
                    val (e296: Int, t317: Int) = locally {
                      val (e297: Int, t318: Int) = locally {
                        val (e299: Int, t320: Int) = locally {
                          val (e305: Int, t326: Int) = rank(t.left)
                          (e305, (1 + (1 + t326)))
                        }
                        
                        locally {
                          val (e300: Int, t321: Int) = locally {
                            val (e303: Int, t324: Int) = rank(ir11)
                            (e303, (1 + t324))
                          }
                          
                          locally {
                            val (e301: Int, t322: Int) = max(e299, e300)
                            (e301, (t321 + (t320 + (1 + t322))))
                          }
                          
                        }
                        
                      }
                      
                      ((e297 + 1), (t318 + 1))
                    }
                    
                    (Node(t.left, t.value, ir11, e296), (t317 + 3))
                  }
                  
                  (r21, (t309 + (it11 + 1)))
                }
                
              }
              
              (e288, (2 + t308))
            }
            
          }
          (e265, (2 + t284))
        }
        
      }
      (e262, (1 + t281))
    }
    
  }}

  def balance(t : Tree) : (Tree, Int) = {if (t.isInstanceOf[Leaf]) {
    (Leaf(), (1 + 1))
  } else {
    locally {
      val (e160: Tree, t176: Int) = locally {
        val (ir7: Int, it7: Int) = locally {
          val (e162: Int, t179: Int) = balanceFactor(t)
          (e162, (1 + t179))
        }
        
        locally {
          val (r17: Tree, t177: Int) = if ((ir7 > 1)) {
            locally {
              val (e164: Tree, t181: Int) = locally {
                val (ir8: Tree, it8: Int) = locally {
                  val (e165: Boolean, t183: Int) = locally {
                    val (e172: Int, t190: Int) = locally {
                      val (e175: Int, t193: Int) = balanceFactor(t.left)
                      (e175, (1 + (1 + t193)))
                    }
                    
                    ((e172 < 0), (t190 + 1))
                  }
                  
                  if (e165) {
                    locally {
                      val (e166: Tree, t184: Int) = locally {
                        val (e168: Tree, t186: Int) = rotateLeft(t.left)
                        (e168, (1 + (1 + t186)))
                      }
                      
                      (e166, (t183 + t184))
                    }
                    
                  } else {
                    (t.left, (t183 + 1))
                  }
                }
                
                locally {
                  val (r18: Tree, t182: Int) = locally {
                    val (e177: Node, t195: Int) = locally {
                      val (e182: Int, t200: Int) = locally {
                        val (e183: Int, t201: Int) = locally {
                          val (e185: Int, t203: Int) = locally {
                            val (e192: Int, t210: Int) = rank(ir8)
                            (e192, (1 + t210))
                          }
                          
                          locally {
                            val (e186: Int, t204: Int) = locally {
                              val (e189: Int, t207: Int) = rank(t.right)
                              (e189, (1 + (1 + t207)))
                            }
                            
                            locally {
                              val (e187: Int, t205: Int) = max(e185, e186)
                              (e187, (t204 + (t203 + (1 + t205))))
                            }
                            
                          }
                          
                        }
                        
                        ((e183 + 1), (t201 + 1))
                      }
                      
                      (Node(ir8, t.value, t.right, e182), (t200 + 3))
                    }
                    
                    locally {
                      val (e178: Tree, t196: Int) = rotateRight(e177)
                      (e178, (t195 + (1 + t196)))
                    }
                    
                  }
                  
                  (r18, (t182 + (it8 + 1)))
                }
                
              }
              
              (e164, (1 + t181))
            }
            
          } else {
            locally {
              val (e195: Tree, t213: Int) = if ((ir7 < -1)) {
                locally {
                  val (e197: Tree, t215: Int) = locally {
                    val (ir9: Tree, it9: Int) = locally {
                      val (e198: Boolean, t217: Int) = locally {
                        val (e205: Int, t224: Int) = locally {
                          val (e208: Int, t227: Int) = balanceFactor(t.right)
                          (e208, (1 + (1 + t227)))
                        }
                        
                        ((e205 > 0), (t224 + 1))
                      }
                      
                      if (e198) {
                        locally {
                          val (e199: Tree, t218: Int) = locally {
                            val (e201: Tree, t220: Int) = rotateRight(t.right)
                            (e201, (1 + (1 + t220)))
                          }
                          
                          (e199, (t217 + t218))
                        }
                        
                      } else {
                        (t.right, (t217 + 1))
                      }
                    }
                    
                    locally {
                      val (r19: Tree, t216: Int) = locally {
                        val (e210: Node, t229: Int) = locally {
                          val (e215: Int, t234: Int) = locally {
                            val (e216: Int, t235: Int) = locally {
                              val (e218: Int, t237: Int) = locally {
                                val (e225: Int, t244: Int) = rank(ir9)
                                (e225, (1 + t244))
                              }
                              
                              locally {
                                val (e219: Int, t238: Int) = locally {
                                  val (e222: Int, t241: Int) = rank(t.left)
                                  (e222, (1 + (1 + t241)))
                                }
                                
                                locally {
                                  val (e220: Int, t239: Int) = max(e218, e219)
                                  (e220, (t238 + (t237 + (1 + t239))))
                                }
                                
                              }
                              
                            }
                            
                            ((e216 + 1), (t235 + 1))
                          }
                          
                          (Node(t.left, t.value, ir9, e215), (t234 + 3))
                        }
                        
                        locally {
                          val (e211: Tree, t230: Int) = rotateLeft(e210)
                          (e211, (t229 + (1 + t230)))
                        }
                        
                      }
                      
                      (r19, (t216 + (it9 + 1)))
                    }
                    
                  }
                  
                  (e197, (1 + t215))
                }
                
              } else {
                (t, 1)
              }
              (e195, (1 + t213))
            }
            
          }
          (r17, (t177 + (it7 + 1)))
        }
        
      }
      
      (e160, (1 + t176))
    }
    
  }}

  def avlDelete(t : Tree, e : Int) : (Tree, Int) = {locally {
    val (e108: Tree, t123: Int) = locally {
      val (e112: Tree, t127: Int) = unbalancedDelete(t, e)
      (e112, (1 + t127))
    }
    
    locally {
      val (e109: Tree, t124: Int) = balance(e108)
      (e109, (t123 + (1 + t124)))
    }
    
  }
  } ensuring(res11 => true)

  def height(t : Tree) : Int = {(t match {
    case Leaf() =>
      0
    case Node(l, x, r, _) =>
      (max(height(l), height(r))._1 + 1)
  })}

  def rank(t : Tree) : (Int, Int) = {if (t.isInstanceOf[Leaf]) {
    (0, 1)
  } else {
    (t.rank, (1 + 1))
  }}

  def min(i1 : Int, i2 : Int) : Int = {if ((i1 <= i2)) {
    i1
  } else {
    i2
  }}

  def max(i1 : Int, i2 : Int) : (Int, Int) = {if ((i1 >= i2)) {
    (i1, 1)
  } else {
    (i2, 1)
  }}

  def deleteMax(t : Tree) : ((Tree, OptionInt), Int) = {if ((t.isInstanceOf[Node] && t.left.isInstanceOf[Leaf] && t.right.isInstanceOf[Leaf])) {
    ((Leaf(), Some(t.value)), (6 + 4))
  } else {
    locally {
      val (e322: (Tree, OptionInt), t343: Int) = if ((t.isInstanceOf[Node] && t.right.isInstanceOf[Leaf])) {
        locally {
          val (e324: (Tree, OptionInt), t345: Int) = locally {
            val (ir12: (Tree, OptionInt), it12: Int) = locally {
              val (ir13: (Tree, OptionInt), it13: Int) = locally {
                val (e326: (Tree, OptionInt), t349: Int) = deleteMax(t.left)
                (e326, (1 + (1 + t349)))
              }
              
              ((ir13._1, ir13._2), (3 + (it13 + 1)))
            }
            
            locally {
              val (r22: (Tree, OptionInt), t346: Int) = locally {
                val ir14 = ir12._1
                locally {
                  val (r24: (Tree, OptionInt), t355: Int) = locally {
                    val ir15 = ir12._2
                    locally {
                      val (r25: (Tree, OptionInt), t357: Int) = if (ir15.isInstanceOf[None]) {
                        ((t, None()), (1 + 2))
                      } else {
                        locally {
                          val (e338: (Tree, OptionInt), t363: Int) = locally {
                            val (ir16: Tree, it16: Int) = locally {
                              val (e339: Node, t365: Int) = locally {
                                val (e344: Int, t370: Int) = locally {
                                  val (e345: Int, t371: Int) = locally {
                                    val (e348: Int, t374: Int) = rank(ir14)
                                    (e348, (1 + t374))
                                  }
                                  
                                  ((e345 + 1), (t371 + 1))
                                }
                                
                                (Node(ir14, ir15.i, Leaf(), e344), (t370 + 3))
                              }
                              
                              locally {
                                val (e340: Tree, t366: Int) = balance(e339)
                                (e340, (t365 + (1 + t366)))
                              }
                              
                            }
                            
                            ((ir16, Some(t.value)), (3 + (it16 + 1)))
                          }
                          
                          (e338, (1 + t363))
                        }
                        
                      }
                      (r25, (t357 + 2))
                    }
                    
                  }
                  
                  (r24, (t355 + 2))
                }
                
              }
              
              (r22, (t346 + (it12 + 1)))
            }
            
          }
          
          (e324, (4 + t345))
        }
        
      } else {
        locally {
          val (e355: (Tree, OptionInt), t381: Int) = if (t.isInstanceOf[Node]) {
            locally {
              val (e357: (Tree, OptionInt), t383: Int) = locally {
                val (e359: (Tree, OptionInt), t385: Int) = deleteMax(t.right)
                (e359, (1 + (1 + t385)))
              }
              
              (e357, (1 + t383))
            }
            
          } else {
            ((t, None()), (1 + 2))
          }
          (e355, (4 + t381))
        }
        
      }
      (e322, (6 + t343))
    }
    
  }} ensuring(res12 => true)

  def unbalancedDelete(t : Tree, e : Int) : (Tree, Int) = {if (t.isInstanceOf[Leaf]) {
    (Leaf(), (1 + 1))
  } else {
    locally {
      val (e6: Tree, t15: Int) = if ((e == t.value)) {
        locally {
          val (e8: Tree, t17: Int) = if ((t.left == Leaf())) {
            (t.right, (3 + 1))
          } else {
            locally {
              val (e12: Tree, t21: Int) = if ((t.right == Leaf())) {
                (t.left, (3 + 1))
              } else {
                locally {
                  val (e16: Tree, t25: Int) = locally {
                    val (ir: (Tree, OptionInt), it: Int) = locally {
                      val (ir1: (Tree, OptionInt), it1: Int) = locally {
                        val (e18: (Tree, OptionInt), t29: Int) = deleteMax(t.left)
                        (e18, (1 + (1 + t29)))
                      }
                      
                      ((ir1._1, ir1._2), (3 + (it1 + 1)))
                    }
                    
                    locally {
                      val (r10: Tree, t26: Int) = locally {
                        val ir2 = ir._1
                        locally {
                          val (r12: Tree, t35: Int) = locally {
                            val ir3 = ir._2
                            locally {
                              val (r13: Tree, t37: Int) = if (ir3.isInstanceOf[None]) {
                                (t, 1)
                              } else {
                                locally {
                                  val (e28: Node, t41: Int) = locally {
                                    val (e32: Int, t45: Int) = locally {
                                      val (e33: Int, t46: Int) = locally {
                                        val (e35: Int, t48: Int) = locally {
                                          val (e42: Int, t55: Int) = rank(ir2)
                                          (e42, (1 + t55))
                                        }
                                        
                                        locally {
                                          val (e36: Int, t49: Int) = locally {
                                            val (e39: Int, t52: Int) = rank(t.right)
                                            (e39, (1 + (1 + t52)))
                                          }
                                          
                                          locally {
                                            val (e37: Int, t50: Int) = max(e35, e36)
                                            (e37, (t49 + (t48 + (1 + t50))))
                                          }
                                          
                                        }
                                        
                                      }
                                      
                                      ((e33 + 1), (t46 + 1))
                                    }
                                    
                                    (Node(ir2, ir3.i, t.right, e32), (t45 + 3))
                                  }
                                  
                                  (e28, (1 + t41))
                                }
                                
                              }
                              (r13, (t37 + 2))
                            }
                            
                          }
                          
                          (r12, (t35 + 2))
                        }
                        
                      }
                      
                      (r10, (t26 + (it + 1)))
                    }
                    
                  }
                  
                  (e16, (3 + t25))
                }
                
              }
              (e12, (3 + t21))
            }
            
          }
          (e8, (2 + t17))
        }
        
      } else {
        locally {
          val (e52: Node, t65: Int) = if ((e < t.value)) {
            locally {
              val (e54: Node, t67: Int) = locally {
                val (ir4: Tree, it4: Int) = locally {
                  val (e57: Tree, t71: Int) = avlDelete(t.left, e)
                  (e57, (1 + (1 + t71)))
                }
                
                locally {
                  val (r14: Node, t68: Int) = locally {
                    val (e62: Int, t76: Int) = locally {
                      val (e63: Int, t77: Int) = locally {
                        val (e65: Int, t79: Int) = locally {
                          val (e72: Int, t86: Int) = rank(ir4)
                          (e72, (1 + t86))
                        }
                        
                        locally {
                          val (e66: Int, t80: Int) = locally {
                            val (e69: Int, t83: Int) = rank(t.right)
                            (e69, (1 + (1 + t83)))
                          }
                          
                          locally {
                            val (e67: Int, t81: Int) = max(e65, e66)
                            (e67, (t80 + (t79 + (1 + t81))))
                          }
                          
                        }
                        
                      }
                      
                      ((e63 + 1), (t77 + 1))
                    }
                    
                    (Node(ir4, t.value, t.right, e62), (t76 + 3))
                  }
                  
                  (r14, (t68 + (it4 + 1)))
                }
                
              }
              
              (e54, (2 + t67))
            }
            
          } else {
            locally {
              val (e75: Node, t89: Int) = locally {
                val (ir5: Tree, it5: Int) = locally {
                  val (e78: Tree, t93: Int) = avlDelete(t.right, e)
                  (e78, (1 + (1 + t93)))
                }
                
                locally {
                  val (r15: Node, t90: Int) = locally {
                    val (e83: Int, t98: Int) = locally {
                      val (e84: Int, t99: Int) = locally {
                        val (e86: Int, t101: Int) = locally {
                          val (e92: Int, t107: Int) = rank(t.left)
                          (e92, (1 + (1 + t107)))
                        }
                        
                        locally {
                          val (e87: Int, t102: Int) = locally {
                            val (e90: Int, t105: Int) = rank(ir5)
                            (e90, (1 + t105))
                          }
                          
                          locally {
                            val (e88: Int, t103: Int) = max(e86, e87)
                            (e88, (t102 + (t101 + (1 + t103))))
                          }
                          
                        }
                        
                      }
                      
                      ((e84 + 1), (t99 + 1))
                    }
                    
                    (Node(t.left, t.value, ir5, e83), (t98 + 3))
                  }
                  
                  (r15, (t90 + (it5 + 1)))
                }
                
              }
              
              (e75, (2 + t89))
            }
            
          }
          (e52, (2 + t65))
        }
        
      }
      (e6, (1 + t15))
    }
    
  }}

  def rankHeight(t : Tree) : Boolean = {(t match {
    case Leaf() =>
      true
    case Node(l, _, r, rk) =>
      (rankHeight(l) && rankHeight(r) && (rk == height(t)))
  })}

  def rotateLeft(t : Tree) : (Tree, Int) = {if ((t.isInstanceOf[Node] && t.right.isInstanceOf[Node])) {
    locally {
      val (e114: Node, t129: Int) = locally {
        val (ir6: Int, it6: Int) = locally {
          val (e115: Int, t131: Int) = locally {
            val (e117: Int, t133: Int) = locally {
              val (e125: Int, t141: Int) = rank(t.left)
              (e125, (1 + (1 + t141)))
            }
            
            locally {
              val (e118: Int, t134: Int) = locally {
                val (e121: Int, t137: Int) = rank(t.right.left)
                (e121, (2 + (1 + t137)))
              }
              
              locally {
                val (e119: Int, t135: Int) = max(e117, e118)
                (e119, (t134 + (t133 + (1 + t135))))
              }
              
            }
            
          }
          
          ((e115 + 1), (t131 + 1))
        }
        
        locally {
          val (r16: Node, t130: Int) = locally {
            val (e130: Int, t146: Int) = locally {
              val (e131: Int, t147: Int) = locally {
                val (e134: Int, t150: Int) = locally {
                  val (e137: Int, t153: Int) = rank(t.right.right)
                  (e137, (2 + (1 + t153)))
                }
                
                locally {
                  val (e135: Int, t151: Int) = max(ir6, e134)
                  (e135, (t150 + (1 + t151)))
                }
                
              }
              
              ((e131 + 1), (t147 + 1))
            }
            
            (Node(Node(t.left, t.value, t.right.left, ir6), t.right.value, t.right.right, e130), (t146 + 10))
          }
          
          (r16, (t130 + (it6 + 1)))
        }
        
      }
      
      (e114, (4 + t129))
    }
    
  } else {
    (t, 4)
  }}

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}
}

Function: avlInsert template --> (res10._2 ≤ ((a?1 * height(t)) + b?1))
Function: size template --> (height(t) ≤ ((a? * res9) + b?))
Function: avlDelete template --> (res11._2 ≤ ((a?3 * height(t)) + b?3))
Function: deleteMax template --> (res12._2 ≤ ((a?2 * height(t)) + b?2))
[[34m Info  [0m] Running Invariant Inference Phase...
[[34m Info  [0m] Analysis Order: List(balanceFactor, rotateLeft, rotateRight, balance, height, avlInsert, unbalancedInsert, deleteMax, unbalancedDelete, avlDelete, rankHeight, size)
[[34m Info  [0m] - considering function avlInsert...
[[34m Info  [0m] Body: (let (e103,t118 := (let (e107,t122 := unbalancedInsert(t, e)) in
            (e107, (1 + t122)))) in
            (let (e104,t119 := balance(e103)) in
              (e104, (t118 + (1 + t119)))))
[[34m Info  [0m] Post: true
falttened Body: ((res10 == tp) && (arg == (t118 + (1 + t119))) && (tp == (e104, arg)) && (tres == r28) && (r28 == balance(e103)) && (t122 == ts) && (ts == tres1._2) && (e107 == ts1) && (ts1 == tres1._1) && (tres1 == r29) && (r29 == unbalancedInsert(t, e)) && (t118 == (1 + t122)) && (e104 == ts2) && (ts2 == tres._1) && (t119 == ts3) && (ts3 == tres._2) && (e103 == e107))
Flattened Post: ((ts4 > ((a?1 * r30) + b?1)) && (ts4 == res10._2) && (r30 == height(t)))
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlInsert-->((((0 * height(t)) + (1 * res10._2)) + 0) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 3
# of atomic predicates: 9 + 0
solving...
solved... in 0.016s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 3/3
Unrolled calls: Set((r28 == balance(e103)), (r29 == unbalancedInsert(t, e)), (r30 == height(t)))
Inlining (r28 == balance(e103))
Creating VC for unbalancedInsert
[[34m Info  [0m] - Number of new terms enumerated: 3
[[34m Info  [0m] - Template generated for function unbalancedInsert : (((a?5 * e) + a?4) ≤ 0)
Unrolling (r29 == unbalancedInsert(t, e))
Creating VC for height
[[34m Info  [0m] - Number of new terms enumerated: 2
[[34m Info  [0m] - Template generated for function height : (((a?7 * #res) + a?6) ≤ 0)
Unrolling (r30 == height(t))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlInsert-->((((1 * res10._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 308
[[34m Info  [0m] Number of equal calls: 28
# of atomic predicates: 16 + 0
solving...
solved... in 0.009s
candidate Invariants
avlInsert-->((((1 * res10._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + 1) ≤ 0)
height-->(((-1 * #res) + 5) ≤ 0)
Function: unbalancedInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 73
[[34m Info  [0m] Number of equal calls: 15
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 16 + 16
solving...
solved... in 0.009s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 9/35
Unrolled calls: Set((r52 == rank(ir21)), (r51 == rank(cs17)), (r73 == max(r71, r72)), (r66 == max(e490, e489)), (r50 == avlInsert(cs16, e)), (r65 == rank(ir24)), (r64 == rank(cs34)), (r35 == balanceFactor(e103)), (r53 == max(e461, e460)))
Inlining (r73 == max(r71, r72))
Inlining (r51 == rank(cs17))
Unrolling (r50 == avlInsert(cs16, e))
Inlining (r64 == rank(cs34))
Inlining (r66 == max(e490, e489))
Inlining (r35 == balanceFactor(e103))
Inlining (r65 == rank(ir24))
Inlining (r52 == rank(ir21))
Inlining (r53 == max(e461, e460))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlInsert-->((((0 * height(t)) + (1 * res10._2)) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 497
[[34m Info  [0m] Number of equal calls: 40
# of atomic predicates: 31 + 0
solving...
solved... in 0.01s
candidate Invariants
avlInsert-->((((8 * res10._2) + (-1 * height(t))) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + 1) ≤ 0)
height-->(((0 * #res) + 331) ≤ 0)
Function: unbalancedInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 82
[[34m Info  [0m] Number of equal calls: 16
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 19 + 31
solving...
solved... in 0.01s
candidate Invariants
avlInsert-->((((-46 * height(t)) + (1 * res10._2)) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((0 * #res) + -1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 956
[[34m Info  [0m] Number of equal calls: 55
# of atomic predicates: 44 + 50
solving...
solved... in 0.017s
candidate Invariants
avlInsert-->((((-341 * height(t)) + (8 * res10._2)) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((4 * #res) + -8) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 821
[[34m Info  [0m] Number of equal calls: 57
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 32 + 94
solving...
solved... in 0.015s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 20/34
Unrolled calls: Set((r43 == balanceFactor(cs8)), (r78 == rank(cs44)), (r38 == balanceFactor(cs4)), (r57 == avlInsert(cs24, e)), (r46 == rotateRight(cs10)), (r39 == rank(cs5)), (r44 == rank(ir19)), (r82 == height(cs24)), (r45 == rank(cs9)), (r55 == rank(ir22)), (r37 == rotateRight(e437)), (r54 == max(e470, e469)), (r47 == rotateLeft(e452)), (r80 == height(cs37)), (r41 == rank(ir18)), (r79 == rank(cs45)), (r42 == max(e448, e447)), (r40 == max(e433, e432)), (r70 == max(r68, r69)), (r56 == rank(cs23)))
Inlining (r38 == balanceFactor(cs4))
Inlining (r45 == rank(cs9))
Inlining (r39 == rank(cs5))
Inlining (r55 == rank(ir22))
Inlining (r78 == rank(cs44))
Inlining (r40 == max(e433, e432))
Unrolling (r80 == height(cs37))
Inlining (r47 == rotateLeft(e452))
Unrolling (r82 == height(cs24))
Inlining (r79 == rank(cs45))
Inlining (r42 == max(e448, e447))
Inlining (r70 == max(r68, r69))
Inlining (r43 == balanceFactor(cs8))
Unrolling (r57 == avlInsert(cs24, e))
Inlining (r56 == rank(cs23))
Inlining (r54 == max(e470, e469))
Inlining (r37 == rotateRight(e437))
Inlining (r44 == rank(ir19))
Inlining (r41 == rank(ir18))
Inlining (r46 == rotateRight(cs10))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlInsert-->((((0 * height(t)) + (1 * res10._2)) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 216
[[34m Info  [0m] Number of equal calls: 24
# of atomic predicates: 21 + 0
solving...
solved... in 0.008s
candidate Invariants
avlInsert-->((((2 * res10._2) + (-10 * height(t))) + -1) ≤ 0)
unbalancedInsert-->(((0 * e) + 1) ≤ 0)
height-->(((-24 * #res) + 107) ≤ 0)
Function: unbalancedInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 6
[[34m Info  [0m] Number of equal calls: 2
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 16 + 21
solving...
solved... in 0.008s
candidate Invariants
avlInsert-->((((2 * res10._2) + (-10 * height(t))) + -33) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-2 * #res) + -1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 1430
[[34m Info  [0m] Number of equal calls: 74
# of atomic predicates: 51 + 37
solving...
solved... in 0.014s
candidate Invariants
avlInsert-->((((-16 * height(t)) + (8 * res10._2)) + -147) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((2 * #res) + -8) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 216
[[34m Info  [0m] Number of equal calls: 24
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 31 + 88
solving...
solved... in 0.032s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 7/41
Unrolled calls: Set((r89 == rank(cs49)), (r88 == rank(cs48)), (r110 == max(e533, e532)), (r108 == rank(cs78)), (r111 == rank(cs90)), (r109 == rank(cs80)), (r107 == max(e537, ir26)))
Inlining (r110 == max(e533, e532))
Inlining (r108 == rank(cs78))
Inlining (r109 == rank(cs80))
Inlining (r107 == max(e537, ir26))
Inlining (r111 == rank(cs90))
Inlining (r88 == rank(cs48))
Inlining (r89 == rank(cs49))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlInsert-->((((1 * res10._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 623
[[34m Info  [0m] Number of equal calls: 46
# of atomic predicates: 43 + 0
solving...
solved... in 0.009s
candidate Invariants
avlInsert-->((((1 * height(t)) + (2 * res10._2)) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((1 * #res) + 37) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 623
[[34m Info  [0m] Number of equal calls: 46
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 56 + 43
solving...
solved... in 0.019s
candidate Invariants
avlInsert-->((((8 * res10._2) + (-1 * height(t))) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + 1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: unbalancedInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 6
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 8 + 99
solving...
solved... in 0.025s
candidate Invariants
avlInsert-->((((1 * res10._2) + (-39 * height(t))) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 1242
[[34m Info  [0m] Number of equal calls: 69
# of atomic predicates: 47 + 107
solving...
solved... in 0.073s
candidate Invariants
avlInsert-->((((2 * res10._2) + (-1 * height(t))) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((0 * #res) + 1) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 154
solving...
solved... in 0.058s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 6/34
Unrolled calls: Set((r83 == height(cs32)), (r61 == rank(cs31)), (r62 == rank(ir23)), (r36 == rotateLeft(cs)), (r60 == max(e481, e480)), (r92 == max(r90, r91)))
Inlining (r62 == rank(ir23))
Inlining (r61 == rank(cs31))
Inlining (r92 == max(r90, r91))
Inlining (r60 == max(e481, e480))
Inlining (r36 == rotateLeft(cs))
Unrolling (r83 == height(cs32))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlInsert-->((((0 * height(t)) + (1 * res10._2)) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 210
[[34m Info  [0m] Number of equal calls: 23
# of atomic predicates: 26 + 0
solving...
solved... in 0.007s
candidate Invariants
avlInsert-->((((1 * res10._2) + (-4 * height(t))) + -1) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-6 * #res) + 35) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 545
[[34m Info  [0m] Number of equal calls: 45
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 27 + 26
solving...
solved... in 0.013s
candidate Invariants
avlInsert-->((((2 * res10._2) + (-1 * height(t))) + -80) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((2 * #res) + -8) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 608
[[34m Info  [0m] Number of equal calls: 48
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 31 + 53
solving...
solved... in 0.015s
candidate Invariants
avlInsert-->((((4 * height(t)) + (8 * res10._2)) + 2) ≤ 0)
unbalancedInsert-->(((0 * e) + 1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: unbalancedInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 6
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 8 + 84
solving...
solved... in 0.02s
candidate Invariants
avlInsert-->((((-1 * height(t)) + (1 * res10._2)) + -42) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 1806
[[34m Info  [0m] Number of equal calls: 85
# of atomic predicates: 21 + 92
solving...
solved... in 0.023s
candidate Invariants
avlInsert-->((((1 * res10._2) + (-1 * height(t))) + -81) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 613
[[34m Info  [0m] Number of equal calls: 46
# of atomic predicates: 41 + 113
solving...
solved... in 0.056s
candidate Invariants
avlInsert-->((((-37 * height(t)) + (1 * res10._2)) + -6) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 1777
[[34m Info  [0m] Number of equal calls: 81
# of atomic predicates: 33 + 154
solving...
solved... in 0.064s
candidate Invariants
avlInsert-->((((1 * res10._2) + (-37 * height(t))) + -44) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 644
[[34m Info  [0m] Number of equal calls: 46
# of atomic predicates: 43 + 187
solving...
solved... in 0.086s
candidate Invariants
avlInsert-->((((1 * res10._2) + (-39 * height(t))) + -42) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 1137
[[34m Info  [0m] Number of equal calls: 71
# of atomic predicates: 21 + 230
solving...
solved... in 0.08s
candidate Invariants
avlInsert-->((((-60 * height(t)) + (1 * res10._2)) + -21) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2994
[[34m Info  [0m] Number of equal calls: 103
# of atomic predicates: 39 + 251
solving...
solved... in 0.119s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 5/36
Unrolled calls: Set((r132 == rank(cs121)), (r130 == max(ir28, e561)), (r128 == rank(cs118)), (r131 == rank(cs119)), (r129 == max(e557, e556)))
Inlining (r131 == rank(cs119))
Inlining (r130 == max(ir28, e561))
Inlining (r132 == rank(cs121))
Inlining (r128 == rank(cs118))
Inlining (r129 == max(e557, e556))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlInsert-->((((1 * res10._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 561
[[34m Info  [0m] Number of equal calls: 44
# of atomic predicates: 32 + 0
solving...
solved... in 0.007s
candidate Invariants
avlInsert-->((((1 * height(t)) + (2 * res10._2)) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + 1) ≤ 0)
height-->(((-8 * #res) + 83) ≤ 0)
Function: unbalancedInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 6
[[34m Info  [0m] Number of equal calls: 2
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 16 + 32
solving...
solved... in 0.01s
candidate Invariants
avlInsert-->((((-41 * height(t)) + (1 * res10._2)) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3375
[[34m Info  [0m] Number of equal calls: 108
# of atomic predicates: 36 + 48
solving...
solved... in 0.016s
candidate Invariants
avlInsert-->((((16 * res10._2) + (-8 * height(t))) + -1838) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((1 * #res) + 0) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3058
[[34m Info  [0m] Number of equal calls: 112
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 52 + 84
solving...
solved... in 0.034s
candidate Invariants
avlInsert-->((((-8 * height(t)) + (8 * res10._2)) + -913) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3480
[[34m Info  [0m] Number of equal calls: 108
# of atomic predicates: 17 + 136
solving...
solved... in 0.038s
candidate Invariants
avlInsert-->((((4 * res10._2) + (-1 * height(t))) + -468) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 592
[[34m Info  [0m] Number of equal calls: 47
# of atomic predicates: 36 + 153
solving...
solved... in 0.085s
candidate Invariants
avlInsert-->((((1 * res10._2) + (-39 * height(t))) + -115) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2667
[[34m Info  [0m] Number of equal calls: 96
# of atomic predicates: 89 + 189
solving...
solved... in 0.109s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 13/31
Unrolled calls: Set((r102 == rank(cs74)), (r95 == max(ir25, e517)), (r115 == max(e545, e544)), (r135 == max(r133, r134)), (r117 == rank(cs107)), (r114 == rank(cs95)), (r116 == rank(cs105)), (r103 == rank(cs75)), (r98 == rank(cs61)), (r96 == rank(cs58)), (r94 == max(e513, e512)), (r97 == rank(cs59)), (r113 == max(e549, ir27)))
Inlining (r114 == rank(cs95))
Inlining (r115 == max(e545, e544))
Inlining (r103 == rank(cs75))
Inlining (r97 == rank(cs59))
Inlining (r98 == rank(cs61))
Inlining (r94 == max(e513, e512))
Inlining (r96 == rank(cs58))
Inlining (r113 == max(e549, ir27))
Inlining (r95 == max(ir25, e517))
Inlining (r102 == rank(cs74))
Inlining (r117 == rank(cs107))
Inlining (r135 == max(r133, r134))
Inlining (r116 == rank(cs105))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlInsert-->((((1 * res10._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 644
[[34m Info  [0m] Number of equal calls: 46
# of atomic predicates: 47 + 0
solving...
solved... in 0.009s
candidate Invariants
avlInsert-->((((-107 * height(t)) + (64 * res10._2)) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + 1) ≤ 0)
height-->(((544 * #res) + 9080) ≤ 0)
Function: unbalancedInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 6
[[34m Info  [0m] Number of equal calls: 2
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 21 + 47
solving...
solved... in 0.015s
candidate Invariants
avlInsert-->((((1 * res10._2) + (-41 * height(t))) + 0) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3324
[[34m Info  [0m] Number of equal calls: 112
# of atomic predicates: 24 + 68
solving...
solved... in 0.018s
candidate Invariants
avlInsert-->((((-328 * height(t)) + (8 * res10._2)) + -619) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-8 * #res) + 1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 5257
[[34m Info  [0m] Number of equal calls: 134
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 132 + 92
solving...
timed out... in 20.17s
[[34m Info  [0m] NLsolver timed-out on the disjunct... blocking this disjunct...
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2923
[[34m Info  [0m] Number of equal calls: 110
# of atomic predicates: 56 + 92
solving...
solved... in 0.504s
candidate Invariants
avlInsert-->((((-792 * height(t)) + (8 * res10._2)) + -155) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-8 * #res) + 1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 5257
[[34m Info  [0m] Number of equal calls: 134
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 132 + 148
solving...
timed out... in 20.197s
[[34m Info  [0m] NLsolver timed-out on the disjunct... blocking this disjunct...
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 4937
[[34m Info  [0m] Number of equal calls: 137
# of atomic predicates: 60 + 148
solving...
solved... in 0.562s
candidate Invariants
avlInsert-->((((-1072 * height(t)) + (8 * res10._2)) + 125) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-8 * #res) + 1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 5257
[[34m Info  [0m] Number of equal calls: 134
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 132 + 208
solving...
timed out... in 20.247s
[[34m Info  [0m] NLsolver timed-out on the disjunct... blocking this disjunct...
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 5101
[[34m Info  [0m] Number of equal calls: 133
# of atomic predicates: 75 + 208
solving...
solved... in 0.796s
candidate Invariants
avlInsert-->((((-1096 * height(t)) + (8 * res10._2)) + 139) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-8 * #res) + -1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3717
[[34m Info  [0m] Number of equal calls: 110
# of atomic predicates: 25 + 283
solving...
timed out... in 20.183s
[[34m Info  [0m] NLsolver timed-out on the disjunct... blocking this disjunct...
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 5257
[[34m Info  [0m] Number of equal calls: 137
# of atomic predicates: 28 + 283
solving...
solved... in 0.14s
candidate Invariants
avlInsert-->((((4 * res10._2) + (-556 * height(t))) + 75) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-4 * #res) + -1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 132
[[34m Info  [0m] Number of equal calls: 20
# of atomic predicates: 12 + 311
solving...
solved... in 0.148s
candidate Invariants
avlInsert-->((((-139 * height(t)) + (1 * res10._2)) + -20) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: avlInsert--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 1840
[[34m Info  [0m] Number of equal calls: 82
# of atomic predicates: 34 + 323
solving...
solved... in 0.157s
candidate Invariants
avlInsert-->((((4 * res10._2) + (-556 * height(t))) + 1) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-8 * #res) + 1) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 357
solving...
solved... in 0.168s
candidate Invariants
avlInsert-->((((-139 * height(t)) + (1 * res10._2)) + -20) ≤ 0)
unbalancedInsert-->(((0 * e) + -1) ≤ 0)
height-->(((-2 * #res) + -1) ≤ 0)
Nesting level: a?1-->1
Nesting level: b?1-->0
minimizing...
Minimizing variable: a?1 Initial upperbound: 139
Found new lower bound: 69
Found new lower bound: 104
Found new lower bound: 121
Found new lower bound: 130
Found new lower bound: 134
Found new lower bound: 136
Found new lower bound: 137
Found new upper bound: 138
Minimizing variable: b?1 Initial upperbound: 82
Found new upper bound: 40
Found new upper bound: 19
Found new lower bound: 9
Found new lower bound: 14
Found new lower bound: 16
Found new lower bound: 17
Found new lower bound: 18
Minimization complete...
[[34m Info  [0m] - Found inductive invariant: avlInsert --> ((((-138 * height(t)) + (1 * res10._2)) + -19) <= 0)
[[34m Info  [0m] - Found inductive invariant: unbalancedInsert --> (((0 * e) + -1) <= 0)
[[34m Info  [0m] - Found inductive invariant: height --> (((-8 * #res) + -1) <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[34m Info  [0m] - Invariant verified
[[34m Info  [0m] - considering function deleteMax...
[[34m Info  [0m] Body: if ((t.isInstanceOf[Node] ∧ t.left.isInstanceOf[Leaf] ∧ t.right.isInstanceOf[Leaf]))
            ((Leaf(), Some(t.value)), (6 + 4))
          else
            (let (e322,t343 := if ((t.isInstanceOf[Node] ∧ t.right.isInstanceOf[Leaf]))
              (let (e324,t345 := (let (ir12,it12 := (let (ir13,it13 := (let (e326,t349 := deleteMax(t.left)) in
                (e326, (1 + (1 + t349))))) in
                ((ir13._1, ir13._2), (3 + (it13 + 1))))) in
                (let (r22,t346 := (let (ir14 := ir12._1) in
                  (let (r24,t355 := (let (ir15 := ir12._2) in
                    (let (r25,t357 := if (ir15.isInstanceOf[None])
                      ((t, None()), (1 + 2))
                    else
                      (let (e338,t363 := (let (ir16,it16 := (let (e339,t365 := (let (e344,t370 := (let (e345,t371 := (let (e348,t374 := rank(ir14)) in
                        (e348, (1 + t374)))) in
                        ((e345 + 1), (t371 + 1)))) in
                        (Node(ir14, ir15.i, Leaf(), e344), (t370 + 3)))) in
                        (let (e340,t366 := balance(e339)) in
                          (e340, (t365 + (1 + t366)))))) in
                        ((ir16, Some(t.value)), (3 + (it16 + 1))))) in
                        (e338, (1 + t363)))) in
                      (r25, (t357 + 2))))) in
                    (r24, (t355 + 2))))) in
                  (r22, (t346 + (it12 + 1)))))) in
                (e324, (4 + t345)))
            else
              (let (e355,t381 := if (t.isInstanceOf[Node])
                (let (e357,t383 := (let (e359,t385 := deleteMax(t.right)) in
                  (e359, (1 + (1 + t385))))) in
                  (e357, (1 + t383)))
              else
                ((t, None()), (1 + 2))) in
                (e355, (4 + t381)))) in
              (e322, (6 + t343)))
[[34m Info  [0m] Post: true
falttened Body: ((res12 == ifres71) && ((ci98 && (ci98 == t.isInstanceOf[Node]) && ci99 && (cs144 == t.left) && (ci99 == cs144.isInstanceOf[Leaf]) && ci100 && (cs145 == t.right) && (ci100 == cs145.isInstanceOf[Leaf]) && (ifres71 == tp136) && (cc21 == Leaf()) && (cs146 == t.value) && (cc22 == Some(cs146)) && (tp135 == (cc21, cc22)) && (arg170 == (6 + 4)) && (tp136 == (tp135, arg170))) || (((!(ci101) && (ci101 == t.isInstanceOf[Node])) || (!(ci102) && (cs147 == t.left) && (ci102 == cs147.isInstanceOf[Leaf])) || (!(ci103) && (cs148 == t.right) && (ci103 == cs148.isInstanceOf[Leaf]))) && (ifres71 == tp137) && (arg171 == (6 + t343)) && (tp137 == (e322, arg171)) && ((ci104 && (ci104 == t.isInstanceOf[Node]) && ci105 && (cs149 == t.right) && (ci105 == cs149.isInstanceOf[Leaf]) && (ifres72 == tp138) && (arg172 == (4 + t345)) && (tp138 == (e324, arg172)) && (e324 == r22) && (t355 == (t357 + 2)) && (r22 == r24) && (t346 == (t355 + 2)) && (r25 == ts193) && (ts193 == ifres73._1) && (t345 == (t346 + (it12 + 1))) && (r24 == r25) && (t357 == ts194) && (ts194 == ifres73._2) && (e326 == ts195) && (ts195 == tres63._1) && (it12 == (3 + (it13 + 1))) && (tres63 == r165) && (cs150 == t.left) && (r165 == deleteMax(cs150)) && ((ci106 && (ci106 == ir15.isInstanceOf[None]) && (ifres73 == tp140) && (cc23 == None()) && (tp139 == (t, cc23)) && (arg173 == (1 + 2)) && (tp140 == (tp139, arg173))) || (!(ci107) && (ci107 == ir15.isInstanceOf[None]) && (ifres73 == tp141) && (arg174 == (1 + t363)) && (tp141 == (e338, arg174)) && (it16 == (t365 + (1 + t366))) && (e338 == tp142) && (cs151 == t.value) && (cc24 == Some(cs151)) && (tp142 == (ir16, cc24)) && (e344 == (e345 + 1)) && (ir16 == e340) && (e339 == cc26) && (cs152 == ir15.i) && (cc25 == Leaf()) && (cc26 == Node(ir14, cs152, cc25, e344)) && (tres62 == r166) && (r166 == rank(ir14)) && (tres61 == r167) && (r167 == balance(e339)) && (t374 == ts196) && (ts196 == tres62._2) && (e345 == e348) && (e348 == ts197) && (ts197 == tres62._1) && (t370 == (t371 + 1)) && (t363 == (3 + (it16 + 1))) && (t365 == (t370 + 3)) && (t371 == (1 + t374)) && (t366 == ts198) && (ts198 == tres61._2) && (e340 == ts199) && (ts199 == tres61._1))) && (ir13 == e326) && (ir12 == tp143) && (ts200 == ir13._1) && (ts201 == ir13._2) && (tp143 == (ts200, ts201)) && (t349 == ts202) && (ts202 == tres63._2) && (ir14 == ts203) && (ts203 == ir12._1) && (it13 == (1 + (1 + t349))) && (ir15 == ts204) && (ts204 == ir12._2)) || (((!(ci108) && (ci108 == t.isInstanceOf[Node])) || (!(ci109) && (cs153 == t.right) && (ci109 == cs153.isInstanceOf[Leaf]))) && (ifres72 == tp144) && (arg175 == (4 + t381)) && (tp144 == (e355, arg175)) && ((ci110 && (ci110 == t.isInstanceOf[Node]) && (ifres74 == tp145) && (arg176 == (1 + t383)) && (tp145 == (e357, arg176)) && (t385 == ts205) && (ts205 == tres64._2) && (tres64 == r168) && (cs154 == t.right) && (r168 == deleteMax(cs154)) && (t383 == (1 + (1 + t385))) && (e357 == e359) && (e359 == ts206) && (ts206 == tres64._1)) || (!(ci111) && (ci111 == t.isInstanceOf[Node]) && (ifres74 == tp147) && (cc27 == None()) && (tp146 == (t, cc27)) && (arg177 == (1 + 2)) && (tp147 == (tp146, arg177)))) && (e355 == ts207) && (ts207 == ifres74._1) && (t381 == ts208) && (ts208 == ifres74._2))) && (e322 == ts209) && (ts209 == ifres72._1) && (t343 == ts210) && (ts210 == ifres72._2))))
Flattened Post: ((ts211 > ((a?2 * r169) + b?2)) && (ts211 == res12._2) && (r169 == height(t)))
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
deleteMax-->((((0 * height(t)) + (1 * res12._2)) + 0) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 73
[[34m Info  [0m] Number of equal calls: 15
# of atomic predicates: 9 + 0
solving...
solved... in 0.005s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 3/5
Unrolled calls: Set((r166 == rank(ir14)), (r169 == height(t)), (r167 == balance(e339)))
Inlining (r166 == rank(ir14))
Creating VC for height
Unrolling (r169 == height(t))
Inlining (r167 == balance(e339))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
deleteMax-->((((0 * height(t)) + (1 * res12._2)) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 71
[[34m Info  [0m] Number of equal calls: 12
# of atomic predicates: 13 + 0
solving...
solved... in 0.006s
candidate Invariants
deleteMax-->((((0 * height(t)) + (1 * res12._2)) + 0) ≤ 0)
height-->(((0 * #res) + 15) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 13
solving...
solved... in 0.006s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 2/23
Unrolled calls: Set((r176 == max(r174, r175)), (r194 == height(cs154)))
Inlining (r176 == max(r174, r175))
Unrolling (r194 == height(cs154))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
deleteMax-->((((1 * res12._2) + (0 * height(t))) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 87
[[34m Info  [0m] Number of equal calls: 17
# of atomic predicates: 18 + 0
solving...
solved... in 0.006s
candidate Invariants
deleteMax-->((((-1 * height(t)) + (1 * res12._2)) + 0) ≤ 0)
height-->(((0 * #res) + 8) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 18
solving...
solved... in 0.006s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-15 * height(t))) + 0) ≤ 0)
height-->(((0 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 162
[[34m Info  [0m] Number of equal calls: 27
# of atomic predicates: 22 + 26
solving...
solved... in 0.007s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-13 * height(t))) + 0) ≤ 0)
height-->(((16 * #res) + -8) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 162
[[34m Info  [0m] Number of equal calls: 27
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 34 + 48
solving...
solved... in 0.009s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 3/24
Unrolled calls: Set((r192 == balanceFactor(e339)), (r193 == height(cs150)), (r173 == max(r171, r172)))
Inlining (r192 == balanceFactor(e339))
Unrolling (r193 == height(cs150))
Inlining (r173 == max(r171, r172))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
deleteMax-->((((1 * res12._2) + (0 * height(t))) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 95
[[34m Info  [0m] Number of equal calls: 15
# of atomic predicates: 26 + 0
solving...
solved... in 0.007s
candidate Invariants
deleteMax-->((((8 * res12._2) + (-1 * height(t))) + 0) ≤ 0)
height-->(((0 * #res) + 119) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 26
solving...
solved... in 0.007s
candidate Invariants
deleteMax-->((((-21 * height(t)) + (1 * res12._2)) + 0) ≤ 0)
height-->(((0 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 259
[[34m Info  [0m] Number of equal calls: 40
# of atomic predicates: 21 + 34
solving...
solved... in 0.009s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-24 * height(t))) + 0) ≤ 0)
height-->(((1 * #res) + -8) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 270
[[34m Info  [0m] Number of equal calls: 37
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 41 + 55
solving...
solved... in 0.015s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-14 * height(t))) + 0) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 541
[[34m Info  [0m] Number of equal calls: 52
# of atomic predicates: 29 + 96
solving...
solved... in 0.023s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 10/26
Unrolled calls: Set((r204 == rank(cs174)), (r184 == balanceFactor(cs163)), (r181 == rank(ir29)), (r180 == rank(cs162)), (r205 == rank(cs175)), (r199 == max(r197, r198)), (r208 == max(r206, r207)), (r182 == max(e587, e586)), (r185 == rotateLeft(cs164)), (r183 == rotateRight(e591)))
Inlining (r199 == max(r197, r198))
Inlining (r182 == max(e587, e586))
Inlining (r185 == rotateLeft(cs164))
Inlining (r208 == max(r206, r207))
Inlining (r205 == rank(cs175))
Inlining (r180 == rank(cs162))
Inlining (r204 == rank(cs174))
Inlining (r183 == rotateRight(e591))
Inlining (r184 == balanceFactor(cs163))
Inlining (r181 == rank(ir29))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
deleteMax-->((((1 * res12._2) + (0 * height(t))) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 113
[[34m Info  [0m] Number of equal calls: 19
# of atomic predicates: 26 + 0
solving...
solved... in 0.006s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-2 * height(t))) + 0) ≤ 0)
height-->(((0 * #res) + 23) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 26
solving...
solved... in 0.007s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-15 * height(t))) + 0) ≤ 0)
height-->(((0 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 324
[[34m Info  [0m] Number of equal calls: 40
# of atomic predicates: 32 + 34
solving...
solved... in 0.015s
candidate Invariants
deleteMax-->((((-25 * height(t)) + (1 * res12._2)) + 0) ≤ 0)
height-->(((1 * #res) + -8) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 7
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 28 + 66
solving...
solved... in 0.019s
candidate Invariants
deleteMax-->((((-13 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 113
[[34m Info  [0m] Number of equal calls: 19
# of atomic predicates: 29 + 94
solving...
solved... in 0.023s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-25 * height(t))) + -13) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 324
[[34m Info  [0m] Number of equal calls: 40
# of atomic predicates: 40 + 123
solving...
solved... in 0.032s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-49 * height(t))) + -13) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 638
[[34m Info  [0m] Number of equal calls: 57
# of atomic predicates: 41 + 163
solving...
solved... in 0.043s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 5/28
Unrolled calls: Set((r186 == rank(ir30)), (r187 == rotateLeft(e606)), (r190 == max(e602, e601)), (r188 == rank(cs168)), (r189 == balanceFactor(cs169)))
Inlining (r186 == rank(ir30))
Inlining (r187 == rotateLeft(e606))
Inlining (r189 == balanceFactor(cs169))
Inlining (r190 == max(e602, e601))
Inlining (r188 == rank(cs168))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
deleteMax-->((((0 * height(t)) + (1 * res12._2)) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 98
[[34m Info  [0m] Number of equal calls: 16
# of atomic predicates: 26 + 0
solving...
solved... in 0.007s
candidate Invariants
deleteMax-->((((-1 * height(t)) + (2 * res12._2)) + 0) ≤ 0)
height-->(((0 * #res) + 29) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 26
solving...
solved... in 0.007s
candidate Invariants
deleteMax-->((((-21 * height(t)) + (1 * res12._2)) + 0) ≤ 0)
height-->(((0 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 301
[[34m Info  [0m] Number of equal calls: 41
# of atomic predicates: 27 + 34
solving...
solved... in 0.011s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-24 * height(t))) + 0) ≤ 0)
height-->(((1 * #res) + -8) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 793
[[34m Info  [0m] Number of equal calls: 64
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 53 + 61
solving...
solved... in 0.02s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-14 * height(t))) + 0) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 324
[[34m Info  [0m] Number of equal calls: 39
# of atomic predicates: 33 + 114
solving...
solved... in 0.03s
candidate Invariants
deleteMax-->((((-25 * height(t)) + (1 * res12._2)) + 0) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 793
[[34m Info  [0m] Number of equal calls: 64
# of atomic predicates: 32 + 147
solving...
solved... in 0.039s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-37 * height(t))) + 0) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 324
[[34m Info  [0m] Number of equal calls: 39
# of atomic predicates: 40 + 179
solving...
solved... in 0.049s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-49 * height(t))) + 0) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 793
[[34m Info  [0m] Number of equal calls: 66
# of atomic predicates: 29 + 219
solving...
solved... in 0.06s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-72 * height(t))) + 0) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 15 + 248
solving...
solved... in 0.064s
candidate Invariants
deleteMax-->((((-72 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 1772
[[34m Info  [0m] Number of equal calls: 95
# of atomic predicates: 45 + 263
solving...
solved... in 0.09s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 7/30
Unrolled calls: Set((r221 == rank(cs197)), (r223 == rank(cs207)), (r224 == rank(cs209)), (r222 == max(e635, ir33)), (r225 == max(e631, e630)), (r227 == rank(cs212)), (r226 == rank(cs211)))
Inlining (r225 == max(e631, e630))
Inlining (r221 == rank(cs197))
Inlining (r227 == rank(cs212))
Inlining (r226 == rank(cs211))
Inlining (r224 == rank(cs209))
Inlining (r222 == max(e635, ir33))
Inlining (r223 == rank(cs207))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
deleteMax-->((((1 * res12._2) + (0 * height(t))) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 15 + 0
solving...
solved... in 0.006s
candidate Invariants
deleteMax-->((((-2 * height(t)) + (16 * res12._2)) + -8) ≤ 0)
height-->(((-36 * #res) + 3288) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 324
[[34m Info  [0m] Number of equal calls: 40
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 48 + 15
solving...
solved... in 0.013s
candidate Invariants
deleteMax-->((((8 * height(t)) + (8 * res12._2)) + -111) ≤ 0)
height-->(((1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 324
[[34m Info  [0m] Number of equal calls: 40
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 56 + 63
solving...
solved... in 0.026s
candidate Invariants
deleteMax-->((((-49 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 793
[[34m Info  [0m] Number of equal calls: 66
# of atomic predicates: 29 + 119
solving...
solved... in 0.037s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-72 * height(t))) + -13) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2164
[[34m Info  [0m] Number of equal calls: 101
# of atomic predicates: 41 + 148
solving...
solved... in 0.053s
candidate Invariants
deleteMax-->((((-108 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2243
[[34m Info  [0m] Number of equal calls: 104
# of atomic predicates: 47 + 189
solving...
solved... in 0.095s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-113 * height(t))) + -13) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3542
[[34m Info  [0m] Number of equal calls: 120
# of atomic predicates: 76 + 236
solving...
solved... in 0.159s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 5/23
Unrolled calls: Set((r216 == max(e619, e618)), (r218 == rank(cs181)), (r219 == rank(cs191)), (r217 == rank(cs180)), (r215 == max(ir32, e623)))
Inlining (r216 == max(e619, e618))
Inlining (r218 == rank(cs181))
Inlining (r219 == rank(cs191))
Inlining (r217 == rank(cs180))
Inlining (r215 == max(ir32, e623))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
deleteMax-->((((1 * res12._2) + (0 * height(t))) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 324
[[34m Info  [0m] Number of equal calls: 39
# of atomic predicates: 34 + 0
solving...
solved... in 0.007s
candidate Invariants
deleteMax-->((((-2 * height(t)) + (1 * res12._2)) + 0) ≤ 0)
height-->(((80 * #res) + 5992) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 98
[[34m Info  [0m] Number of equal calls: 15
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 39 + 34
solving...
solved... in 0.04s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-14 * height(t))) + 0) ≤ 0)
height-->(((-2 * #res) + 1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 324
[[34m Info  [0m] Number of equal calls: 39
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 41 + 73
solving...
solved... in 0.052s
candidate Invariants
deleteMax-->((((-25 * height(t)) + (1 * res12._2)) + 0) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 793
[[34m Info  [0m] Number of equal calls: 64
# of atomic predicates: 30 + 114
solving...
solved... in 0.057s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-25 * height(t))) + 0) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2164
[[34m Info  [0m] Number of equal calls: 100
# of atomic predicates: 54 + 144
solving...
solved... in 0.086s
candidate Invariants
deleteMax-->((((-108 * height(t)) + (1 * res12._2)) + 0) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 15 + 198
solving...
solved... in 0.116s
candidate Invariants
deleteMax-->((((-108 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2243
[[34m Info  [0m] Number of equal calls: 106
# of atomic predicates: 32 + 213
solving...
solved... in 0.098s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-108 * height(t))) + 95) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 28
[[34m Info  [0m] Number of equal calls: 5
# of atomic predicates: 10 + 245
solving...
solved... in 0.058s
candidate Invariants
deleteMax-->((((-108 * height(t)) + (1 * res12._2)) + -14) ≤ 0)
height-->(((-2 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2245
[[34m Info  [0m] Number of equal calls: 99
# of atomic predicates: 41 + 255
solving...
solved... in 0.063s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-110 * height(t))) + -14) ≤ 0)
height-->(((-2 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 4018
[[34m Info  [0m] Number of equal calls: 126
# of atomic predicates: 76 + 296
solving...
solved... in 3.16s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-144 * height(t))) + -14) ≤ 0)
height-->(((-2 * #res) + -1) ≤ 0)
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 4137
[[34m Info  [0m] Number of equal calls: 124
# of atomic predicates: 80 + 372
solving...
timed out... in 20.256s
[[34m Info  [0m] NLsolver timed-out on the disjunct... blocking this disjunct...
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 4137
[[34m Info  [0m] Number of equal calls: 124
# of atomic predicates: 52 + 372
solving...
solved... in 2.988s
candidate Invariants
deleteMax-->((((1 * res12._2) + (-146 * height(t))) + -14) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Nesting level: a?2-->1
Nesting level: b?2-->0
minimizing...
Minimizing variable: a?2 Initial upperbound: 146
Found new lower bound: 73
Found new lower bound: 109
Found new lower bound: 127
Found new lower bound: 136
Found new lower bound: 141
Found new lower bound: 143
Found new lower bound: 144
Found new upper bound: 145
Minimizing variable: b?2 Initial upperbound: 14
Found new lower bound: 7
Found new lower bound: 10
Found new lower bound: 12
Found new upper bound: 13
Minimization complete...
[[34m Info  [0m] - Found inductive invariant: deleteMax --> ((((-145 * height(t)) + (1 * res12._2)) + -13) <= 0)
[[34m Info  [0m] - Found inductive invariant: height --> (((-8 * #res) + -1) <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[34m Info  [0m] - Invariant verified
[[34m Info  [0m] - considering function avlDelete...
[[34m Info  [0m] Body: (let (e108,t123 := (let (e112,t127 := unbalancedDelete(t, e)) in
            (e112, (1 + t127)))) in
            (let (e109,t124 := balance(e108)) in
              (e109, (t123 + (1 + t124)))))
[[34m Info  [0m] Post: true
falttened Body: ((res11 == tp220) && (arg268 == (t123 + (1 + t124))) && (tp220 == (e109, arg268)) && (t124 == ts343) && (ts343 == tres99._2) && (tres100 == r273) && (r273 == unbalancedDelete(t, e)) && (e109 == ts344) && (ts344 == tres99._1) && (tres99 == r274) && (r274 == balance(e108)) && (t127 == ts345) && (ts345 == tres100._2) && (e108 == e112) && (e112 == ts346) && (ts346 == tres100._1) && (t123 == (1 + t127)))
Flattened Post: ((ts347 > ((a?3 * r275) + b?3)) && (ts347 == res11._2) && (r275 == height(t)))
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((1 * res11._2) + (0 * height(t))) + 0) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 3
# of atomic predicates: 9 + 0
solving...
solved... in 0.004s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 3/3
Unrolled calls: Set((r273 == unbalancedDelete(t, e)), (r274 == balance(e108)), (r275 == height(t)))
Creating VC for unbalancedDelete
[[34m Info  [0m] - Number of new terms enumerated: 3
[[34m Info  [0m] - Template generated for function unbalancedDelete : (((a?9 * e) + a?8) ≤ 0)
Unrolling (r273 == unbalancedDelete(t, e))
Inlining (r274 == balance(e108))
Creating VC for height
Unrolling (r275 == height(t))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((0 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 308
[[34m Info  [0m] Number of equal calls: 28
# of atomic predicates: 19 + 0
solving...
solved... in 0.007s
candidate Invariants
avlDelete-->((((1 * res11._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 1) ≤ 0)
height-->(((1 * #res) + 32) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 73
[[34m Info  [0m] Number of equal calls: 15
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 16 + 19
solving...
solved... in 0.007s
candidate Invariants
avlDelete-->((((0 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((2 * #res) + -1) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 308
[[34m Info  [0m] Number of equal calls: 28
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 27 + 35
solving...
solved... in 0.008s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 10/43
Unrolled calls: Set((r303 == max(e727, e726)), (r293 == rank(cs263)), (r290 == max(e704, e703)), (r305 == rank(ir45)), (r291 == avlDelete(cs260, e)), (r306 == rank(cs281)), (r332 == max(r330, r331)), (r329 == max(r327, r328)), (r314 == balanceFactor(e108)), (r292 == rank(ir40)))
Inlining (r329 == max(r327, r328))
Inlining (r290 == max(e704, e703))
Inlining (r314 == balanceFactor(e108))
Inlining (r332 == max(r330, r331))
Inlining (r293 == rank(cs263))
Inlining (r303 == max(e727, e726))
Inlining (r306 == rank(cs281))
Inlining (r305 == rank(ir45))
Unrolling (r291 == avlDelete(cs260, e))
Inlining (r292 == rank(ir40))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((1 * res11._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 251
[[34m Info  [0m] Number of equal calls: 25
# of atomic predicates: 22 + 0
solving...
solved... in 0.005s
candidate Invariants
avlDelete-->((((1 * res11._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 1) ≤ 0)
height-->(((0 * #res) + 2) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 178
[[34m Info  [0m] Number of equal calls: 20
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 19 + 22
solving...
solved... in 0.008s
candidate Invariants
avlDelete-->((((0 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((2 * #res) + -1) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 251
[[34m Info  [0m] Number of equal calls: 25
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 32 + 41
solving...
solved... in 0.008s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 4/41
Unrolled calls: Set((r343 == height(cs260)), (r338 == balance(e782)), (r337 == rank(cs304)), (r336 == rank(cs303)))
Unrolling (r343 == height(cs260))
Inlining (r338 == balance(e782))
Inlining (r337 == rank(cs304))
Inlining (r336 == rank(cs303))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((0 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 480
[[34m Info  [0m] Number of equal calls: 40
# of atomic predicates: 27 + 0
solving...
solved... in 0.006s
candidate Invariants
avlDelete-->((((1 * res11._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 52
[[34m Info  [0m] Number of equal calls: 10
# of atomic predicates: 8 + 27
solving...
solved... in 0.007s
candidate Invariants
avlDelete-->((((0 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 358
[[34m Info  [0m] Number of equal calls: 29
# of atomic predicates: 27 + 35
solving...
solved... in 0.009s
candidate Invariants
avlDelete-->((((-20 * height(t)) + (4 * res11._2)) + -103) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-4 * #res) + -1) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 441
[[34m Info  [0m] Number of equal calls: 38
# of atomic predicates: 26 + 62
solving...
solved... in 0.014s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-2 * height(t))) + -25) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((0 * #res) + 1) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 88
solving...
solved... in 0.012s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 5/53
Unrolled calls: Set((r299 == deleteMax(cs271)), (r307 == max(e736, e735)), (r309 == rank(cs285)), (r308 == rank(ir46)), (r340 == height(cs286)))
Unrolling (r340 == height(cs286))
Inlining (r308 == rank(ir46))
Creating VC for deleteMax
Unrolling (r299 == deleteMax(cs271))
Inlining (r307 == max(e736, e735))
Inlining (r309 == rank(cs285))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((1 * res11._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 358
[[34m Info  [0m] Number of equal calls: 29
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 73
[[34m Info  [0m] Number of equal calls: 15
# of atomic predicates: 27 + 0
solving...
solved... in 0.004s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 3/62
Unrolled calls: Set((r378 == rank(ir56)), (r381 == height(t)), (r379 == balance(e821)))
Inlining (r378 == rank(ir56))
Unrolling (r381 == height(t))
Inlining (r379 == balance(e821))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((0 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 285
[[34m Info  [0m] Number of equal calls: 25
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 71
[[34m Info  [0m] Number of equal calls: 12
# of atomic predicates: 30 + 0
solving...
solved... in 0.006s
candidate Invariants
avlDelete-->((((-2 * height(t)) + (1 * res11._2)) + -23) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((0 * #res) + 1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 30
solving...
solved... in 0.006s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 2/79
Unrolled calls: Set((r413 == height(cs338)), (r395 == max(r393, r394)))
Unrolling (r413 == height(cs338))
Inlining (r395 == max(r393, r394))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((1 * res11._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 285
[[34m Info  [0m] Number of equal calls: 25
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 36 + 0
solving...
solved... in 0.008s
candidate Invariants
avlDelete-->((((-10 * height(t)) + (2 * res11._2)) + -45) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 518
[[34m Info  [0m] Number of equal calls: 39
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 162
[[34m Info  [0m] Number of equal calls: 27
# of atomic predicates: 38 + 36
solving...
solved... in 0.012s
candidate Invariants
avlDelete-->((((4 * res11._2) + (-8 * height(t))) + -87) ≤ 0)
unbalancedDelete-->(((0 * e) + 1) ≤ 0)
height-->(((0 * #res) + 1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 16 + 74
solving...
solved... in 0.01s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 7/80
Unrolled calls: Set((r315 == rank(ir47)), (r415 == height(cs334)), (r318 == max(e752, e751)), (r319 == rank(cs290)), (r411 == balanceFactor(e821)), (r317 == balanceFactor(cs287)), (r316 == rotateRight(e756)))
Inlining (r318 == max(e752, e751))
Unrolling (r415 == height(cs334))
Inlining (r317 == balanceFactor(cs287))
Inlining (r315 == rank(ir47))
Inlining (r316 == rotateRight(e756))
Inlining (r319 == rank(cs290))
Inlining (r411 == balanceFactor(e821))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((1 * res11._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 285
[[34m Info  [0m] Number of equal calls: 25
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 270
[[34m Info  [0m] Number of equal calls: 37
# of atomic predicates: 47 + 0
solving...
solved... in 0.008s
candidate Invariants
avlDelete-->((((-8 * height(t)) + (8 * res11._2)) + -199) ≤ 0)
unbalancedDelete-->(((0 * e) + 1) ≤ 0)
height-->(((2 * #res) + 8) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 82
[[34m Info  [0m] Number of equal calls: 16
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3
[[34m Info  [0m] Number of equal calls: 2
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 270
[[34m Info  [0m] Number of equal calls: 37
# of atomic predicates: 50 + 47
solving...
solved... in 0.017s
candidate Invariants
avlDelete-->((((8 * res11._2) + (-8 * height(t))) + -191) ≤ 0)
unbalancedDelete-->(((0 * e) + 1) ≤ 0)
height-->(((0 * #res) + 1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 16 + 97
solving...
solved... in 0.013s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 8/85
Unrolled calls: Set((r287 == max(e695, e694)), (r342 == height(cs255)), (r286 == rank(ir39)), (r440 == rank(cs389)), (r441 == rank(cs390)), (r289 == rank(cs258)), (r288 == avlDelete(cs255, e)), (r431 == max(r429, r430)))
Inlining (r289 == rank(cs258))
Inlining (r441 == rank(cs390))
Unrolling (r342 == height(cs255))
Inlining (r287 == max(e695, e694))
Inlining (r440 == rank(cs389))
Inlining (r286 == rank(ir39))
Inlining (r431 == max(r429, r430))
Unrolling (r288 == avlDelete(cs255, e))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((1 * res11._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 285
[[34m Info  [0m] Number of equal calls: 25
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 602
[[34m Info  [0m] Number of equal calls: 53
# of atomic predicates: 66 + 0
solving...
solved... in 0.009s
candidate Invariants
avlDelete-->((((-8 * height(t)) + (8 * res11._2)) + -207) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((1 * #res) + 8) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 358
[[34m Info  [0m] Number of equal calls: 29
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3
[[34m Info  [0m] Number of equal calls: 2
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 667
[[34m Info  [0m] Number of equal calls: 56
# of atomic predicates: 72 + 66
solving...
solved... in 0.046s
candidate Invariants
avlDelete-->((((-1 * height(t)) + (2 * res11._2)) + -44) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((0 * #res) + 1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 138
solving...
solved... in 0.025s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 11/82
Unrolled calls: Set((r402 == max(e850, e849)), (r400 == rotateRight(e854)), (r407 == max(e865, e864)), (r406 == rotateRight(cs363)), (r401 == rank(cs358)), (r403 == rank(ir63)), (r405 == balanceFactor(cs360)), (r409 == rotateLeft(e869)), (r404 == balanceFactor(cs359)), (r408 == rank(cs365)), (r410 == rank(ir64)))
Inlining (r400 == rotateRight(e854))
Inlining (r408 == rank(cs365))
Inlining (r404 == balanceFactor(cs359))
Inlining (r403 == rank(ir63))
Inlining (r409 == rotateLeft(e869))
Inlining (r407 == max(e865, e864))
Inlining (r406 == rotateRight(cs363))
Inlining (r402 == max(e850, e849))
Inlining (r410 == rank(ir64))
Inlining (r401 == rank(cs358))
Inlining (r405 == balanceFactor(cs360))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((0 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 285
[[34m Info  [0m] Number of equal calls: 25
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 929
[[34m Info  [0m] Number of equal calls: 68
# of atomic predicates: 43 + 0
solving...
solved... in 0.007s
candidate Invariants
avlDelete-->((((-8 * height(t)) + (8 * res11._2)) + -211) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((2 * #res) + 8) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 358
[[34m Info  [0m] Number of equal calls: 29
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3
[[34m Info  [0m] Number of equal calls: 2
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 929
[[34m Info  [0m] Number of equal calls: 65
# of atomic predicates: 61 + 43
solving...
solved... in 0.013s
candidate Invariants
avlDelete-->((((8 * height(t)) + (16 * res11._2)) + -2) ≤ 0)
unbalancedDelete-->(((0 * e) + 1) ≤ 0)
height-->(((-2 * #res) + 1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 98
[[34m Info  [0m] Number of equal calls: 18
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 929
[[34m Info  [0m] Number of equal calls: 65
# of atomic predicates: 50 + 104
solving...
solved... in 0.019s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 5/90
Unrolled calls: Set((r389 == height(cs251)), (r285 == deleteMax(cs251)), (r399 == rotateLeft(cs354)), (r465 == rank(cs413)), (r466 == rank(cs414)))
Unrolling (r285 == deleteMax(cs251))
Inlining (r466 == rank(cs414))
Inlining (r465 == rank(cs413))
Unrolling (r389 == height(cs251))
Inlining (r399 == rotateLeft(cs354))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((0 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 285
[[34m Info  [0m] Number of equal calls: 25
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 32 + 0
solving...
solved... in 0.008s
candidate Invariants
avlDelete-->((((2 * res11._2) + (-8 * height(t))) + -49) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 623
[[34m Info  [0m] Number of equal calls: 46
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 1934
[[34m Info  [0m] Number of equal calls: 91
# of atomic predicates: 119 + 32
solving...
solved... in 0.085s
candidate Invariants
avlDelete-->((((8 * height(t)) + (32 * res11._2)) + 4) ≤ 0)
unbalancedDelete-->(((0 * e) + 1) ≤ 0)
height-->(((0 * #res) + 1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 16 + 151
solving...
solved... in 0.046s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 6/97
Unrolled calls: Set((r461 == rank(cs400)), (r462 == rank(cs410)), (r464 == max(e902, e901)), (r463 == max(e906, ir67)), (r460 == rank(cs399)), (r373 == max(r371, r372)))
Inlining (r462 == rank(cs410))
Inlining (r461 == rank(cs400))
Inlining (r460 == rank(cs399))
Inlining (r373 == max(r371, r372))
Inlining (r463 == max(e906, ir67))
Inlining (r464 == max(e902, e901))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((0 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 644
[[34m Info  [0m] Number of equal calls: 47
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 52 + 0
solving...
solved... in 0.01s
candidate Invariants
avlDelete-->((((1 * res11._2) + (1 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 43) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 24
[[34m Info  [0m] Number of equal calls: 6
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3655
[[34m Info  [0m] Number of equal calls: 117
# of atomic predicates: 47 + 52
solving...
solved... in 0.02s
candidate Invariants
avlDelete-->((((-37 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((0 * #res) + 1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 99
solving...
solved... in 0.015s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 5/93
Unrolled calls: Set((r498 == max(ir75, e964)), (r501 == rank(cs477)), (r502 == rank(cs478)), (r499 == rank(cs467)), (r500 == max(e960, e959)))
Inlining (r502 == rank(cs478))
Inlining (r499 == rank(cs467))
Inlining (r500 == max(e960, e959))
Inlining (r501 == rank(cs477))
Inlining (r498 == max(ir75, e964))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((0 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 644
[[34m Info  [0m] Number of equal calls: 47
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 52 + 0
solving...
solved... in 0.01s
candidate Invariants
avlDelete-->((((1 * res11._2) + (1 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 43) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 24
[[34m Info  [0m] Number of equal calls: 6
# of atomic predicates: 8 + 52
solving...
solved... in 0.01s
candidate Invariants
avlDelete-->((((-43 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 991
[[34m Info  [0m] Number of equal calls: 60
# of atomic predicates: 23 + 60
solving...
solved... in 0.012s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-37 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((0 * #res) + 1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 83
solving...
solved... in 0.012s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 6/88
Unrolled calls: Set((r323 == rank(ir48)), (r341 == height(cs280)), (r321 == balanceFactor(cs293)), (r322 == rank(cs294)), (r324 == max(e767, e766)), (r325 == rotateLeft(e771)))
Inlining (r325 == rotateLeft(e771))
Inlining (r323 == rank(ir48))
Unrolling (r341 == height(cs280))
Inlining (r324 == max(e767, e766))
Inlining (r321 == balanceFactor(cs293))
Inlining (r322 == rank(cs294))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((1 * res11._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 106
[[34m Info  [0m] Number of equal calls: 16
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 27 + 0
solving...
solved... in 0.008s
candidate Invariants
avlDelete-->((((-6 * height(t)) + (2 * res11._2)) + -23) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 623
[[34m Info  [0m] Number of equal calls: 46
# of atomic predicates: 36 + 27
solving...
solved... in 0.015s
candidate Invariants
avlDelete-->((((2 * res11._2) + (2 * height(t))) + 1) ≤ 0)
unbalancedDelete-->(((0 * e) + 1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 210
[[34m Info  [0m] Number of equal calls: 30
# of atomic predicates: 16 + 63
solving...
solved... in 0.027s
candidate Invariants
avlDelete-->((((-20 * height(t)) + (1 * res11._2)) + 5) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 644
[[34m Info  [0m] Number of equal calls: 47
# of atomic predicates: 39 + 79
solving...
solved... in 0.037s
candidate Invariants
avlDelete-->((((-39 * height(t)) + (1 * res11._2)) + 24) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 358
[[34m Info  [0m] Number of equal calls: 29
# of atomic predicates: 25 + 118
solving...
solved... in 0.078s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-39 * height(t))) + 11) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 559
[[34m Info  [0m] Number of equal calls: 50
# of atomic predicates: 29 + 143
solving...
solved... in 0.095s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-39 * height(t))) + -13) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 559
[[34m Info  [0m] Number of equal calls: 50
# of atomic predicates: 27 + 172
solving...
solved... in 0.075s
candidate Invariants
avlDelete-->((((-146 * height(t)) + (1 * res11._2)) + 94) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 1632
[[34m Info  [0m] Number of equal calls: 79
# of atomic predicates: 46 + 199
solving...
solved... in 0.102s
candidate Invariants
avlDelete-->((((-2 * height(t)) + (8 * res11._2)) + -4) ≤ 0)
unbalancedDelete-->(((-2 * e) + -4) ≤ 0)
height-->(((0 * #res) + 1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 24
[[34m Info  [0m] Number of equal calls: 6
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 16 + 245
solving...
solved... in 0.085s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 12/92
Unrolled calls: Set((r535 == rank(cs505)), (r534 == rank(cs504)), (r527 == max(e972, e971)), (r526 == rank(cs487)), (r414 == height(cs349)), (r529 == rank(cs497)), (r510 == height(cs460)), (r390 == height(cs271)), (r530 == rank(cs499)), (r533 == max(r531, r532)), (r528 == max(ir76, e976)), (r496 == max(r494, r495)))
Inlining (r530 == rank(cs499))
Inlining (r528 == max(ir76, e976))
Inlining (r535 == rank(cs505))
Unrolling (r390 == height(cs271))
Unrolling (r510 == height(cs460))
Unrolling (r414 == height(cs349))
Inlining (r527 == max(e972, e971))
Inlining (r534 == rank(cs504))
Inlining (r526 == rank(cs487))
Inlining (r496 == max(r494, r495))
Inlining (r533 == max(r531, r532))
Inlining (r529 == rank(cs497))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((0 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 106
[[34m Info  [0m] Number of equal calls: 16
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 27 + 0
solving...
solved... in 0.008s
candidate Invariants
avlDelete-->((((2 * res11._2) + (-6 * height(t))) + -23) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 644
[[34m Info  [0m] Number of equal calls: 46
# of atomic predicates: 52 + 27
solving...
solved... in 0.017s
candidate Invariants
avlDelete-->((((128 * res11._2) + (-16 * height(t))) + -1528) ≤ 0)
unbalancedDelete-->(((0 * e) + 1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 391
[[34m Info  [0m] Number of equal calls: 48
# of atomic predicates: 17 + 79
solving...
solved... in 0.026s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-39 * height(t))) + 24) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3012
[[34m Info  [0m] Number of equal calls: 109
# of atomic predicates: 55 + 96
solving...
solved... in 0.055s
candidate Invariants
avlDelete-->((((-101 * height(t)) + (1 * res11._2)) + 86) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3071
[[34m Info  [0m] Number of equal calls: 102
# of atomic predicates: 102 + 151
solving...
solved... in 0.395s
candidate Invariants
avlDelete-->((((4 * height(t)) + (8 * res11._2)) + 2) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((0 * #res) + 1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 253
solving...
solved... in 0.374s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 7/89
Unrolled calls: Set((r491 == rank(ir73)), (r283 == rank(ir37)), (r282 == rank(cs248)), (r509 == height(cs456)), (r284 == max(e683, e682)), (r326 == rotateRight(cs297)), (r492 == balance(e949)))
Inlining (r491 == rank(ir73))
Inlining (r282 == rank(cs248))
Inlining (r492 == balance(e949))
Inlining (r284 == max(e683, e682))
Inlining (r326 == rotateRight(cs297))
Unrolling (r509 == height(cs456))
Inlining (r283 == rank(ir37))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((1 * res11._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 644
[[34m Info  [0m] Number of equal calls: 46
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 62 + 0
solving...
solved... in 0.013s
candidate Invariants
avlDelete-->((((1 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 43) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 242
[[34m Info  [0m] Number of equal calls: 33
# of atomic predicates: 24 + 62
solving...
solved... in 0.016s
candidate Invariants
avlDelete-->((((-43 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 669
[[34m Info  [0m] Number of equal calls: 55
# of atomic predicates: 44 + 86
solving...
solved... in 0.022s
candidate Invariants
avlDelete-->((((-1373440 * height(t)) + (9280 * res11._2)) + 885389) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 1607
[[34m Info  [0m] Number of equal calls: 73
# of atomic predicates: 74 + 130
solving...
solved... in 0.103s
candidate Invariants
avlDelete-->((((580 * res11._2) + (-84680 * height(t))) + 59227) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((0 * #res) + 1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 204
solving...
solved... in 0.077s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 11/103
Unrolled calls: Set((r436 == max(e886, ir66)), (r556 == max(r554, r555)), (r435 == rank(cs375)), (r320 == rotateLeft(cs291)), (r438 == max(e882, e881)), (r559 == max(r557, r558)), (r433 == rank(cs371)), (r562 == max(r560, r561)), (r439 == rank(cs386)), (r437 == rank(cs384)), (r432 == rank(cs370)))
Inlining (r432 == rank(cs370))
Inlining (r437 == rank(cs384))
Inlining (r562 == max(r560, r561))
Inlining (r439 == rank(cs386))
Inlining (r436 == max(e886, ir66))
Inlining (r433 == rank(cs371))
Inlining (r559 == max(r557, r558))
Inlining (r556 == max(r554, r555))
Inlining (r320 == rotateLeft(cs291))
Inlining (r435 == rank(cs375))
Inlining (r438 == max(e882, e881))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((0 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 285
[[34m Info  [0m] Number of equal calls: 25
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 32 + 0
solving...
solved... in 0.008s
candidate Invariants
avlDelete-->((((-8 * height(t)) + (2 * res11._2)) + -45) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 644
[[34m Info  [0m] Number of equal calls: 47
# of atomic predicates: 47 + 32
solving...
solved... in 0.018s
candidate Invariants
avlDelete-->((((4 * res11._2) + (4 * height(t))) + -1) ≤ 0)
unbalancedDelete-->(((0 * e) + 1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 245
[[34m Info  [0m] Number of equal calls: 33
# of atomic predicates: 25 + 79
solving...
solved... in 0.025s
candidate Invariants
avlDelete-->((((-156 * height(t)) + (4 * res11._2)) + 55) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2923
[[34m Info  [0m] Number of equal calls: 112
# of atomic predicates: 41 + 104
solving...
solved... in 0.039s
candidate Invariants
avlDelete-->((((-396 * height(t)) + (4 * res11._2)) + 295) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3012
[[34m Info  [0m] Number of equal calls: 110
# of atomic predicates: 41 + 145
solving...
solved... in 0.066s
candidate Invariants
avlDelete-->((((-202 * height(t)) + (2 * res11._2)) + 151) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 4664
[[34m Info  [0m] Number of equal calls: 129
# of atomic predicates: 108 + 186
solving...
solved... in 0.334s
candidate Invariants
avlDelete-->((((32 * res11._2) + (8 * height(t))) + 4) ≤ 0)
unbalancedDelete-->(((4 * e) + -8) ≤ 0)
height-->(((0 * #res) + 1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 24
[[34m Info  [0m] Number of equal calls: 6
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 16 + 294
solving...
solved... in 0.154s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 5/97
Unrolled calls: Set((r592 == rank(cs534)), (r594 == max(e1022, e1021)), (r596 == max(e1026, ir80)), (r593 == rank(cs535)), (r595 == rank(cs545)))
Inlining (r594 == max(e1022, e1021))
Inlining (r595 == rank(cs545))
Inlining (r596 == max(e1026, ir80))
Inlining (r592 == rank(cs534))
Inlining (r593 == rank(cs535))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((1 * res11._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 358
[[34m Info  [0m] Number of equal calls: 30
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 28 + 0
solving...
solved... in 0.007s
candidate Invariants
avlDelete-->((((-8 * height(t)) + (2 * res11._2)) + -49) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 644
[[34m Info  [0m] Number of equal calls: 47
# of atomic predicates: 42 + 28
solving...
solved... in 0.013s
candidate Invariants
avlDelete-->((((4 * res11._2) + (4 * height(t))) + 1) ≤ 0)
unbalancedDelete-->(((0 * e) + 1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 245
[[34m Info  [0m] Number of equal calls: 33
# of atomic predicates: 25 + 70
solving...
solved... in 0.023s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-39 * height(t))) + 45) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3058
[[34m Info  [0m] Number of equal calls: 113
# of atomic predicates: 56 + 95
solving...
solved... in 0.612s
candidate Invariants
avlDelete-->((((-105 * height(t)) + (1 * res11._2)) + 177) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 4574
[[34m Info  [0m] Number of equal calls: 128
# of atomic predicates: 74 + 151
solving...
solved... in 0.179s
candidate Invariants
avlDelete-->((((8 * res11._2) + (1 * height(t))) + -1) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((0 * #res) + 1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 225
solving...
solved... in 0.087s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 5/92
Unrolled calls: Set((r615 == max(e1034, e1033)), (r614 == rank(cs567)), (r611 == max(ir81, e1038)), (r613 == rank(cs557)), (r612 == rank(cs555)))
Inlining (r612 == rank(cs555))
Inlining (r613 == rank(cs557))
Inlining (r615 == max(e1034, e1033))
Inlining (r614 == rank(cs567))
Inlining (r611 == max(ir81, e1038))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((1 * res11._2) + (0 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 561
[[34m Info  [0m] Number of equal calls: 45
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 36 + 0
solving...
solved... in 0.008s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-5 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 31) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 245
[[34m Info  [0m] Number of equal calls: 33
# of atomic predicates: 25 + 36
solving...
solved... in 0.01s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-22 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 644
[[34m Info  [0m] Number of equal calls: 46
# of atomic predicates: 51 + 61
solving...
solved... in 0.028s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-39 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 5126
[[34m Info  [0m] Number of equal calls: 134
# of atomic predicates: 81 + 112
solving...
timed out... in 20.13s
[[34m Info  [0m] NLsolver timed-out on the disjunct... blocking this disjunct...
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 5126
[[34m Info  [0m] Number of equal calls: 135
# of atomic predicates: 100 + 112
solving...
timed out... in 20.147s
[[34m Info  [0m] NLsolver timed-out on the disjunct... blocking this disjunct...
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 29
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 12 + 112
solving...
solved... in 0.028s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-39 * height(t))) + -9) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 5126
[[34m Info  [0m] Number of equal calls: 134
# of atomic predicates: 81 + 124
solving...
timed out... in 20.137s
[[34m Info  [0m] NLsolver timed-out on the disjunct... blocking this disjunct...
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 5126
[[34m Info  [0m] Number of equal calls: 135
# of atomic predicates: 67 + 124
solving...
solved... in 0.171s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-137 * height(t))) + -9) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 5541
[[34m Info  [0m] Number of equal calls: 162
# of atomic predicates: 68 + 191
solving...
solved... in 0.324s
candidate Invariants
avlDelete-->((((-137 * height(t)) + (1 * res11._2)) + -7) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 2) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 5257
[[34m Info  [0m] Number of equal calls: 135
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 126 + 259
solving...
timed out... in 20.308s
[[34m Info  [0m] NLsolver timed-out on the disjunct... blocking this disjunct...
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 681
[[34m Info  [0m] Number of equal calls: 58
# of atomic predicates: 48 + 259
solving...
solved... in 1.299s
candidate Invariants
avlDelete-->((((-1 * height(t)) + (2 * res11._2)) + -14) ≤ 0)
unbalancedDelete-->(((1 * e) + 1) ≤ 0)
height-->(((0 * #res) + 1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 24
[[34m Info  [0m] Number of equal calls: 6
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 16 + 307
solving...
solved... in 1.013s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 3/87
Unrolled calls: Set((r302 == max(e715, e714)), (r301 == rank(cs274)), (r300 == rank(ir43)))
Inlining (r302 == max(e715, e714))
Inlining (r301 == rank(cs274))
Inlining (r300 == rank(ir43))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
avlDelete-->((((0 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 644
[[34m Info  [0m] Number of equal calls: 46
Function: deleteMax--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 15
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 62 + 0
solving...
solved... in 0.011s
candidate Invariants
avlDelete-->((((1 * res11._2) + (1 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + 43) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 245
[[34m Info  [0m] Number of equal calls: 33
# of atomic predicates: 25 + 62
solving...
solved... in 0.015s
candidate Invariants
avlDelete-->((((-43 * height(t)) + (1 * res11._2)) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3148
[[34m Info  [0m] Number of equal calls: 113
# of atomic predicates: 52 + 87
solving...
solved... in 0.032s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-106 * height(t))) + 0) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3856
[[34m Info  [0m] Number of equal calls: 117
# of atomic predicates: 48 + 139
solving...
solved... in 0.049s
candidate Invariants
avlDelete-->((((-212 * height(t)) + (2 * res11._2)) + -43) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 5036
[[34m Info  [0m] Number of equal calls: 134
# of atomic predicates: 88 + 187
solving...
timed out... in 20.174s
[[34m Info  [0m] NLsolver timed-out on the disjunct... blocking this disjunct...
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 5062
[[34m Info  [0m] Number of equal calls: 136
# of atomic predicates: 57 + 187
solving...
solved... in 0.155s
candidate Invariants
avlDelete-->((((8 * res11._2) + (-1088 * height(t))) + 71) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 5167
[[34m Info  [0m] Number of equal calls: 135
# of atomic predicates: 81 + 244
solving...
solved... in 11.299s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-138 * height(t))) + 10) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 5969
[[34m Info  [0m] Number of equal calls: 163
# of atomic predicates: 118 + 325
solving...
timed out... in 20.328s
[[34m Info  [0m] NLsolver timed-out on the disjunct... blocking this disjunct...
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 29
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 12 + 325
solving...
solved... in 4.196s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-138 * height(t))) + -7) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3580
[[34m Info  [0m] Number of equal calls: 140
# of atomic predicates: 52 + 337
solving...
solved... in 4.199s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-146 * height(t))) + -7) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 5969
[[34m Info  [0m] Number of equal calls: 163
# of atomic predicates: 86 + 389
solving...
solved... in 12.043s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-146 * height(t))) + -16) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 6074
[[34m Info  [0m] Number of equal calls: 164
# of atomic predicates: 90 + 475
solving...
timed out... in 20.34s
[[34m Info  [0m] NLsolver timed-out on the disjunct... blocking this disjunct...
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 6074
[[34m Info  [0m] Number of equal calls: 166
# of atomic predicates: 63 + 475
solving...
timed out... in 20.319s
[[34m Info  [0m] NLsolver timed-out on the disjunct... blocking this disjunct...
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 6074
[[34m Info  [0m] Number of equal calls: 165
# of atomic predicates: 65 + 475
solving...
timed out... in 20.332s
[[34m Info  [0m] NLsolver timed-out on the disjunct... blocking this disjunct...
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 6074
[[34m Info  [0m] Number of equal calls: 165
# of atomic predicates: 54 + 475
solving...
solved... in 0.489s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-146 * height(t))) + -18) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + 0) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Nesting level: a?3-->1
Nesting level: b?3-->0
minimizing...
Minimizing variable: a?3 Initial upperbound: 146
Found new upper bound: 72
Found new upper bound: 35
Found new upper bound: 16
Found new upper bound: 7
Found new upper bound: 2
Found new upper bound: 0
Found new upper bound: -2
Found new upper bound: -5
Found new upper bound: -11
Found new upper bound: -23
Found new upper bound: -47
Found new upper bound: -95
Found new upper bound: -191
Found new upper bound: -383
Found new upper bound: -767
Found new upper bound: -1535
Minimizing variable: b?3 Initial upperbound: -1/8
Found new upper bound: -2
Found new upper bound: -5
Found new upper bound: -11
Found new upper bound: -23
Found new upper bound: -47
Found new upper bound: -95
Found new upper bound: -191
Found new upper bound: -383
Found new upper bound: -767
Found new upper bound: -1535
Found new upper bound: -3071
Found new upper bound: -6143
Found new upper bound: -12287
Found new upper bound: -24575
Found new upper bound: -49151
Found new upper bound: -98303
Minimization complete...
candidate Invariants
avlDelete-->((((1535 * height(t)) + (1 * res11._2)) + 98303) ≤ 0)
unbalancedDelete-->(((-8 * e) + 4) ≤ 0)
height-->(((0 * #res) + 1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: unbalancedDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 24
[[34m Info  [0m] Number of equal calls: 6
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 16 + 529
solving...
solved... in 0.555s
candidate Invariants
avlDelete-->((((-146 * height(t)) + (1 * res11._2)) + -18) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 349
[[34m Info  [0m] Number of equal calls: 29
# of atomic predicates: 22 + 545
solving...
solved... in 1.221s
candidate Invariants
avlDelete-->((((-146 * height(t)) + (1 * res11._2)) + -27) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2097
[[34m Info  [0m] Number of equal calls: 88
# of atomic predicates: 19 + 567
solving...
solved... in 1.229s
candidate Invariants
avlDelete-->((((-146 * height(t)) + (1 * res11._2)) + -89) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2219
[[34m Info  [0m] Number of equal calls: 92
# of atomic predicates: 20 + 586
solving...
solved... in 1.354s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-146 * height(t))) + -92) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3552
[[34m Info  [0m] Number of equal calls: 111
# of atomic predicates: 21 + 606
solving...
solved... in 1.317s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-146 * height(t))) + -119) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3717
[[34m Info  [0m] Number of equal calls: 110
# of atomic predicates: 40 + 627
solving...
solved... in 1.074s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-146 * height(t))) + -122) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3832
[[34m Info  [0m] Number of equal calls: 112
# of atomic predicates: 28 + 667
solving...
solved... in 0.816s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-146 * height(t))) + -124) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3914
[[34m Info  [0m] Number of equal calls: 116
# of atomic predicates: 40 + 695
solving...
solved... in 0.887s
candidate Invariants
avlDelete-->((((-146 * height(t)) + (1 * res11._2)) + -126) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Function: avlDelete--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 4063
[[34m Info  [0m] Number of equal calls: 120
# of atomic predicates: 23 + 735
solving...
solved... in 1.623s
candidate Invariants
avlDelete-->((((1 * res11._2) + (-146 * height(t))) + -128) ≤ 0)
unbalancedDelete-->(((0 * e) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
deleteMax-->((((-145 * height(t)) + (1 * res12._2)) + -13) ≤ 0)
Nesting level: a?3-->1
Nesting level: b?3-->0
minimizing...
Minimizing variable: a?3 Initial upperbound: 146
Found new lower bound: 73
Found new lower bound: 109
Found new lower bound: 127
Found new lower bound: 136
Found new lower bound: 141
Found new lower bound: 143
Found new lower bound: 144
Found new upper bound: 145
Minimizing variable: b?3 Initial upperbound: 128
Found new upper bound: 55
Found new upper bound: 20
Found new lower bound: 10
Found new lower bound: 15
Found new lower bound: 17
Found new lower bound: 18
Found new upper bound: 19
Minimization complete...
[[34m Info  [0m] - Found inductive invariant: avlDelete --> ((((-145 * height(t)) + (1 * res11._2)) + -19) <= 0)
[[34m Info  [0m] - Found inductive invariant: unbalancedDelete --> (((0 * e) + -1) <= 0)
[[34m Info  [0m] - Found inductive invariant: height --> (((-1 * #res) + 0) <= 0)
[[34m Info  [0m] - Found inductive invariant: deleteMax --> ((((-145 * height(t)) + (1 * res12._2)) + -13) <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[34m Info  [0m] - Invariant verified
[[34m Info  [0m] - considering function size...
[[34m Info  [0m] Body: t match {
            case Leaf() => 0
            case Node(l, _, r, _) => ((size(l) + 1) + size(r))
          }
[[34m Info  [0m] Post: true
falttened Body: ((res9 == ifres269) && ((ci400 && (ci400 == t.isInstanceOf[Leaf]) && (ifres269 == 0)) || (!(ci401) && (ci401 == t.isInstanceOf[Leaf]) && (ifres269 == ((r702 + 1) + r703)) && (cs578 == t.left) && (r702 == size(cs578)) && (cs579 == t.right) && (r703 == size(cs579)))))
Flattened Post: ((r704 > ((a? * res9) + b?)) && (r704 == height(t)))
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
size-->((((0 * res9) + (1 * height(t))) + 0) ≤ 0)
Function: size--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 9 + 0
solving...
solved... in 0.005s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 1/3
Unrolled calls: Set((r704 == height(t)))
Creating VC for height
Unrolling (r704 == height(t))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
size-->((((0 * res9) + (1 * height(t))) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: size--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 17
[[34m Info  [0m] Number of equal calls: 7
# of atomic predicates: 16 + 0
solving...
solved... in 0.006s
candidate Invariants
size-->((((0 * res9) + (8 * height(t))) + -1) ≤ 0)
height-->(((8 * #res) + 15) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 16
solving...
solved... in 0.005s
candidate Invariants
size-->((((0 * res9) + (1 * height(t))) + -3) ≤ 0)
height-->(((1 * #res) + -1) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 2
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 8 + 24
solving...
solved... in 0.006s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 4/10
Unrolled calls: Set((r711 == max(r709, r710)), (r713 == height(cs579)), (r708 == max(r706, r707)), (r712 == height(cs578)))
Inlining (r711 == max(r709, r710))
Unrolling (r713 == height(cs579))
Inlining (r708 == max(r706, r707))
Unrolling (r712 == height(cs578))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
candidate Invariants
size-->((((0 * res9) + (1 * height(t))) + 0) ≤ 0)
height-->(((0 * #res) + 0) ≤ 0)
Function: size--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 74
[[34m Info  [0m] Number of equal calls: 10
# of atomic predicates: 28 + 0
solving...
solved... in 0.006s
candidate Invariants
size-->((((0 * res9) + (2 * height(t))) + 1) ≤ 0)
height-->(((-8 * #res) + 3) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 8 + 28
solving...
solved... in 0.007s
candidate Invariants
size-->((((0 * res9) + (8 * height(t))) + 11) ≤ 0)
height-->(((-2 * #res) + -1) ≤ 0)
Function: size--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 0
[[34m Info  [0m] Number of equal calls: 0
# of atomic predicates: 10 + 36
solving...
solved... in 0.01s
candidate Invariants
size-->((((-4 * res9) + (1 * height(t))) + -1) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Nesting level: a?-->0
Nesting level: b?-->0
minimizing...
Minimizing variable: a? Initial upperbound: 4
Found new upper bound: 2
Found new upper bound: 0
Found new lower bound: -1
Minimizing variable: b? Initial upperbound: 1/8
Found new upper bound: 0
Found new lower bound: -1
Minimization complete...
candidate Invariants
size-->((((0 * res9) + (1 * height(t))) + 0) ≤ 0)
height-->(((-3 * #res) + -1) ≤ 0)
Function: size--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 41
[[34m Info  [0m] Number of equal calls: 8
# of atomic predicates: 23 + 46
solving...
solved... in 0.028s
candidate Invariants
size-->((((0 * res9) + (1 * height(t))) + -10) ≤ 0)
height-->(((1 * #res) + -8) ≤ 0)
Function: height--Found candidate invariant is not a real invariant! 
[[34m Info  [0m] Number of compatible calls: 3
[[34m Info  [0m] Number of equal calls: 2
# of atomic predicates: 13 + 69
solving...
solved... in 0.019s
candidate Invariants
size-->((((-4 * res9) + (1 * height(t))) + 0) ≤ 0)
height-->(((-1 * #res) + -1) ≤ 0)
Nesting level: a?-->0
Nesting level: b?-->0
minimizing...
Minimizing variable: a? Initial upperbound: 4
Found new upper bound: 2
Found new upper bound: 1
Found new lower bound: 0
Minimizing variable: b? Initial upperbound: 0
Found new lower bound: -1
Minimization complete...
[[34m Info  [0m] - Found inductive invariant: size --> ((((-1 * res9) + (1 * height(t))) + 0) <= 0)
[[34m Info  [0m] - Found inductive invariant: height --> (((-1 * #res) + 0) <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[34m Info  [0m] - Invariant verified
Inferrence did not succeeded for functions: List()
[[34m Info  [0m] - Dumping statistics
[[34m Info  [0m] . ┌─────────┐
          ╔═╡ Summary ╞═══════════════════════════════════════════════════════════════════════╗
          ║ └─────────┘                                                                       ║
          
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ total: 0      valid: 0      invalid: 0      unknown 0                       0.000 ║
          ╚═══════════════════════════════════════════════════════════════════════════════════╝
