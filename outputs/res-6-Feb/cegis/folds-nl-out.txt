After Depth Instrumentation: 
object TreeMaps {
  case class Node(left: Tree, value: Int, right: Tree) extends Tree

  sealed abstract class Tree

  case class Leaf() extends Tree

  case class Cons(head: Int, tail: List) extends List

  case class Nil() extends List

  sealed abstract class List

  def fact(n : Int) : Int = {    require((n >= 0));
if (((n == 1) || (n == 0))) {
    1
  } else {
    (n * fact((n - 1)))
  }} ensuring(res => true)

  def size(t : Tree) : Int = {(t match {
    case Leaf() =>
      0
    case Node(l, x, r) =>
      ((size(l) + size(r)) + 1)
  })}

  def size(l : List) : Int = {(l match {
    case Nil() =>
      0
    case Cons(_, t) =>
      (1 + size(t))
  })}

  def factMap(l : List, k : Int) : List = {    require((descending(l, k) && (k >= 0)));
(l match {
    case Nil() =>
      Nil()
    case Cons(x, t) =>
      locally {
        val f = fact(x)
        Cons(f, factMap(t, (x - 1)))
      }
      
  })} ensuring(res => true)

  def squareMap(t : Tree) : Tree = {(t match {
    case Leaf() =>
      t
    case Node(l, x, r) =>
      locally {
        val nl = squareMap(l)
        locally {
          val nr = squareMap(r)
          Node(nl, (x * x), nr)
        }
        
      }
      
  })} ensuring(res => true)

  def parallelSearch(elem : Int, t : Tree) : Boolean = {(t match {
    case Leaf() =>
      false
    case Node(l, x, r) =>
      if ((x == elem)) {
        true
      } else {
        locally {
          val r1 = parallelSearch(elem, r)
          locally {
            val r2 = parallelSearch(elem, l)
            if ((r1 || r2)) {
              true
            } else {
              false
            }
          }
          
        }
        
      }
  })} ensuring(res => true)

  def descending(l : List, k : Int) : Boolean = {(l match {
    case Nil() =>
      true
    case Cons(x, t) =>
      ((x > 0) && (x <= k) && descending(t, (x - 1)))
  })}

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}
}

Defined fun: fact
Defined fun: size
Defined fun: size
Defined fun: factMap
Defined fun: squareMap
Defined fun: parallelSearch
Defined fun: descending
Defined fun: max
FunMap: Map(squareMap -> squareMap, fact -> fact, factMap -> factMap, max -> max, size -> size, descending -> descending, size -> size, parallelSearch -> parallelSearch)
After Time Instrumentation: 
object TreeMaps {
  case class Node(left: Tree, value: Int, right: Tree) extends Tree

  sealed abstract class Tree

  case class Leaf() extends Tree

  case class Cons(head: Int, tail: List) extends List

  case class Nil() extends List

  sealed abstract class List

  def fact(n : Int) : (Int, Int) = {    require((n >= 0));
locally {
    val t25 = 3
    if (((n == 1) || (n == 0))) {
      (1, t25)
    } else {
      locally {
        val (e19: Int, t27: Int) = locally {
          val (e21: Int, t29: Int) = locally {
            val (e23: Int, t31: Int) = fact((n - 1))
            (e23, (1 + (1 + t31)))
          }
          
          ((n * e21), (t29 + 1))
        }
        
        (e19, (t25 + t27))
      }
      
    }
  }
  } ensuring(res10 => true)

  def size(t : Tree) : Int = {(t match {
    case Leaf() =>
      0
    case Node(l, x, r) =>
      ((size(l) + size(r)) + 1)
  })}

  def size(l : List) : Int = {(l match {
    case Nil() =>
      0
    case Cons(_, t) =>
      (1 + size(t))
  })}

  def factMap(l : List, k : Int) : (List, Int) = {    require((descending(l, k) && (k >= 0)));
locally {
    val t40 = 1
    if (l.isInstanceOf[Nil]) {
      (Nil(), (t40 + 1))
    } else {
      locally {
        val (e34: Cons, t42: Int) = locally {
          val (ir2: Int, it2: Int) = locally {
            val (e36: Int, t45: Int) = fact(l.head)
            (e36, (1 + (1 + t45)))
          }
          
          locally {
            val (r6: Cons, t43: Int) = locally {
              val (e39: List, t48: Int) = locally {
                val (e42: List, t51: Int) = factMap(l.tail, (l.head - 1))
                (e42, (2 + (1 + (1 + t51))))
              }
              
              (Cons(ir2, e39), (t48 + 1))
            }
            
            (r6, (t43 + (it2 + 1)))
          }
          
        }
        
        (e34, (t40 + t42))
      }
      
    }
  }
  } ensuring(res11 => true)

  def squareMap(t : Tree) : (Tree, Int) = {locally {
    val t6 = 1
    if (t.isInstanceOf[Leaf]) {
      (t, t6)
    } else {
      locally {
        val (e2: Node, t8: Int) = locally {
          val (ir: Tree, it: Int) = locally {
            val (e4: Tree, t11: Int) = squareMap(t.left)
            (e4, (1 + (1 + t11)))
          }
          
          locally {
            val (r4: Node, t9: Int) = locally {
              val (ir1: Tree, it1: Int) = locally {
                val (e7: Tree, t15: Int) = squareMap(t.right)
                (e7, (1 + (1 + t15)))
              }
              
              (Node(ir, (t.value * t.value), ir1), (4 + (it1 + 1)))
            }
            
            (r4, (t9 + (it + 1)))
          }
          
        }
        
        (e2, (t6 + t8))
      }
      
    }
  }
  } ensuring(res9 => true)

  def parallelSearch(elem : Int, t : Tree) : (Boolean, Int) = {locally {
    val t57 = 1
    if (t.isInstanceOf[Leaf]) {
      (false, t57)
    } else {
      locally {
        val (e50: Boolean, t59: Int) = locally {
          val t60 = 2
          if ((t.value == elem)) {
            (true, t60)
          } else {
            locally {
              val (e53: Boolean, t62: Int) = locally {
                val (ir3: Boolean, it3: Int) = locally {
                  val (e56: Boolean, t66: Int) = parallelSearch(elem, t.right)
                  (e56, (1 + (1 + t66)))
                }
                
                locally {
                  val (r7: Boolean, t63: Int) = locally {
                    val (ir4: Boolean, it4: Int) = locally {
                      val (e60: Boolean, t71: Int) = parallelSearch(elem, t.left)
                      (e60, (1 + (1 + t71)))
                    }
                    
                    locally {
                      val (r8: Boolean, t68: Int) = locally {
                        val t73 = 1
                        if ((ir3 || ir4)) {
                          (true, t73)
                        } else {
                          (false, t73)
                        }
                      }
                      
                      (r8, (t68 + (it4 + 1)))
                    }
                    
                  }
                  
                  (r7, (t63 + (it3 + 1)))
                }
                
              }
              
              (e53, (t60 + t62))
            }
            
          }
        }
        
        (e50, (t57 + t59))
      }
      
    }
  }
  } ensuring(res12 => true)

  def descending(l : List, k : Int) : Boolean = {(l match {
    case Nil() =>
      true
    case Cons(x, t) =>
      ((x > 0) && (x <= k) && descending(t, (x - 1)))
  })}

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}
}

New Prog: 
object TreeMaps {
  case class Node(left: Tree, value: Int, right: Tree) extends Tree

  sealed abstract class Tree

  case class Leaf() extends Tree

  case class Cons(head: Int, tail: List) extends List

  case class Nil() extends List

  sealed abstract class List

  def fact(n : Int) : (Int, Int) = {    require((n >= 0));
if (((n == 1) || (n == 0))) {
    (1, 3)
  } else {
    locally {
      val (e19: Int, t27: Int) = locally {
        val (e21: Int, t29: Int) = locally {
          val (e23: Int, t31: Int) = fact((n - 1))
          (e23, (1 + (1 + t31)))
        }
        
        (mult(n, e21), (t29 + 1))
      }
      
      (e19, (3 + t27))
    }
    
  }} ensuring(res10 => true)

  def size(t : Tree) : Int = {(t match {
    case Leaf() =>
      0
    case Node(l, x, r) =>
      ((size(l) + size(r)) + 1)
  })}

  def size(l : List) : Int = {(l match {
    case Nil() =>
      0
    case Cons(_, t) =>
      (1 + size(t))
  })}

  def factMap(l : List, k : Int) : (List, Int) = {    require((descending(l, k) && (k >= 0)));
if (l.isInstanceOf[Nil]) {
    (Nil(), (1 + 1))
  } else {
    locally {
      val (e34: Cons, t42: Int) = locally {
        val (ir2: Int, it2: Int) = locally {
          val (e36: Int, t45: Int) = fact(l.head)
          (e36, (1 + (1 + t45)))
        }
        
        locally {
          val (r6: Cons, t43: Int) = locally {
            val (e39: List, t48: Int) = locally {
              val (e42: List, t51: Int) = factMap(l.tail, (l.head - 1))
              (e42, (2 + (1 + (1 + t51))))
            }
            
            (Cons(ir2, e39), (t48 + 1))
          }
          
          (r6, (t43 + (it2 + 1)))
        }
        
      }
      
      (e34, (1 + t42))
    }
    
  }} ensuring(res11 => true)

  def squareMap(t : Tree) : (Tree, Int) = {if (t.isInstanceOf[Leaf]) {
    (t, 1)
  } else {
    locally {
      val (e2: Node, t8: Int) = locally {
        val (ir: Tree, it: Int) = locally {
          val (e4: Tree, t11: Int) = squareMap(t.left)
          (e4, (1 + (1 + t11)))
        }
        
        locally {
          val (r4: Node, t9: Int) = locally {
            val (ir1: Tree, it1: Int) = locally {
              val (e7: Tree, t15: Int) = squareMap(t.right)
              (e7, (1 + (1 + t15)))
            }
            
            (Node(ir, mult(t.value, t.value), ir1), (4 + (it1 + 1)))
          }
          
          (r4, (t9 + (it + 1)))
        }
        
      }
      
      (e2, (1 + t8))
    }
    
  }} ensuring(res9 => true)

  def parallelSearch(elem : Int, t : Tree) : (Boolean, Int) = {if (t.isInstanceOf[Leaf]) {
    (false, 1)
  } else {
    locally {
      val (e50: Boolean, t59: Int) = if ((t.value == elem)) {
        (true, 2)
      } else {
        locally {
          val (e53: Boolean, t62: Int) = locally {
            val (ir3: Boolean, it3: Int) = locally {
              val (e56: Boolean, t66: Int) = parallelSearch(elem, t.right)
              (e56, (1 + (1 + t66)))
            }
            
            locally {
              val (r7: Boolean, t63: Int) = locally {
                val (ir4: Boolean, it4: Int) = locally {
                  val (e60: Boolean, t71: Int) = parallelSearch(elem, t.left)
                  (e60, (1 + (1 + t71)))
                }
                
                locally {
                  val (r8: Boolean, t68: Int) = if ((ir3 || ir4)) {
                    (true, 1)
                  } else {
                    (false, 1)
                  }
                  (r8, (t68 + (it4 + 1)))
                }
                
              }
              
              (r7, (t63 + (it3 + 1)))
            }
            
          }
          
          (e53, (2 + t62))
        }
        
      }
      (e50, (1 + t59))
    }
    
  }} ensuring(res12 => true)

  def descending(l : List, k : Int) : Boolean = {(l match {
    case Nil() =>
      true
    case Cons(x, t) =>
      ((x > 0) && (x <= k) && descending(t, (x - 1)))
  })}

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}

  def mult(x : Int, y : Int) : Int = {locally {
    val r = locally {
      val px = if ((x < 0)) {
        -(x)
      } else {
        x
      }
      locally {
        val py = if ((y < 0)) {
          -(y)
        } else {
          y
        }
        pmult(px, py)
      }
      
    }
    
    if ((((x >= 0) && (y >= 0)) || ((x < 0) && (y < 0)))) {
      r
    } else {
      -(r)
    }
  }
  }

  def pmult(x : Int, y : Int) : Int = {if (((x == 0) || (y == 0))) {
    0
  } else {
    (pmult((x - 1), y) + y)
  }} ensuring(res => ((res >= 0) && (((x == 0) || (y == 0)) || (res == (pmult(x, (y - 1)) + x)))))
}

Function: fact template --> (res10._2 ≤ ((a?2 * n) + b?2))
Function: factMap template --> (res11._2 ≤ ((a?3 * mult(k, k)) + b?3))
Function: squareMap template --> (res9._2 ≤ ((a?1 * size(t)) + b?1))
Function: parallelSearch template --> (res12._2 ≤ ((a? * size(t)) + b?))
[[34m Info  [0m] Running Invariant Inference Phase...
[[34m Info  [0m] Analysis Order: List(pmult, mult, size, squareMap, fact, parallelSearch, descending, size, factMap)
[[34m Info  [0m] - considering function squareMap...
[[34m Info  [0m] Body: if (t.isInstanceOf[Leaf])
            (t, 1)
          else
            (let (e2,t8 := (let (ir,it := (let (e4,t11 := squareMap(t.left)) in
              (e4, (1 + (1 + t11))))) in
              (let (r4,t9 := (let (ir1,it1 := (let (e7,t15 := squareMap(t.right)) in
                (e7, (1 + (1 + t15))))) in
                (Node(ir, mult(t.value, t.value), ir1), (4 + (it1 + 1))))) in
                (r4, (t9 + (it + 1)))))) in
              (e2, (1 + t8)))
[[34m Info  [0m] Post: true
falttened Body: ((res9 == ifres) && ((ci && (ci == t.isInstanceOf[Leaf]) && (ifres == tp) && (arg == 1) && (tp == (t, arg))) || (!(ci1) && (ci1 == t.isInstanceOf[Leaf]) && (ifres == tp1) && (arg1 == (1 + t8)) && (tp1 == (e2, arg1)) && (r4 == cc) && (cs == t.value) && (cs1 == t.value) && (r9 == mult(cs, cs1)) && (cc == Node(ir, r9, ir1)) && (t11 == ts) && (ts == tres1._2) && (it1 == (1 + (1 + t15))) && (t9 == (4 + (it1 + 1))) && (tres1 == r10) && (cs2 == t.left) && (r10 == squareMap(cs2)) && (t15 == ts1) && (ts1 == tres._2) && (e2 == r4) && (it == (1 + (1 + t11))) && (e7 == ts2) && (ts2 == tres._1) && (e4 == ts3) && (ts3 == tres1._1) && (ir1 == e7) && (ir == e4) && (tres == r11) && (cs3 == t.right) && (r11 == squareMap(cs3)) && (t8 == (t9 + (it + 1))))))
Flattened Post: ((ts4 > ((a?1 * r12) + b?1)) && (ts4 == res9._2) && (r12 == size(t)))
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.112s
2: solved... in 0.159s
1: solved... in 0.012s
2: solved... in 0.008s
1: solved... in 0.018s
2: solved... in 0.01s
1: solved... in 0.01s
2: solved... in 0.012s
1: solved... in 0.01s
2: solved... in 0.007s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.009s
2: solved... in 0.01s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.009s
2: solved... in 0.009s
1: solved... in 0.009s
2: solved... in 0.009s
1: solved... in 0.009s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.009s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.015s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.012s
1: solved... in 0.009s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.009s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.008s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.007s
2: solved... in 0.014s
1: solved... in 0.007s
2: solved... in 0.014s
1: solved... in 0.007s
2: solved... in 0.018s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.012s
2: solved... in 0.014s
1: solved... in 0.007s
2: solved... in 0.014s
1: solved... in 0.007s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.016s
1: solved... in 0.007s
2: solved... in 0.015s
1: solved... in 0.007s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.016s
1: solved... in 0.006s
2: solved... in 0.016s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.016s
1: solved... in 0.006s
2: solved... in 0.016s
1: solved... in 0.006s
2: solved... in 0.016s
1: solved... in 0.006s
2: solved... in 0.016s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.018s
1: solved... in 0.007s
2: solved... in 0.017s
1: solved... in 0.006s
2: solved... in 0.017s
1: solved... in 0.006s
2: solved... in 0.017s
1: solved... in 0.006s
2: solved... in 0.017s
1: solved... in 0.007s
2: solved... in 0.018s
1: solved... in 0.006s
2: solved... in 0.018s
1: solved... in 0.006s
2: solved... in 0.018s
1: solved... in 0.006s
2: solved... in 0.019s
1: solved... in 0.006s
2: solved... in 0.019s
1: solved... in 0.006s
2: solved... in 0.018s
1: solved... in 0.006s
2: solved... in 0.019s
1: solved... in 0.006s
2: solved... in 0.019s
1: solved... in 0.006s
2: solved... in 0.019s
1: solved... in 0.006s
2: solved... in 0.02s
1: solved... in 0.007s
2: solved... in 0.02s
1: solved... in 0.006s
2: solved... in 0.021s
1: solved... in 0.006s
2: solved... in 0.02s
1: solved... in 0.006s
2: solved... in 0.021s
1: solved... in 0.006s
2: solved... in 0.021s
1: solved... in 0.006s
2: solved... in 0.022s
1: solved... in 0.007s
2: solved... in 0.022s
1: solved... in 0.006s
2: solved... in 0.022s
1: solved... in 0.006s
2: solved... in 0.022s
1: solved... in 0.007s
2: solved... in 0.022s
1: solved... in 0.006s
2: solved... in 0.031s
1: solved... in 0.006s
2: solved... in 0.023s
1: solved... in 0.006s
2: solved... in 0.023s
1: solved... in 0.006s
2: solved... in 0.023s
1: solved... in 0.006s
2: solved... in 0.023s
1: solved... in 0.007s
2: solved... in 0.024s
1: solved... in 0.006s
2: solved... in 0.023s
1: solved... in 0.006s
2: solved... in 0.024s
1: solved... in 0.006s
2: solved... in 0.024s
1: solved... in 0.007s
2: solved... in 0.025s
1: solved... in 0.006s
2: solved... in 0.025s
1: solved... in 0.007s
2: solved... in 0.025s
1: solved... in 0.006s
2: solved... in 0.027s
1: solved... in 0.007s
2: solved... in 0.026s
1: solved... in 0.007s
2: solved... in 0.026s
1: solved... in 0.006s
2: solved... in 0.026s
1: solved... in 0.006s
2: solved... in 0.028s
1: solved... in 0.006s
2: solved... in 0.027s
1: solved... in 0.006s
2: solved... in 0.027s
1: solved... in 0.006s
2: solved... in 0.027s
1: solved... in 0.006s
2: solved... in 0.027s
1: solved... in 0.006s
2: solved... in 0.028s
1: solved... in 0.006s
2: solved... in 0.028s
1: solved... in 0.006s
2: solved... in 0.028s
1: solved... in 0.007s
2: solved... in 0.029s
1: solved... in 0.006s
2: solved... in 0.029s
1: solved... in 0.006s
2: solved... in 0.029s
1: solved... in 0.006s
2: solved... in 0.031s
1: solved... in 0.006s
2: solved... in 0.031s
1: solved... in 0.018s
2: solved... in 0.03s
1: solved... in 0.006s
2: solved... in 0.03s
1: solved... in 0.006s
2: solved... in 0.031s
1: solved... in 0.006s
2: solved... in 0.031s
1: solved... in 0.006s
2: solved... in 0.031s
1: solved... in 0.006s
2: solved... in 0.032s
1: solved... in 0.006s
2: solved... in 0.031s
1: solved... in 0.006s
2: solved... in 0.032s
1: solved... in 0.007s
2: solved... in 0.032s
1: solved... in 0.006s
2: solved... in 0.033s
1: solved... in 0.006s
2: solved... in 0.033s
1: solved... in 0.006s
2: solved... in 0.033s
1: solved... in 0.007s
2: solved... in 0.036s
1: solved... in 0.006s
2: solved... in 0.036s
1: solved... in 0.006s
2: solved... in 0.034s
1: solved... in 0.006s
2: solved... in 0.035s
1: solved... in 0.006s
2: solved... in 0.035s
1: solved... in 0.006s
2: solved... in 0.035s
1: solved... in 0.006s
2: solved... in 0.035s
1: solved... in 0.006s
2: solved... in 0.036s
1: solved... in 0.006s
2: solved... in 0.036s
1: solved... in 0.006s
2: solved... in 0.037s
1: solved... in 0.006s
2: solved... in 0.036s
1: solved... in 0.006s
2: solved... in 0.038s
1: solved... in 0.006s
2: solved... in 0.038s
1: solved... in 0.006s
2: solved... in 0.039s
1: solved... in 0.007s
2: solved... in 0.038s
1: solved... in 0.006s
2: solved... in 0.039s
1: solved... in 0.006s
2: solved... in 0.039s
1: solved... in 0.006s
2: solved... in 0.039s
1: solved... in 0.006s
2: solved... in 0.039s
1: solved... in 0.007s
2: solved... in 0.04s
1: solved... in 0.006s
2: solved... in 0.04s
1: solved... in 0.007s
2: solved... in 0.041s
1: solved... in 0.006s
2: solved... in 0.041s
1: solved... in 0.006s
2: solved... in 0.041s
1: solved... in 0.006s
2: solved... in 0.044s
1: solved... in 0.006s
2: solved... in 0.044s
1: solved... in 0.006s
2: solved... in 0.042s
1: solved... in 0.006s
2: solved... in 0.042s
1: solved... in 0.006s
2: solved... in 0.043s
1: solved... in 0.007s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.007s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.007s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.008s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.015s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 4/4
Unrolled calls: Set((r9 == mult(cs, cs1)), (r10 == squareMap(cs2)), (r11 == squareMap(cs3)), (r12 == size(t)))
Inlining (r9 == mult(cs, cs1))
Unrolling (r10 == squareMap(cs2))
Unrolling (r11 == squareMap(cs3))
Creating VC for size
[[34m Info  [0m] - Number of new terms enumerated: 2
[[34m Info  [0m] - Template generated for function size : (((a?229 * #res) + a?228) ≤ 0)
Unrolling (r12 == size(t))
[[34m Info  [0m] Number of axiom instances: 8
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.013s
2: solved... in 0.006s
1: solved... in 0.012s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.009s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.006s
1: solved... in 0.009s
2: solved... in 0.007s
1: solved... in 0.009s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.009s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.009s
2: solved... in 0.007s
1: solved... in 0.009s
2: solved... in 0.007s
1: solved... in 0.009s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.009s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.009s
2: solved... in 0.009s
1: solved... in 0.009s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.009s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.009s
2: solved... in 0.01s
1: solved... in 0.01s
2: solved... in 0.012s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.009s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.009s
2: solved... in 0.01s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.009s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.009s
2: solved... in 0.011s
1: solved... in 0.009s
2: solved... in 0.01s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.009s
2: solved... in 0.01s
1: solved... in 0.009s
2: solved... in 0.011s
1: solved... in 0.009s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.009s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.009s
2: solved... in 0.014s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.009s
2: solved... in 0.011s
1: solved... in 0.009s
2: solved... in 0.011s
1: solved... in 0.009s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.012s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.009s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.009s
2: solved... in 0.012s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.009s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.009s
2: solved... in 0.012s
1: solved... in 0.009s
2: solved... in 0.013s
1: solved... in 0.013s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.009s
2: solved... in 0.013s
1: solved... in 0.009s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.012s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.009s
2: solved... in 0.012s
1: solved... in 0.01s
2: solved... in 0.012s
1: solved... in 0.009s
2: solved... in 0.012s
1: solved... in 0.009s
2: solved... in 0.012s
1: solved... in 0.009s
2: solved... in 0.012s
1: solved... in 0.01s
2: solved... in 0.012s
1: solved... in 0.008s
2: solved... in 0.012s
1: solved... in 0.009s
2: solved... in 0.012s
1: solved... in 0.008s
2: solved... in 0.012s
1: solved... in 0.009s
2: solved... in 0.014s
1: solved... in 0.013s
2: solved... in 0.013s
1: solved... in 0.011s
2: solved... in 0.013s
1: solved... in 0.009s
2: solved... in 0.013s
1: solved... in 0.009s
2: solved... in 0.013s
1: solved... in 0.009s
2: solved... in 0.013s
1: solved... in 0.009s
2: solved... in 0.012s
1: solved... in 0.008s
2: solved... in 0.012s
1: solved... in 0.008s
2: solved... in 0.013s
1: solved... in 0.009s
2: solved... in 0.019s
1: solved... in 0.009s
2: solved... in 0.013s
1: solved... in 0.009s
2: solved... in 0.012s
1: solved... in 0.009s
2: solved... in 0.012s
1: solved... in 0.009s
2: solved... in 0.013s
1: solved... in 0.009s
2: solved... in 0.013s
1: solved... in 0.009s
2: solved... in 0.013s
1: solved... in 0.009s
2: solved... in 0.013s
1: solved... in 0.01s
2: solved... in 0.016s
1: solved... in 0.01s
2: solved... in 0.014s
1: solved... in 0.01s
2: solved... in 0.013s
1: solved... in 0.009s
2: solved... in 0.014s
1: solved... in 0.012s
2: solved... in 0.013s
1: solved... in 0.008s
2: solved... in 0.013s
1: solved... in 0.008s
2: solved... in 0.014s
1: solved... in 0.009s
2: solved... in 0.014s
1: solved... in 0.009s
2: solved... in 0.013s
1: solved... in 0.009s
2: solved... in 0.014s
1: solved... in 0.01s
2: solved... in 0.018s
1: solved... in 0.01s
2: solved... in 0.014s
1: solved... in 0.01s
2: solved... in 0.014s
1: solved... in 0.01s
2: solved... in 0.014s
1: solved... in 0.009s
2: solved... in 0.013s
1: solved... in 0.009s
2: solved... in 0.014s
1: solved... in 0.01s
2: solved... in 0.015s
1: solved... in 0.009s
2: solved... in 0.016s
1: solved... in 0.009s
2: solved... in 0.014s
1: solved... in 0.01s
2: solved... in 0.014s
1: solved... in 0.01s
2: solved... in 0.015s
1: solved... in 0.01s
2: solved... in 0.014s
1: solved... in 0.009s
2: solved... in 0.015s
1: solved... in 0.009s
2: solved... in 0.015s
1: solved... in 0.01s
2: solved... in 0.016s
1: solved... in 0.009s
2: solved... in 0.016s
1: solved... in 0.01s
2: solved... in 0.015s
1: solved... in 0.009s
2: solved... in 0.016s
1: solved... in 0.009s
2: solved... in 0.016s
1: solved... in 0.009s
2: solved... in 0.015s
1: solved... in 0.009s
2: solved... in 0.015s
1: solved... in 0.009s
2: solved... in 0.018s
1: solved... in 0.011s
2: solved... in 0.016s
1: solved... in 0.01s
2: solved... in 0.017s
1: solved... in 0.015s
2: solved... in 0.016s
1: solved... in 0.009s
2: solved... in 0.016s
1: solved... in 0.01s
2: solved... in 0.016s
1: solved... in 0.009s
2: solved... in 0.016s
1: solved... in 0.009s
2: solved... in 0.016s
1: solved... in 0.009s
2: solved... in 0.016s
1: solved... in 0.01s
2: solved... in 0.016s
1: solved... in 0.009s
2: solved... in 0.018s
1: solved... in 0.009s
2: solved... in 0.022s
1: solved... in 0.009s
2: solved... in 0.017s
1: solved... in 0.009s
2: solved... in 0.017s
1: solved... in 0.01s
2: solved... in 0.017s
1: solved... in 0.013s
2: solved... in 0.021s
1: solved... in 0.012s
2: solved... in 0.018s
1: solved... in 0.01s
2: solved... in 0.017s
1: solved... in 0.009s
2: solved... in 0.017s
1: solved... in 0.01s
2: solved... in 0.018s
1: solved... in 0.009s
2: solved... in 0.017s
1: solved... in 0.013s
2: solved... in 0.018s
1: solved... in 0.01s
2: solved... in 0.021s
1: solved... in 0.009s
2: solved... in 0.018s
1: solved... in 0.01s
2: solved... in 0.018s
1: solved... in 0.01s
2: solved... in 0.019s
1: solved... in 0.01s
2: solved... in 0.019s
1: solved... in 0.009s
2: solved... in 0.019s
1: solved... in 0.01s
2: solved... in 0.019s
1: solved... in 0.013s
2: solved... in 0.023s
1: solved... in 0.011s
2: solved... in 0.02s
1: solved... in 0.01s
2: solved... in 0.024s
1: solved... in 0.011s
2: solved... in 0.019s
1: solved... in 0.01s
2: solved... in 0.019s
1: solved... in 0.01s
2: solved... in 0.019s
1: solved... in 0.009s
2: solved... in 0.02s
1: solved... in 0.009s
2: solved... in 0.019s
1: solved... in 0.009s
2: solved... in 0.019s
1: solved... in 0.01s
2: solved... in 0.019s
1: solved... in 0.009s
2: solved... in 0.02s
1: solved... in 0.009s
2: solved... in 0.02s
1: solved... in 0.009s
2: solved... in 0.02s
1: solved... in 0.01s
2: solved... in 0.026s
1: solved... in 0.011s
2: solved... in 0.021s
1: solved... in 0.009s
2: solved... in 0.02s
1: solved... in 0.009s
2: solved... in 0.02s
1: solved... in 0.01s
2: solved... in 0.02s
1: solved... in 0.01s
2: solved... in 0.021s
1: solved... in 0.009s
2: solved... in 0.021s
1: solved... in 0.009s
2: solved... in 0.021s
1: solved... in 0.009s
2: solved... in 0.021s
1: solved... in 0.01s
2: solved... in 0.027s
1: solved... in 0.009s
2: solved... in 0.021s
1: solved... in 0.01s
2: solved... in 0.022s
1: solved... in 0.009s
2: solved... in 0.021s
1: solved... in 0.009s
2: solved... in 0.028s
1: solved... in 0.012s
2: solved... in 0.023s
1: solved... in 0.01s
2: solved... in 0.022s
1: solved... in 0.009s
2: solved... in 0.021s
1: solved... in 0.009s
2: solved... in 0.022s
1: solved... in 0.009s
2: solved... in 0.022s
1: solved... in 0.011s
2: solved... in 0.022s
1: solved... in 0.01s
2: solved... in 0.022s
1: solved... in 0.01s
2: solved... in 0.023s
1: solved... in 0.01s
2: solved... in 0.023s
1: solved... in 0.01s
2: solved... in 0.023s
1: solved... in 0.009s
2: solved... in 0.024s
1: solved... in 0.009s
2: solved... in 0.024s
1: solved... in 0.013s
2: solved... in 0.027s
1: solved... in 0.01s
2: solved... in 0.024s
1: solved... in 0.01s
2: solved... in 0.024s
1: solved... in 0.01s
2: solved... in 0.024s
1: solved... in 0.009s
2: solved... in 0.024s
1: solved... in 0.01s
2: solved... in 0.024s
1: solved... in 0.01s
2: solved... in 0.024s
1: solved... in 0.01s
2: solved... in 0.024s
1: solved... in 0.01s
2: solved... in 0.024s
1: solved... in 0.009s
2: solved... in 0.03s
1: solved... in 0.009s
2: solved... in 0.025s
1: solved... in 0.01s
2: solved... in 0.025s
1: solved... in 0.013s
2: solved... in 0.029s
1: solved... in 0.011s
2: solved... in 0.025s
1: solved... in 0.01s
2: solved... in 0.025s
1: solved... in 0.01s
2: solved... in 0.025s
1: solved... in 0.009s
2: solved... in 0.025s
1: solved... in 0.009s
2: solved... in 0.026s
1: solved... in 0.009s
2: solved... in 0.025s
1: solved... in 0.01s
2: solved... in 0.026s
1: solved... in 0.009s
2: solved... in 0.026s
1: solved... in 0.009s
2: solved... in 0.025s
1: solved... in 0.009s
2: solved... in 0.026s
1: solved... in 0.009s
2: solved... in 0.031s
1: solved... in 0.012s
2: solved... in 0.031s
1: solved... in 0.014s
2: solved... in 0.026s
1: solved... in 0.01s
2: solved... in 0.026s
1: solved... in 0.009s
2: solved... in 0.026s
1: solved... in 0.009s
2: solved... in 0.027s
1: solved... in 0.009s
2: solved... in 0.027s
1: solved... in 0.01s
2: solved... in 0.027s
1: solved... in 0.01s
2: solved... in 0.026s
1: solved... in 0.009s
2: solved... in 0.026s
1: solved... in 0.009s
2: solved... in 0.027s
1: solved... in 0.01s
2: solved... in 0.027s
1: solved... in 0.013s
2: solved... in 0.033s
1: solved... in 0.011s
2: solved... in 0.027s
1: solved... in 0.009s
2: solved... in 0.028s
1: solved... in 0.01s
2: solved... in 0.027s
1: solved... in 0.009s
2: solved... in 0.028s
1: solved... in 0.01s
2: solved... in 0.028s
1: solved... in 0.01s
2: solved... in 0.042s
1: solved... in 0.015s
2: solved... in 0.048s
1: solved... in 0.015s
2: solved... in 0.048s
1: solved... in 0.015s
2: solved... in 0.04s
1: solved... in 0.012s
2: solved... in 0.03s
1: solved... in 0.009s
2: solved... in 0.029s
1: solved... in 0.01s
2: solved... in 0.029s
1: solved... in 0.009s
2: solved... in 0.029s
1: solved... in 0.01s
2: solved... in 0.029s
1: solved... in 0.009s
2: solved... in 0.029s
1: solved... in 0.009s
2: solved... in 0.031s
1: solved... in 0.009s
2: solved... in 0.03s
1: solved... in 0.01s
2: solved... in 0.029s
1: solved... in 0.009s
2: solved... in 0.03s
1: solved... in 0.011s
2: solved... in 0.037s
1: solved... in 0.011s
2: solved... in 0.03s
1: solved... in 0.01s
2: solved... in 0.03s
1: solved... in 0.009s
2: solved... in 0.031s
1: solved... in 0.009s
2: solved... in 0.031s
1: solved... in 0.009s
2: solved... in 0.031s
1: solved... in 0.01s
2: solved... in 0.031s
1: solved... in 0.01s
2: solved... in 0.031s
1: solved... in 0.009s
2: solved... in 0.031s
1: solved... in 0.01s
2: solved... in 0.031s
1: solved... in 0.01s
2: solved... in 0.04s
1: solved... in 0.012s
2: solved... in 0.033s
1: solved... in 0.01s
2: solved... in 0.031s
1: solved... in 0.009s
2: solved... in 0.034s
1: solved... in 0.009s
2: solved... in 0.032s
1: solved... in 0.01s
2: solved... in 0.032s
1: solved... in 0.009s
2: solved... in 0.032s
1: solved... in 0.01s
2: solved... in 0.032s
1: solved... in 0.01s
2: solved... in 0.033s
1: solved... in 0.009s
2: solved... in 0.032s
1: solved... in 0.009s
2: solved... in 0.04s
1: solved... in 0.011s
2: solved... in 0.036s
1: solved... in 0.009s
2: solved... in 0.033s
1: solved... in 0.01s
2: solved... in 0.033s
1: solved... in 0.013s
2: solved... in 0.034s
1: solved... in 0.01s
2: solved... in 0.034s
1: solved... in 0.01s
2: solved... in 0.034s
1: solved... in 0.01s
2: solved... in 0.034s
1: solved... in 0.009s
2: solved... in 0.037s
1: solved... in 0.01s
2: solved... in 0.034s
1: solved... in 0.009s
2: solved... in 0.043s
1: solved... in 0.011s
2: solved... in 0.036s
1: solved... in 0.01s
2: solved... in 0.035s
1: solved... in 0.009s
2: solved... in 0.034s
1: solved... in 0.01s
2: solved... in 0.035s
1: solved... in 0.009s
2: solved... in 0.035s
1: solved... in 0.009s
2: solved... in 0.035s
1: solved... in 0.01s
2: solved... in 0.035s
1: solved... in 0.009s
2: solved... in 0.035s
1: solved... in 0.01s
2: solved... in 0.036s
1: solved... in 0.011s
2: solved... in 0.044s
1: solved... in 0.01s
2: solved... in 0.036s
1: solved... in 0.01s
2: solved... in 0.036s
1: solved... in 0.009s
[[34m Info  [0m] - Found inductive invariant: squareMap --> ((((1 * res9._2) + (-12 * size(t))) + -1) <= 0)
[[34m Info  [0m] - Found inductive invariant: size --> (((0 * #res) + -8) <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[34m Info  [0m] - Invariant verified
[[34m Info  [0m] - considering function fact...
[[34m Info  [0m] Body: if (((n == 1) ∨ (n == 0)))
            (1, 3)
          else
            (let (e19,t27 := (let (e21,t29 := (let (e23,t31 := fact((n - 1))) in
              (e23, (1 + (1 + t31))))) in
              (mult(n, e21), (t29 + 1)))) in
              (e19, (3 + t27)))
[[34m Info  [0m] Post: true
falttened Body: ((n >= 0) && (res10 == ifres8) && ((((n == 1) || (n == 0)) && (ifres8 == tp6) && (arg7 == 1) && (arg8 == 3) && (tp6 == (arg7, arg8))) || (((n < 1) || (n > 1)) && ((n < 0) || (n > 0)) && (ifres8 == tp7) && (arg9 == (3 + t27)) && (tp7 == (e19, arg9)) && (tres6 == r31) && (arg10 == (n - 1)) && (r31 == fact(arg10)) && (t27 == (t29 + 1)) && (t31 == ts16) && (ts16 == tres6._2) && (t29 == (1 + (1 + t31))) && (e19 == r32) && (r32 == mult(n, e21)) && (e21 == e23) && (e23 == ts17) && (ts17 == tres6._1))))
Flattened Post: ((ts18 > ((a?2 * n) + b?2)) && (ts18 == res10._2))
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.006s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.005s
1: solved... in 0.006s
2: solved... in 0.005s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.018s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.02s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 2/2
Unrolled calls: Set((r31 == fact(arg10)), (r32 == mult(n, e21)))
Unrolling (r31 == fact(arg10))
Inlining (r32 == mult(n, e21))
[[34m Info  [0m] Number of axiom instances: 8
1: solved... in 0.006s
2: solved... in 0.005s
1: solved... in 0.006s
2: solved... in 0.005s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.006s
2: solved... in 0.005s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.006s
2: solved... in 0.005s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
[[34m Info  [0m] - Found inductive invariant: fact --> ((((1 * res10._2) + (-6 * n)) + -3) <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[34m Info  [0m] - Invariant verified
[[34m Info  [0m] - considering function parallelSearch...
[[34m Info  [0m] Body: if (t.isInstanceOf[Leaf])
            (false, 1)
          else
            (let (e50,t59 := if ((t.value == elem))
              (true, 2)
            else
              (let (e53,t62 := (let (ir3,it3 := (let (e56,t66 := parallelSearch(elem, t.right)) in
                (e56, (1 + (1 + t66))))) in
                (let (r7,t63 := (let (ir4,it4 := (let (e60,t71 := parallelSearch(elem, t.left)) in
                  (e60, (1 + (1 + t71))))) in
                  (let (r8,t68 := if ((ir3 ∨ ir4))
                    (true, 1)
                  else
                    (false, 1)) in
                    (r8, (t68 + (it4 + 1)))))) in
                  (r7, (t63 + (it3 + 1)))))) in
                (e53, (2 + t62)))) in
              (e50, (1 + t59)))
[[34m Info  [0m] Post: true
falttened Body: ((res12 == ifres13) && ((ci10 && (ci10 == t.isInstanceOf[Leaf]) && (ifres13 == tp10) && !(arg16) && (arg17 == 1) && (tp10 == (arg16, arg17))) || (!(ci11) && (ci11 == t.isInstanceOf[Leaf]) && (ifres13 == tp11) && (arg18 == (1 + t59)) && (tp11 == (e50, arg18)) && (((cs16 == elem) && (cs16 == t.value) && (ifres14 == tp12) && arg19 && (arg20 == 2) && (tp12 == (arg19, arg20))) || ((((cs17 < elem) && (cs17 == t.value)) || ((cs18 > elem) && (cs18 == t.value))) && (ifres14 == tp13) && (arg21 == (2 + t62)) && (tp13 == (e53, arg21)) && (((ir3 || ir4) && (ifres15 == tp14) && arg22 && (arg23 == 1) && (tp14 == (arg22, arg23))) || (!(ir3) && !(ir4) && (ifres15 == tp15) && !(arg24) && (arg25 == 1) && (tp15 == (arg24, arg25)))) && (t63 == (t68 + (it4 + 1))) && (!(ir4) || e60) && (!(e60) || ir4) && (!(r7) || r8) && (!(r8) || r7) && (it4 == (1 + (1 + t71))) && (!(ir3) || e56) && (!(e56) || ir3) && (t68 == ts23) && (ts23 == ifres15._2) && (t71 == ts24) && (ts24 == tres8._2) && (!(e56) || (ts25 && (ts25 == tres9._1))) && ((!(ts26) && (ts26 == tres9._1)) || e56) && (t66 == ts27) && (ts27 == tres9._2) && (tres8 == r38) && (cs19 == t.left) && (r38 == parallelSearch(elem, cs19)) && (!(r8) || (ts28 && (ts28 == ifres15._1))) && ((!(ts29) && (ts29 == ifres15._1)) || r8) && (!(e60) || (ts30 && (ts30 == tres8._1))) && ((!(ts31) && (ts31 == tres8._1)) || e60) && (tres9 == r39) && (cs20 == t.right) && (r39 == parallelSearch(elem, cs20)) && (t62 == (t63 + (it3 + 1))) && (!(e53) || r7) && (!(r7) || e53) && (it3 == (1 + (1 + t66))))) && (!(e50) || (ts32 && (ts32 == ifres14._1))) && ((!(ts33) && (ts33 == ifres14._1)) || e50) && (t59 == ts34) && (ts34 == ifres14._2))))
Flattened Post: ((ts35 > ((a? * r40) + b?)) && (ts35 == res12._2) && (r40 == size(t)))
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.005s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.006s
2: solved... in 0.005s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.005s
1: solved... in 0.006s
2: solved... in 0.005s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.013s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.017s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.009s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.008s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.008s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.017s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.007s
2: solved... in 0.013s
1: solved... in 0.007s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.012s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 3/3
Unrolled calls: Set((r38 == parallelSearch(elem, cs19)), (r39 == parallelSearch(elem, cs20)), (r40 == size(t)))
Unrolling (r38 == parallelSearch(elem, cs19))
Unrolling (r39 == parallelSearch(elem, cs20))
Creating VC for size
Unrolling (r40 == size(t))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.013s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.005s
1: solved... in 0.011s
2: solved... in 0.005s
1: solved... in 0.011s
2: solved... in 0.005s
1: solved... in 0.01s
2: solved... in 0.005s
1: solved... in 0.013s
2: solved... in 0.005s
1: solved... in 0.01s
2: solved... in 0.005s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.01s
2: solved... in 0.007s
1: solved... in 0.012s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.01s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.01s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.012s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.01s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.012s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.012s
2: solved... in 0.013s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.007s
1: solved... in 0.012s
2: solved... in 0.008s
1: solved... in 0.012s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.012s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.013s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.013s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.013s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.013s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.013s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.013s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.013s
2: solved... in 0.013s
1: solved... in 0.02s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.013s
2: solved... in 0.012s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.013s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.013s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.013s
2: solved... in 0.013s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.013s
1: solved... in 0.013s
2: solved... in 0.013s
1: solved... in 0.011s
2: solved... in 0.013s
1: solved... in 0.013s
2: solved... in 0.013s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.013s
2: solved... in 0.014s
1: solved... in 0.012s
2: solved... in 0.013s
1: solved... in 0.013s
2: solved... in 0.013s
1: solved... in 0.01s
2: solved... in 0.013s
1: solved... in 0.013s
2: solved... in 0.014s
1: solved... in 0.011s
2: solved... in 0.013s
1: solved... in 0.013s
2: solved... in 0.014s
1: solved... in 0.011s
2: solved... in 0.013s
1: solved... in 0.013s
2: solved... in 0.014s
1: solved... in 0.012s
2: solved... in 0.014s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.023s
2: solved... in 0.013s
1: solved... in 0.013s
2: solved... in 0.013s
1: solved... in 0.011s
2: solved... in 0.013s
1: solved... in 0.013s
2: solved... in 0.014s
1: solved... in 0.011s
2: solved... in 0.013s
1: solved... in 0.013s
2: solved... in 0.014s
1: solved... in 0.011s
2: solved... in 0.013s
1: solved... in 0.013s
2: solved... in 0.014s
1: solved... in 0.011s
2: solved... in 0.014s
1: solved... in 0.013s
2: solved... in 0.014s
1: solved... in 0.011s
2: solved... in 0.02s
1: solved... in 0.013s
2: solved... in 0.015s
1: solved... in 0.01s
2: solved... in 0.014s
1: solved... in 0.012s
2: solved... in 0.014s
1: solved... in 0.011s
2: solved... in 0.014s
1: solved... in 0.013s
2: solved... in 0.014s
1: solved... in 0.01s
2: solved... in 0.013s
1: solved... in 0.012s
2: solved... in 0.015s
1: solved... in 0.011s
2: solved... in 0.014s
1: solved... in 0.012s
2: solved... in 0.015s
1: solved... in 0.011s
2: solved... in 0.014s
1: solved... in 0.013s
2: solved... in 0.015s
1: solved... in 0.011s
2: solved... in 0.015s
1: solved... in 0.013s
2: solved... in 0.015s
1: solved... in 0.012s
2: solved... in 0.014s
1: solved... in 0.012s
2: solved... in 0.015s
1: solved... in 0.01s
2: solved... in 0.014s
1: solved... in 0.013s
2: solved... in 0.015s
1: solved... in 0.011s
2: solved... in 0.014s
1: solved... in 0.012s
2: solved... in 0.015s
1: solved... in 0.011s
2: solved... in 0.014s
1: solved... in 0.013s
2: solved... in 0.015s
1: solved... in 0.011s
2: solved... in 0.014s
1: solved... in 0.013s
2: solved... in 0.015s
1: solved... in 0.01s
2: solved... in 0.014s
1: solved... in 0.013s
2: solved... in 0.016s
1: solved... in 0.011s
2: solved... in 0.015s
1: solved... in 0.013s
2: solved... in 0.016s
1: solved... in 0.011s
2: solved... in 0.015s
1: solved... in 0.013s
2: solved... in 0.016s
1: solved... in 0.011s
2: solved... in 0.015s
1: solved... in 0.013s
2: solved... in 0.015s
1: solved... in 0.011s
2: solved... in 0.015s
1: solved... in 0.012s
2: solved... in 0.015s
1: solved... in 0.011s
2: solved... in 0.015s
1: solved... in 0.012s
2: solved... in 0.016s
1: solved... in 0.011s
2: solved... in 0.015s
1: solved... in 0.012s
2: solved... in 0.016s
1: solved... in 0.01s
2: solved... in 0.016s
1: solved... in 0.013s
2: solved... in 0.017s
1: solved... in 0.011s
2: solved... in 0.015s
1: solved... in 0.012s
2: solved... in 0.016s
1: solved... in 0.011s
2: solved... in 0.016s
1: solved... in 0.012s
2: solved... in 0.016s
1: solved... in 0.011s
2: solved... in 0.015s
1: solved... in 0.012s
2: solved... in 0.016s
1: solved... in 0.011s
2: solved... in 0.015s
1: solved... in 0.013s
2: solved... in 0.017s
1: solved... in 0.011s
2: solved... in 0.016s
1: solved... in 0.013s
2: solved... in 0.017s
1: solved... in 0.011s
2: solved... in 0.016s
1: solved... in 0.013s
2: solved... in 0.016s
1: solved... in 0.011s
2: solved... in 0.016s
1: solved... in 0.013s
2: solved... in 0.017s
1: solved... in 0.013s
2: solved... in 0.016s
1: solved... in 0.012s
2: solved... in 0.017s
1: solved... in 0.011s
2: solved... in 0.016s
1: solved... in 0.013s
2: solved... in 0.017s
1: solved... in 0.011s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.01s
2: solved... in 0.016s
1: solved... in 0.012s
2: solved... in 0.018s
1: solved... in 0.011s
2: solved... in 0.016s
1: solved... in 0.013s
2: solved... in 0.017s
1: solved... in 0.01s
2: solved... in 0.016s
1: solved... in 0.012s
2: solved... in 0.017s
1: solved... in 0.011s
2: solved... in 0.016s
1: solved... in 0.013s
2: solved... in 0.017s
1: solved... in 0.01s
2: solved... in 0.016s
1: solved... in 0.012s
2: solved... in 0.016s
1: solved... in 0.01s
2: solved... in 0.016s
1: solved... in 0.012s
2: solved... in 0.017s
1: solved... in 0.011s
2: solved... in 0.017s
1: solved... in 0.012s
2: solved... in 0.017s
1: solved... in 0.011s
2: solved... in 0.017s
1: solved... in 0.012s
2: solved... in 0.017s
1: solved... in 0.011s
2: solved... in 0.017s
1: solved... in 0.012s
2: solved... in 0.017s
1: solved... in 0.011s
2: solved... in 0.017s
1: solved... in 0.013s
2: solved... in 0.018s
1: solved... in 0.011s
2: solved... in 0.017s
1: solved... in 0.012s
2: solved... in 0.017s
1: solved... in 0.01s
2: solved... in 0.016s
1: solved... in 0.013s
2: solved... in 0.018s
1: solved... in 0.011s
2: solved... in 0.017s
1: solved... in 0.012s
2: solved... in 0.017s
1: solved... in 0.011s
2: solved... in 0.017s
1: solved... in 0.012s
2: solved... in 0.018s
1: solved... in 0.011s
2: solved... in 0.016s
1: solved... in 0.012s
2: solved... in 0.018s
1: solved... in 0.011s
2: solved... in 0.017s
1: solved... in 0.012s
2: solved... in 0.018s
1: solved... in 0.011s
2: solved... in 0.017s
1: solved... in 0.012s
2: solved... in 0.021s
1: solved... in 0.01s
2: solved... in 0.018s
1: solved... in 0.012s
2: solved... in 0.018s
1: solved... in 0.011s
2: solved... in 0.018s
1: solved... in 0.013s
2: solved... in 0.019s
1: solved... in 0.011s
2: solved... in 0.018s
1: solved... in 0.012s
2: solved... in 0.018s
1: solved... in 0.011s
2: solved... in 0.017s
1: solved... in 0.012s
2: solved... in 0.025s
1: solved... in 0.012s
2: solved... in 0.018s
1: solved... in 0.011s
2: solved... in 0.018s
1: solved... in 0.011s
2: solved... in 0.017s
1: solved... in 0.012s
2: solved... in 0.019s
1: solved... in 0.011s
2: solved... in 0.018s
1: solved... in 0.012s
2: solved... in 0.019s
1: solved... in 0.011s
2: solved... in 0.018s
1: solved... in 0.013s
2: solved... in 0.019s
1: solved... in 0.012s
2: solved... in 0.019s
1: solved... in 0.013s
2: solved... in 0.019s
1: solved... in 0.026s
2: solved... in 0.018s
1: solved... in 0.012s
2: solved... in 0.019s
1: solved... in 0.012s
2: solved... in 0.019s
1: solved... in 0.012s
2: solved... in 0.019s
1: solved... in 0.013s
2: solved... in 0.02s
1: solved... in 0.012s
2: solved... in 0.019s
1: solved... in 0.013s
2: solved... in 0.02s
1: solved... in 0.012s
2: solved... in 0.02s
1: solved... in 0.013s
2: solved... in 0.02s
1: solved... in 0.013s
2: solved... in 0.02s
1: solved... in 0.012s
2: solved... in 0.019s
1: solved... in 0.012s
2: solved... in 0.019s
1: solved... in 0.012s
2: solved... in 0.019s
1: solved... in 0.013s
2: solved... in 0.02s
1: solved... in 0.012s
2: solved... in 0.021s
1: solved... in 0.013s
2: solved... in 0.02s
1: solved... in 0.013s
2: solved... in 0.02s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.013s
2: solved... in 0.02s
1: solved... in 0.013s
2: solved... in 0.021s
1: solved... in 0.013s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.013s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.013s
2: solved... in 0.02s
1: solved... in 0.013s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.022s
1: solved... in 0.013s
2: solved... in 0.021s
1: solved... in 0.013s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.022s
1: solved... in 0.013s
2: solved... in 0.021s
1: solved... in 0.013s
2: solved... in 0.021s
1: solved... in 0.013s
2: solved... in 0.023s
1: solved... in 0.013s
2: solved... in 0.021s
1: solved... in 0.013s
2: solved... in 0.021s
1: solved... in 0.013s
2: solved... in 0.023s
1: solved... in 0.013s
2: solved... in 0.022s
1: solved... in 0.013s
2: solved... in 0.023s
1: solved... in 0.013s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.013s
2: solved... in 0.03s
1: solved... in 0.013s
2: solved... in 0.023s
1: solved... in 0.013s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.023s
1: solved... in 0.013s
2: solved... in 0.024s
1: solved... in 0.013s
2: solved... in 0.024s
1: solved... in 0.013s
2: solved... in 0.024s
1: solved... in 0.013s
2: solved... in 0.024s
1: solved... in 0.013s
2: solved... in 0.024s
1: solved... in 0.013s
2: solved... in 0.024s
1: solved... in 0.013s
2: solved... in 0.025s
1: solved... in 0.013s
2: solved... in 0.025s
1: solved... in 0.013s
2: solved... in 0.027s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.013s
2: solved... in 0.025s
1: solved... in 0.015s
2: solved... in 0.025s
1: solved... in 0.013s
2: solved... in 0.026s
1: solved... in 0.013s
2: solved... in 0.025s
1: solved... in 0.013s
2: solved... in 0.025s
1: solved... in 0.013s
2: solved... in 0.025s
1: solved... in 0.013s
2: solved... in 0.025s
1: solved... in 0.013s
2: solved... in 0.025s
1: solved... in 0.015s
2: solved... in 0.027s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.013s
2: solved... in 0.026s
1: solved... in 0.013s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.013s
2: solved... in 0.025s
1: solved... in 0.013s
2: solved... in 0.026s
1: solved... in 0.013s
2: solved... in 0.026s
1: solved... in 0.013s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.027s
1: solved... in 0.013s
2: solved... in 0.026s
1: solved... in 0.013s
2: solved... in 0.027s
1: solved... in 0.013s
2: solved... in 0.027s
1: solved... in 0.013s
2: solved... in 0.027s
1: solved... in 0.013s
2: solved... in 0.027s
1: solved... in 0.013s
2: solved... in 0.027s
1: solved... in 0.013s
2: solved... in 0.027s
1: solved... in 0.013s
2: solved... in 0.027s
1: solved... in 0.027s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.013s
2: solved... in 0.027s
1: solved... in 0.013s
2: solved... in 0.028s
1: solved... in 0.013s
2: solved... in 0.029s
1: solved... in 0.013s
2: solved... in 0.029s
1: solved... in 0.013s
2: solved... in 0.028s
1: solved... in 0.013s
2: solved... in 0.029s
1: solved... in 0.013s
2: solved... in 0.028s
1: solved... in 0.013s
2: solved... in 0.03s
1: solved... in 0.013s
2: solved... in 0.029s
1: solved... in 0.013s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.013s
2: solved... in 0.029s
1: solved... in 0.013s
2: solved... in 0.028s
1: solved... in 0.013s
2: solved... in 0.029s
1: solved... in 0.013s
2: solved... in 0.03s
1: solved... in 0.013s
2: solved... in 0.03s
1: solved... in 0.013s
2: solved... in 0.031s
1: solved... in 0.013s
2: solved... in 0.03s
1: solved... in 0.014s
2: solved... in 0.03s
1: solved... in 0.013s
2: solved... in 0.031s
1: solved... in 0.013s
2: solved... in 0.029s
1: solved... in 0.013s
2: solved... in 0.031s
1: solved... in 0.013s
2: solved... in 0.03s
1: solved... in 0.013s
2: solved... in 0.029s
1: solved... in 0.013s
2: solved... in 0.03s
1: solved... in 0.013s
2: solved... in 0.031s
1: solved... in 0.013s
2: solved... in 0.033s
1: solved... in 0.013s
2: solved... in 0.031s
1: solved... in 0.013s
2: solved... in 0.031s
1: solved... in 0.013s
2: solved... in 0.031s
1: solved... in 0.013s
2: solved... in 0.031s
1: solved... in 0.013s
2: solved... in 0.04s
1: solved... in 0.013s
2: solved... in 0.031s
1: solved... in 0.013s
2: solved... in 0.031s
1: solved... in 0.013s
2: solved... in 0.034s
1: solved... in 0.014s
2: solved... in 0.033s
1: solved... in 0.014s
2: solved... in 0.032s
1: solved... in 0.014s
2: solved... in 0.032s
1: solved... in 0.013s
2: solved... in 0.033s
1: solved... in 0.013s
2: solved... in 0.033s
1: solved... in 0.013s
2: solved... in 0.032s
1: solved... in 0.013s
2: solved... in 0.039s
1: solved... in 0.013s
2: solved... in 0.033s
1: solved... in 0.013s
2: solved... in 0.034s
1: solved... in 0.013s
2: solved... in 0.033s
1: solved... in 0.014s
2: solved... in 0.033s
1: solved... in 0.013s
2: solved... in 0.034s
1: solved... in 0.013s
2: solved... in 0.034s
1: solved... in 0.013s
2: solved... in 0.033s
1: solved... in 0.013s
2: solved... in 0.033s
1: solved... in 0.014s
2: solved... in 0.034s
1: solved... in 0.014s
2: solved... in 0.039s
1: solved... in 0.014s
2: solved... in 0.034s
1: solved... in 0.013s
2: solved... in 0.034s
1: solved... in 0.014s
2: solved... in 0.035s
1: solved... in 0.013s
2: solved... in 0.035s
1: solved... in 0.013s
2: solved... in 0.034s
1: solved... in 0.013s
2: solved... in 0.035s
1: solved... in 0.013s
2: solved... in 0.035s
1: solved... in 0.014s
2: solved... in 0.035s
1: solved... in 0.014s
2: solved... in 0.037s
1: solved... in 0.014s
2: solved... in 0.035s
1: solved... in 0.013s
2: solved... in 0.035s
1: solved... in 0.014s
2: solved... in 0.035s
1: solved... in 0.013s
2: solved... in 0.036s
1: solved... in 0.013s
2: solved... in 0.036s
1: solved... in 0.013s
2: solved... in 0.036s
1: solved... in 0.013s
2: solved... in 0.036s
1: solved... in 0.013s
2: solved... in 0.037s
1: solved... in 0.029s
2: solved... in 0.036s
1: solved... in 0.013s
2: solved... in 0.037s
1: solved... in 0.013s
2: solved... in 0.036s
1: solved... in 0.013s
2: solved... in 0.036s
1: solved... in 0.013s
2: solved... in 0.037s
1: solved... in 0.013s
2: solved... in 0.037s
1: solved... in 0.013s
2: solved... in 0.037s
1: solved... in 0.013s
2: solved... in 0.038s
1: solved... in 0.014s
2: solved... in 0.038s
1: solved... in 0.014s
2: solved... in 0.038s
1: solved... in 0.013s
2: solved... in 0.037s
1: solved... in 0.013s
2: solved... in 0.037s
1: solved... in 0.014s
2: solved... in 0.038s
1: solved... in 0.013s
2: solved... in 0.038s
1: solved... in 0.013s
2: solved... in 0.037s
1: solved... in 0.014s
2: solved... in 0.039s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 10/10
Unrolled calls: Set((r54 == size(cs20)), (r48 == parallelSearch(elem, cs30)), (r47 == parallelSearch(elem, cs29)), (r43 == parallelSearch(elem, cs24)), (r49 == size(cs31)), (r51 == size(cs33)), (r44 == parallelSearch(elem, cs25)), (r52 == size(cs34)), (r50 == size(cs32)), (r53 == size(cs19)))
Unrolling (r52 == size(cs34))
Unrolling (r51 == size(cs33))
Unrolling (r50 == size(cs32))
Unrolling (r49 == size(cs31))
Unrolling (r53 == size(cs19))
Unrolling (r54 == size(cs20))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.018s
2: solved... in 0.006s
1: solved... in 0.013s
2: solved... in 0.006s
1: solved... in 0.012s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.015s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.015s
2: solved... in 0.006s
1: solved... in 0.016s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.013s
2: solved... in 0.007s
1: solved... in 0.013s
2: solved... in 0.007s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.016s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.015s
2: solved... in 0.009s
1: solved... in 0.015s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.008s
1: solved... in 0.016s
2: solved... in 0.009s
1: solved... in 0.018s
2: solved... in 0.009s
1: solved... in 0.016s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.009s
1: solved... in 0.015s
2: solved... in 0.009s
1: solved... in 0.015s
2: solved... in 0.009s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.009s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.016s
2: solved... in 0.011s
1: solved... in 0.013s
2: solved... in 0.012s
1: solved... in 0.016s
2: solved... in 0.011s
1: solved... in 0.016s
2: solved... in 0.012s
1: solved... in 0.015s
2: solved... in 0.011s
1: solved... in 0.015s
2: solved... in 0.012s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.015s
2: solved... in 0.012s
1: solved... in 0.015s
2: solved... in 0.012s
1: solved... in 0.015s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.014s
1: solved... in 0.015s
2: solved... in 0.014s
1: solved... in 0.015s
2: solved... in 0.014s
1: solved... in 0.015s
2: solved... in 0.014s
1: solved... in 0.015s
2: solved... in 0.015s
1: solved... in 0.019s
2: solved... in 0.015s
1: solved... in 0.015s
2: solved... in 0.014s
1: solved... in 0.015s
2: solved... in 0.015s
1: solved... in 0.013s
2: solved... in 0.015s
1: solved... in 0.015s
2: solved... in 0.015s
1: solved... in 0.016s
2: solved... in 0.016s
1: solved... in 0.016s
2: solved... in 0.015s
1: solved... in 0.016s
2: solved... in 0.015s
1: solved... in 0.015s
2: solved... in 0.016s
1: solved... in 0.016s
2: solved... in 0.016s
1: solved... in 0.015s
2: solved... in 0.016s
1: solved... in 0.015s
2: solved... in 0.016s
1: solved... in 0.016s
2: solved... in 0.017s
1: solved... in 0.015s
2: solved... in 0.017s
1: solved... in 0.015s
2: solved... in 0.017s
1: solved... in 0.015s
2: solved... in 0.017s
1: solved... in 0.015s
2: solved... in 0.017s
1: solved... in 0.015s
2: solved... in 0.017s
1: solved... in 0.015s
2: solved... in 0.017s
1: solved... in 0.015s
2: solved... in 0.019s
1: solved... in 0.015s
2: solved... in 0.018s
1: solved... in 0.015s
2: solved... in 0.018s
1: solved... in 0.015s
2: solved... in 0.018s
1: solved... in 0.015s
2: solved... in 0.018s
1: solved... in 0.016s
2: solved... in 0.018s
1: solved... in 0.015s
2: solved... in 0.018s
1: solved... in 0.015s
2: solved... in 0.019s
1: solved... in 0.015s
2: solved... in 0.019s
1: solved... in 0.016s
2: solved... in 0.02s
1: solved... in 0.015s
2: solved... in 0.02s
1: solved... in 0.015s
2: solved... in 0.019s
1: solved... in 0.015s
2: solved... in 0.02s
1: solved... in 0.016s
2: solved... in 0.02s
1: solved... in 0.015s
2: solved... in 0.02s
1: solved... in 0.015s
2: solved... in 0.022s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.015s
2: solved... in 0.02s
1: solved... in 0.015s
2: solved... in 0.02s
1: solved... in 0.015s
2: solved... in 0.021s
1: solved... in 0.015s
2: solved... in 0.021s
1: solved... in 0.015s
2: solved... in 0.021s
1: solved... in 0.015s
2: solved... in 0.022s
1: solved... in 0.016s
2: solved... in 0.022s
1: solved... in 0.015s
2: solved... in 0.022s
1: solved... in 0.015s
2: solved... in 0.021s
1: solved... in 0.015s
2: solved... in 0.022s
1: solved... in 0.015s
2: solved... in 0.022s
1: solved... in 0.015s
2: solved... in 0.023s
1: solved... in 0.015s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.015s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.015s
2: solved... in 0.023s
1: solved... in 0.015s
2: solved... in 0.023s
1: solved... in 0.015s
2: solved... in 0.023s
1: solved... in 0.015s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.015s
2: solved... in 0.024s
1: solved... in 0.015s
2: solved... in 0.024s
1: solved... in 0.015s
2: solved... in 0.025s
1: solved... in 0.015s
2: solved... in 0.024s
1: solved... in 0.015s
2: solved... in 0.025s
1: solved... in 0.015s
2: solved... in 0.025s
1: solved... in 0.015s
2: solved... in 0.026s
1: solved... in 0.015s
2: solved... in 0.025s
1: solved... in 0.015s
2: solved... in 0.032s
1: solved... in 0.015s
2: solved... in 0.026s
1: solved... in 0.015s
2: solved... in 0.026s
1: solved... in 0.015s
2: solved... in 0.028s
1: solved... in 0.015s
2: solved... in 0.028s
1: solved... in 0.016s
2: solved... in 0.028s
1: solved... in 0.015s
2: solved... in 0.027s
1: solved... in 0.015s
2: solved... in 0.027s
1: solved... in 0.015s
2: solved... in 0.027s
1: solved... in 0.015s
2: solved... in 0.029s
1: solved... in 0.019s
2: solved... in 0.028s
1: solved... in 0.015s
2: solved... in 0.028s
1: solved... in 0.015s
2: solved... in 0.03s
1: solved... in 0.015s
2: solved... in 0.03s
1: solved... in 0.015s
2: solved... in 0.028s
1: solved... in 0.015s
2: solved... in 0.029s
1: solved... in 0.015s
2: solved... in 0.028s
1: solved... in 0.015s
2: solved... in 0.029s
1: solved... in 0.015s
2: solved... in 0.031s
1: solved... in 0.015s
2: solved... in 0.03s
1: solved... in 0.015s
2: solved... in 0.03s
1: solved... in 0.022s
2: solved... in 0.03s
1: solved... in 0.015s
2: solved... in 0.03s
1: solved... in 0.015s
2: solved... in 0.03s
1: solved... in 0.014s
2: solved... in 0.031s
1: solved... in 0.015s
2: solved... in 0.031s
1: solved... in 0.015s
2: solved... in 0.031s
1: solved... in 0.015s
2: solved... in 0.032s
1: solved... in 0.015s
2: solved... in 0.031s
1: solved... in 0.015s
2: solved... in 0.031s
1: solved... in 0.015s
2: solved... in 0.033s
1: solved... in 0.016s
2: solved... in 0.032s
1: solved... in 0.023s
2: solved... in 0.032s
1: solved... in 0.015s
2: solved... in 0.033s
1: solved... in 0.015s
2: solved... in 0.033s
1: solved... in 0.015s
2: solved... in 0.033s
1: solved... in 0.016s
2: solved... in 0.035s
1: solved... in 0.015s
2: solved... in 0.034s
1: solved... in 0.015s
2: solved... in 0.035s
1: solved... in 0.015s
2: solved... in 0.034s
1: solved... in 0.015s
2: solved... in 0.035s
1: solved... in 0.015s
2: solved... in 0.034s
1: solved... in 0.015s
2: solved... in 0.034s
1: solved... in 0.016s
2: solved... in 0.035s
1: solved... in 0.015s
2: solved... in 0.036s
1: solved... in 0.015s
2: solved... in 0.035s
1: solved... in 0.015s
2: solved... in 0.035s
1: solved... in 0.014s
2: solved... in 0.035s
1: solved... in 0.015s
2: solved... in 0.036s
1: solved... in 0.016s
2: solved... in 0.037s
1: solved... in 0.015s
2: solved... in 0.039s
1: solved... in 0.015s
2: solved... in 0.035s
1: solved... in 0.015s
2: solved... in 0.036s
1: solved... in 0.015s
2: solved... in 0.036s
1: solved... in 0.015s
2: solved... in 0.037s
1: solved... in 0.016s
2: solved... in 0.038s
1: solved... in 0.015s
2: solved... in 0.038s
1: solved... in 0.015s
2: solved... in 0.037s
1: solved... in 0.015s
2: solved... in 0.037s
1: solved... in 0.013s
2: solved... in 0.043s
1: solved... in 0.016s
2: solved... in 0.039s
1: solved... in 0.015s
2: solved... in 0.037s
1: solved... in 0.015s
2: solved... in 0.039s
1: solved... in 0.015s
2: solved... in 0.041s
1: solved... in 0.016s
2: solved... in 0.039s
1: solved... in 0.015s
2: solved... in 0.04s
1: solved... in 0.015s
2: solved... in 0.041s
1: solved... in 0.015s
2: solved... in 0.043s
1: solved... in 0.013s
2: solved... in 0.041s
1: solved... in 0.015s
2: solved... in 0.042s
1: solved... in 0.019s
2: solved... in 0.046s
1: solved... in 0.015s
2: solved... in 0.041s
1: solved... in 0.015s
2: solved... in 0.043s
1: solved... in 0.016s
2: solved... in 0.043s
1: solved... in 0.016s
2: solved... in 0.043s
1: solved... in 0.015s
2: solved... in 0.044s
1: solved... in 0.014s
2: solved... in 0.044s
1: solved... in 0.015s
2: solved... in 0.047s
1: solved... in 0.036s
2: solved... in 0.043s
1: solved... in 0.016s
2: solved... in 0.047s
1: solved... in 0.013s
2: solved... in 0.046s
1: solved... in 0.019s
2: solved... in 0.044s
1: solved... in 0.016s
2: solved... in 0.061s
1: solved... in 0.014s
2: solved... in 0.054s
1: solved... in 0.019s
2: solved... in 0.045s
1: solved... in 0.013s
2: solved... in 0.049s
1: solved... in 0.017s
2: solved... in 0.049s
1: solved... in 0.015s
2: solved... in 0.053s
1: solved... in 0.016s
2: solved... in 0.049s
1: solved... in 0.016s
2: solved... in 0.046s
1: solved... in 0.019s
2: solved... in 0.048s
1: solved... in 0.015s
2: solved... in 0.049s
1: solved... in 0.015s
2: solved... in 0.046s
1: solved... in 0.019s
2: solved... in 0.049s
1: solved... in 0.016s
2: solved... in 0.048s
1: solved... in 0.016s
2: solved... in 0.047s
1: solved... in 0.015s
2: solved... in 0.047s
1: solved... in 0.016s
2: solved... in 0.047s
1: solved... in 0.016s
2: solved... in 0.05s
1: solved... in 0.016s
2: solved... in 0.048s
1: solved... in 0.016s
2: solved... in 0.048s
1: solved... in 0.016s
2: solved... in 0.052s
1: solved... in 0.016s
2: solved... in 0.049s
1: solved... in 0.016s
2: solved... in 0.054s
1: solved... in 0.017s
2: solved... in 0.052s
1: solved... in 0.014s
2: solved... in 0.052s
1: solved... in 0.015s
2: solved... in 0.052s
1: solved... in 0.014s
2: solved... in 0.055s
1: solved... in 0.016s
2: solved... in 0.055s
1: solved... in 0.017s
2: solved... in 0.055s
1: solved... in 0.014s
2: solved... in 0.055s
1: solved... in 0.015s
2: solved... in 0.054s
1: solved... in 0.016s
2: solved... in 0.051s
1: solved... in 0.016s
2: solved... in 0.055s
1: solved... in 0.018s
2: solved... in 0.05s
1: solved... in 0.016s
2: solved... in 0.052s
1: solved... in 0.016s
2: solved... in 0.053s
1: solved... in 0.016s
2: solved... in 0.052s
1: solved... in 0.016s
2: solved... in 0.06s
1: solved... in 0.016s
2: solved... in 0.053s
1: solved... in 0.015s
2: solved... in 0.054s
1: solved... in 0.015s
2: solved... in 0.055s
1: solved... in 0.014s
[[34m Info  [0m] - Found inductive invariant: parallelSearch --> ((((-84 * size(t)) + (1 * res12._2)) + -57) <= 0)
[[34m Info  [0m] - Found inductive invariant: size --> (((-2 * #res) + -1) <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[34m Info  [0m] - Invariant verified
[[34m Info  [0m] - considering function factMap...
[[34m Info  [0m] Body: if (l.isInstanceOf[Nil])
            (Nil(), (1 + 1))
          else
            (let (e34,t42 := (let (ir2,it2 := (let (e36,t45 := fact(l.head)) in
              (e36, (1 + (1 + t45))))) in
              (let (r6,t43 := (let (e39,t48 := (let (e42,t51 := factMap(l.tail, (l.head - 1))) in
                (e42, (2 + (1 + (1 + t51)))))) in
                (Cons(ir2, e39), (t48 + 1)))) in
                (r6, (t43 + (it2 + 1)))))) in
              (e34, (1 + t42)))
[[34m Info  [0m] Post: true
falttened Body: (r72 && (r72 == descending(l, k)) && (k >= 0) && (res11 == ifres30) && ((ci32 && (ci32 == l.isInstanceOf[Nil]) && (ifres30 == tp28) && (cc3 == Nil()) && (arg46 == (1 + 1)) && (tp28 == (cc3, arg46))) || (!(ci33) && (ci33 == l.isInstanceOf[Nil]) && (ifres30 == tp29) && (arg47 == (1 + t42)) && (tp29 == (e34, arg47)) && (t51 == ts67) && (ts67 == tres14._2) && (e39 == e42) && (tres15 == r73) && (cs47 == l.head) && (r73 == fact(cs47)) && (e34 == r6) && (tres14 == r74) && (cs48 == l.tail) && (cs49 == l.head) && (arg48 == (cs49 - 1)) && (r74 == factMap(cs48, arg48)) && (t42 == (t43 + (it2 + 1))) && (r6 == cc4) && (cc4 == Cons(ir2, e39)) && (ir2 == e36) && (it2 == (1 + (1 + t45))) && (t48 == (2 + (1 + (1 + t51)))) && (e42 == ts68) && (ts68 == tres14._1) && (t43 == (t48 + 1)) && (e36 == ts69) && (ts69 == tres15._1) && (t45 == ts70) && (ts70 == tres15._2))))
Flattened Post: ((ts71 > ((a?3 * r75) + b?3)) && (ts71 == res11._2) && (r75 == mult(k, k)))
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.006s
2: solved... in 0.004s
1: solved... in 0.005s
2: solved... in 0.005s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 4/4
Unrolled calls: Set((r72 <=> descending(l, k)), (r73 == fact(cs47)), (r74 == factMap(cs48, arg48)), (r75 == mult(k, k)))
Creating VC for descending
[[34m Info  [0m] - Number of new terms enumerated: 3
[[34m Info  [0m] - Template generated for function descending : (((a?3817 * k) + a?3816) ≤ 0)
Unrolling (r72 <=> descending(l, k))
Creating VC for fact
Unrolling (r73 == fact(cs47))
Unrolling (r74 == factMap(cs48, arg48))
Inlining (r75 == mult(k, k))
[[34m Info  [0m] Number of axiom instances: 8
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.012s
2: solved... in 0.005s
1: solved... in 0.011s
2: solved... in 0.004s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 14/14
Unrolled calls: Set((r91 == mult(arg48, arg48)), (r90 <=> descending(cs48, arg48)), (r82 == fact(arg60)), (r85 == factMap(cs66, arg63)), (r88 == pmult(px3, py3)), (r80 == fact(arg56)), (r79 <=> descending(cs64, arg52)), (r81 == mult(n, e99)), (r78 <=> descending(cs60, arg51)), (r77 <=> descending(cs56, arg50)), (r86 == fact(cs68)), (r76 <=> descending(cs52, arg49)), (r89 == pmult(px3, arg64)), (r83 == mult(cs47, e102)))
Unrolling (r90 <=> descending(cs48, arg48))
Unrolling (r78 <=> descending(cs60, arg51))
Unrolling (r76 <=> descending(cs52, arg49))
Unrolling (r82 == fact(arg60))
Inlining (r91 == mult(arg48, arg48))
Inlining (r81 == mult(n, e99))
Unrolling (r89 == pmult(px3, arg64))
Unrolling (r77 <=> descending(cs56, arg50))
Unrolling (r79 <=> descending(cs64, arg52))
Inlining (r83 == mult(cs47, e102))
Unrolling (r86 == fact(cs68))
Unrolling (r88 == pmult(px3, py3))
Unrolling (r80 == fact(arg56))
[[34m Info  [0m] Number of axiom instances: 242
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 8
1: solved... in 0.027s
2: solved... in 0.006s
1: solved... in 0.027s
2: solved... in 0.005s
1: solved... in 0.026s
2: solved... in 0.006s
1: solved... in 0.022s
2: solved... in 0.006s
1: solved... in 0.022s
2: solved... in 0.005s
1: solved... in 0.021s
2: solved... in 0.006s
1: solved... in 0.022s
2: solved... in 0.006s
1: solved... in 0.024s
2: solved... in 0.006s
1: solved... in 0.022s
2: solved... in 0.006s
1: solved... in 0.023s
2: solved... in 0.006s
1: solved... in 0.021s
2: solved... in 0.006s
1: solved... in 0.022s
2: solved... in 0.006s
1: solved... in 0.023s
2: solved... in 0.007s
1: solved... in 0.022s
2: solved... in 0.007s
1: solved... in 0.025s
2: solved... in 0.006s
1: solved... in 0.022s
2: solved... in 0.007s
1: solved... in 0.025s
2: solved... in 0.008s
1: solved... in 0.026s
2: solved... in 0.007s
1: solved... in 0.022s
2: solved... in 0.007s
1: solved... in 0.022s
2: solved... in 0.007s
1: solved... in 0.027s
2: solved... in 0.008s
1: solved... in 0.025s
2: solved... in 0.008s
1: solved... in 0.025s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.026s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.026s
2: solved... in 0.007s
1: solved... in 0.022s
2: solved... in 0.008s
1: solved... in 0.025s
2: solved... in 0.008s
1: solved... in 0.024s
2: solved... in 0.008s
1: solved... in 0.025s
2: solved... in 0.008s
1: solved... in 0.024s
2: solved... in 0.007s
1: solved... in 0.025s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.025s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.025s
2: solved... in 0.008s
1: solved... in 0.025s
2: solved... in 0.008s
1: solved... in 0.025s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.027s
2: solved... in 0.008s
1: solved... in 0.025s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.025s
2: solved... in 0.008s
1: solved... in 0.025s
2: solved... in 0.009s
1: solved... in 0.024s
2: solved... in 0.008s
1: solved... in 0.023s
2: solved... in 0.009s
1: solved... in 0.025s
2: solved... in 0.009s
1: solved... in 0.025s
2: solved... in 0.009s
1: solved... in 0.025s
2: solved... in 0.009s
1: solved... in 0.025s
2: solved... in 0.009s
1: solved... in 0.024s
2: solved... in 0.016s
1: solved... in 0.025s
2: solved... in 0.009s
1: solved... in 0.025s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.025s
2: solved... in 0.01s
1: solved... in 0.025s
2: solved... in 0.01s
1: solved... in 0.025s
2: solved... in 0.01s
1: solved... in 0.025s
2: solved... in 0.01s
1: solved... in 0.025s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.026s
2: solved... in 0.01s
1: solved... in 0.025s
2: solved... in 0.01s
1: solved... in 0.024s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.01s
1: solved... in 0.024s
2: solved... in 0.01s
1: solved... in 0.025s
2: solved... in 0.01s
1: solved... in 0.024s
2: solved... in 0.01s
1: solved... in 0.025s
2: solved... in 0.011s
1: solved... in 0.022s
2: solved... in 0.01s
1: solved... in 0.025s
2: solved... in 0.012s
1: solved... in 0.025s
2: solved... in 0.01s
1: solved... in 0.025s
2: solved... in 0.01s
1: solved... in 0.025s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.011s
1: solved... in 0.025s
2: solved... in 0.011s
1: solved... in 0.032s
2: solved... in 0.011s
1: solved... in 0.025s
2: solved... in 0.011s
1: solved... in 0.025s
2: solved... in 0.011s
1: solved... in 0.025s
2: solved... in 0.011s
1: solved... in 0.028s
2: solved... in 0.01s
1: solved... in 0.024s
2: solved... in 0.011s
1: solved... in 0.026s
2: solved... in 0.012s
1: solved... in 0.025s
2: solved... in 0.011s
1: solved... in 0.025s
2: solved... in 0.01s
1: solved... in 0.025s
2: solved... in 0.012s
1: solved... in 0.025s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.011s
1: solved... in 0.024s
2: solved... in 0.011s
1: solved... in 0.024s
2: solved... in 0.011s
1: solved... in 0.025s
2: solved... in 0.013s
1: solved... in 0.028s
2: solved... in 0.011s
1: solved... in 0.025s
2: solved... in 0.011s
1: solved... in 0.021s
2: solved... in 0.011s
1: solved... in 0.024s
2: solved... in 0.012s
1: solved... in 0.025s
2: solved... in 0.011s
1: solved... in 0.025s
2: solved... in 0.012s
1: solved... in 0.022s
2: solved... in 0.012s
1: solved... in 0.025s
2: solved... in 0.012s
1: solved... in 0.025s
2: solved... in 0.012s
1: solved... in 0.025s
2: solved... in 0.012s
1: solved... in 0.025s
2: solved... in 0.012s
1: solved... in 0.029s
2: solved... in 0.012s
1: solved... in 0.025s
2: solved... in 0.012s
1: solved... in 0.024s
2: solved... in 0.012s
1: solved... in 0.025s
2: solved... in 0.012s
1: solved... in 0.025s
2: solved... in 0.012s
1: solved... in 0.025s
2: solved... in 0.013s
1: solved... in 0.027s
2: solved... in 0.012s
1: solved... in 0.025s
2: solved... in 0.013s
1: solved... in 0.025s
2: solved... in 0.012s
1: solved... in 0.024s
2: solved... in 0.013s
1: solved... in 0.026s
2: solved... in 0.013s
1: solved... in 0.032s
2: solved... in 0.012s
1: solved... in 0.022s
2: solved... in 0.013s
1: solved... in 0.025s
2: solved... in 0.013s
1: solved... in 0.025s
2: solved... in 0.013s
1: solved... in 0.025s
2: solved... in 0.012s
1: solved... in 0.025s
2: solved... in 0.013s
1: solved... in 0.025s
2: solved... in 0.013s
1: solved... in 0.021s
2: solved... in 0.013s
1: solved... in 0.025s
2: solved... in 0.013s
1: solved... in 0.025s
2: solved... in 0.013s
1: solved... in 0.024s
2: solved... in 0.013s
1: solved... in 0.026s
2: solved... in 0.013s
1: solved... in 0.025s
2: solved... in 0.014s
1: solved... in 0.025s
2: solved... in 0.014s
1: solved... in 0.025s
2: solved... in 0.013s
1: solved... in 0.025s
2: solved... in 0.013s
1: solved... in 0.024s
2: solved... in 0.014s
1: solved... in 0.025s
2: solved... in 0.013s
1: solved... in 0.024s
2: solved... in 0.014s
1: solved... in 0.025s
2: solved... in 0.014s
1: solved... in 0.025s
2: solved... in 0.014s
1: solved... in 0.025s
2: solved... in 0.014s
1: solved... in 0.022s
2: solved... in 0.014s
1: solved... in 0.025s
2: solved... in 0.014s
1: solved... in 0.024s
2: solved... in 0.015s
1: solved... in 0.025s
2: solved... in 0.014s
1: solved... in 0.025s
2: solved... in 0.014s
1: solved... in 0.025s
2: solved... in 0.015s
1: solved... in 0.025s
2: solved... in 0.015s
1: solved... in 0.025s
2: solved... in 0.014s
1: solved... in 0.021s
2: solved... in 0.014s
1: solved... in 0.025s
2: solved... in 0.014s
1: solved... in 0.024s
2: solved... in 0.019s
1: solved... in 0.025s
2: solved... in 0.014s
1: solved... in 0.021s
2: solved... in 0.014s
1: solved... in 0.025s
2: solved... in 0.015s
1: solved... in 0.025s
2: solved... in 0.015s
1: solved... in 0.024s
2: solved... in 0.015s
1: solved... in 0.025s
2: solved... in 0.015s
1: solved... in 0.025s
2: solved... in 0.016s
1: solved... in 0.025s
2: solved... in 0.015s
1: solved... in 0.024s
2: solved... in 0.015s
1: solved... in 0.024s
2: solved... in 0.016s
1: solved... in 0.025s
2: solved... in 0.016s
1: solved... in 0.025s
2: solved... in 0.015s
1: solved... in 0.022s
2: solved... in 0.015s
1: solved... in 0.026s
2: solved... in 0.015s
1: solved... in 0.025s
2: solved... in 0.017s
1: solved... in 0.025s
2: solved... in 0.017s
1: solved... in 0.025s
2: solved... in 0.016s
1: solved... in 0.025s
2: solved... in 0.015s
1: solved... in 0.025s
2: solved... in 0.016s
1: solved... in 0.025s
2: solved... in 0.016s
1: solved... in 0.025s
2: solved... in 0.016s
1: solved... in 0.027s
2: solved... in 0.015s
1: solved... in 0.025s
2: solved... in 0.016s
1: solved... in 0.021s
2: solved... in 0.016s
1: solved... in 0.025s
2: solved... in 0.016s
1: solved... in 0.024s
2: solved... in 0.016s
1: solved... in 0.025s
2: solved... in 0.016s
1: solved... in 0.029s
2: solved... in 0.016s
1: solved... in 0.025s
2: solved... in 0.017s
1: solved... in 0.025s
2: solved... in 0.017s
1: solved... in 0.025s
2: solved... in 0.017s
1: solved... in 0.025s
2: solved... in 0.017s
1: solved... in 0.027s
2: solved... in 0.016s
1: solved... in 0.025s
2: solved... in 0.016s
1: solved... in 0.022s
2: solved... in 0.016s
1: solved... in 0.025s
2: solved... in 0.016s
1: solved... in 0.025s
2: solved... in 0.017s
1: solved... in 0.026s
2: solved... in 0.017s
1: solved... in 0.027s
2: solved... in 0.017s
1: solved... in 0.025s
2: solved... in 0.017s
1: solved... in 0.025s
2: solved... in 0.017s
1: solved... in 0.025s
2: solved... in 0.017s
1: solved... in 0.026s
2: solved... in 0.017s
1: solved... in 0.025s
2: solved... in 0.017s
1: solved... in 0.025s
2: solved... in 0.017s
1: solved... in 0.025s
2: solved... in 0.018s
1: solved... in 0.025s
2: solved... in 0.017s
1: solved... in 0.026s
2: solved... in 0.017s
1: solved... in 0.021s
2: solved... in 0.017s
1: solved... in 0.025s
2: solved... in 0.017s
1: solved... in 0.025s
2: solved... in 0.018s
1: solved... in 0.025s
2: solved... in 0.018s
1: solved... in 0.025s
2: solved... in 0.018s
1: solved... in 0.025s
2: solved... in 0.018s
1: solved... in 0.025s
2: solved... in 0.018s
1: solved... in 0.025s
2: solved... in 0.018s
1: solved... in 0.025s
2: solved... in 0.017s
1: solved... in 0.021s
2: solved... in 0.019s
1: solved... in 0.027s
2: solved... in 0.018s
1: solved... in 0.025s
2: solved... in 0.018s
1: solved... in 0.025s
2: solved... in 0.018s
1: solved... in 0.025s
2: solved... in 0.018s
1: solved... in 0.025s
2: solved... in 0.02s
1: solved... in 0.025s
2: solved... in 0.025s
1: solved... in 0.025s
2: solved... in 0.018s
1: solved... in 0.025s
2: solved... in 0.019s
1: solved... in 0.025s
2: solved... in 0.019s
1: solved... in 0.026s
2: solved... in 0.02s
1: solved... in 0.026s
2: solved... in 0.018s
1: solved... in 0.025s
2: solved... in 0.018s
1: solved... in 0.025s
2: solved... in 0.019s
1: solved... in 0.025s
2: solved... in 0.019s
1: solved... in 0.025s
2: solved... in 0.018s
1: solved... in 0.022s
2: solved... in 0.019s
1: solved... in 0.026s
2: solved... in 0.019s
1: solved... in 0.025s
2: solved... in 0.019s
1: solved... in 0.025s
2: solved... in 0.019s
1: solved... in 0.025s
2: solved... in 0.019s
1: solved... in 0.026s
2: solved... in 0.02s
1: solved... in 0.026s
2: solved... in 0.018s
1: solved... in 0.025s
2: solved... in 0.019s
1: solved... in 0.025s
2: solved... in 0.018s
1: solved... in 0.021s
2: solved... in 0.02s
1: solved... in 0.025s
2: solved... in 0.02s
1: solved... in 0.026s
2: solved... in 0.019s
1: solved... in 0.026s
2: solved... in 0.02s
1: solved... in 0.025s
2: solved... in 0.019s
1: solved... in 0.024s
[[34m Info  [0m] - Found inductive invariant: factMap --> ((((-12 * (k * k)) + (1 * res11._2)) + -2) <= 0)
[[34m Info  [0m] - Found inductive invariant: descending --> (((0 * k) + 0) <= 0)
[[34m Info  [0m] - Found inductive invariant: fact --> ((((1 * res10._2) + (-6 * n)) + -3) <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[34m Info  [0m] - Invariant verified
[[34m Info  [0m] - Dumping statistics
[[34m Info  [0m] . ┌─────────┐
          ╔═╡ Summary ╞═══════════════════════════════════════════════════════════════════════╗
          ║ └─────────┘                                                                       ║
          
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ total: 0      valid: 0      invalid: 0      unknown 0                       0.000 ║
          ╚═══════════════════════════════════════════════════════════════════════════════════╝
