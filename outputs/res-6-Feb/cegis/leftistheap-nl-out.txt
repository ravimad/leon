After Depth Instrumentation: 
object LeftistHeap {
  case class Node(rk: Int, value: Int, left: Heap, right: Heap) extends Heap

  case class Leaf() extends Heap

  sealed abstract class Heap

  def rank(h : Heap) : Int = {(h match {
    case Leaf() =>
      0
    case Node(rk, _, _, _) =>
      rk
  })}

  def twopower(x : Int) : Int = {    require((x >= 0));
if ((x < 1)) {
    1
  } else {
    (2 * twopower((x - 1)))
  }}

  def insert(element : Int, heap : Heap) : Heap = {    require(hasLeftistProperty(heap));
merge(Node(1, element, Leaf(), Leaf()), heap)} ensuring(res => true)

  def rightHeight(h : Heap) : Int = {(h match {
    case Leaf() =>
      0
    case Node(_, _, _, r) =>
      (rightHeight(r) + 1)
  })}

  def hasLeftistProperty(h : Heap) : Boolean = {(h match {
    case Leaf() =>
      true
    case Node(_, _, l, r) =>
      (hasLeftistProperty(l) && hasLeftistProperty(r) && (rightHeight(l) >= rightHeight(r)) && (rank(h) == rightHeight(h)))
  })}

  def leftRightHeight(h : Heap) : Int = {(h match {
    case Leaf() =>
      0
    case Node(_, _, l, r) =>
      rightHeight(l)
  })}

  def removeMax(h : Heap) : Heap = {    require(hasLeftistProperty(h));
(h match {
    case Node(_, _, l, r) =>
      merge(l, r)
    case l @ Leaf() =>
      l
  })} ensuring(res => true)

  def merge(h1 : Heap, h2 : Heap) : Heap = {    require((hasLeftistProperty(h1) && hasLeftistProperty(h2)));
(h1 match {
    case Leaf() =>
      h2
    case Node(_, v1, l1, r1) =>
      (h2 match {
        case Leaf() =>
          h1
        case Node(_, v2, l2, r2) =>
          if ((v1 > v2)) {
            makeT(v1, l1, merge(r1, h2))
          } else {
            makeT(v2, l2, merge(h1, r2))
          }
      })
  })} ensuring(res => true)

  def size(t : Heap) : Int = {    require(hasLeftistProperty(t));
(t match {
    case Leaf() =>
      0
    case Node(_, v, l, r) =>
      ((size(l) + 1) + size(r))
  })} ensuring(res => true)

  def makeT(value : Int, left : Heap, right : Heap) : Heap = {if ((rank(left) >= rank(right))) {
    Node((rank(right) + 1), value, left, right)
  } else {
    Node((rank(left) + 1), value, right, left)
  }}

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}
}

Defined fun: rank
Defined fun: twopower
Defined fun: insert
Defined fun: rightHeight
Defined fun: hasLeftistProperty
Defined fun: leftRightHeight
Defined fun: removeMax
Defined fun: merge
Defined fun: size
Defined fun: makeT
Defined fun: max
FunMap: Map(rank -> rank, removeMax -> removeMax, merge -> merge, max -> max, size -> size, rightHeight -> rightHeight, insert -> insert, makeT -> makeT, hasLeftistProperty -> hasLeftistProperty, twopower -> twopower, leftRightHeight -> leftRightHeight)
After Time Instrumentation: 
object LeftistHeap {
  case class Node(rk: Int, value: Int, left: Heap, right: Heap) extends Heap

  case class Leaf() extends Heap

  sealed abstract class Heap

  def rank(h : Heap) : (Int, Int) = {locally {
    val t1 = 1
    if (h.isInstanceOf[Leaf]) {
      (0, t1)
    } else {
      (h.rk, (t1 + 1))
    }
  }
  }

  def twopower(x : Int) : Int = {    require((x >= 0));
if ((x < 1)) {
    1
  } else {
    (2 * twopower((x - 1)))
  }}

  def insert(element : Int, heap : Heap) : (Heap, Int) = {    require(hasLeftistProperty(heap));
locally {
    val (e51: Heap, t52: Int) = merge(Node(1, element, Leaf(), Leaf()), heap)
    (e51, (3 + (1 + t52)))
  }
  } ensuring(res12 => true)

  def rightHeight(h : Heap) : Int = {(h match {
    case Leaf() =>
      0
    case Node(_, _, _, r) =>
      (rightHeight(r) + 1)
  })}

  def hasLeftistProperty(h : Heap) : Boolean = {(h match {
    case Leaf() =>
      true
    case Node(_, _, l, r) =>
      (hasLeftistProperty(l) && hasLeftistProperty(r) && (rightHeight(l) >= rightHeight(r)) && (rank(h)._1 == rightHeight(h)))
  })}

  def leftRightHeight(h : Heap) : Int = {(h match {
    case Leaf() =>
      0
    case Node(_, _, l, r) =>
      rightHeight(l)
  })}

  def removeMax(h : Heap) : (Heap, Int) = {    require(hasLeftistProperty(h));
locally {
    val t6 = 1
    if (h.isInstanceOf[Node]) {
      locally {
        val (e6: Heap, t7: Int) = locally {
          val (e9: Heap, t10: Int) = merge(h.left, h.right)
          (e9, (1 + (1 + (1 + t10))))
        }
        
        (e6, (t6 + t7))
      }
      
    } else {
      (h, t6)
    }
  }
  } ensuring(res9 => true)

  def merge(h1 : Heap, h2 : Heap) : (Heap, Int) = {    require((hasLeftistProperty(h1) && hasLeftistProperty(h2)));
locally {
    val t15 = 1
    if (h1.isInstanceOf[Leaf]) {
      (h2, t15)
    } else {
      locally {
        val (e16: Heap, t17: Int) = locally {
          val t18 = 1
          if (h2.isInstanceOf[Leaf]) {
            (h1, t18)
          } else {
            locally {
              val (e19: Heap, t20: Int) = locally {
                val t21 = 3
                if ((h1.value > h2.value)) {
                  locally {
                    val (e21: Heap, t22: Int) = locally {
                      val (e24: Heap, t25: Int) = locally {
                        val (e28: Heap, t29: Int) = merge(h1.right, h2)
                        (e28, (1 + (1 + t29)))
                      }
                      
                      locally {
                        val (e25: Heap, t26: Int) = makeT(h1.value, h1.left, e24)
                        (e25, (t25 + (1 + (1 + (1 + t26)))))
                      }
                      
                    }
                    
                    (e21, (t21 + t22))
                  }
                  
                } else {
                  locally {
                    val (e32: Heap, t33: Int) = locally {
                      val (e35: Heap, t36: Int) = locally {
                        val (e39: Heap, t40: Int) = merge(h1, h2.right)
                        (e39, (1 + (1 + t40)))
                      }
                      
                      locally {
                        val (e36: Heap, t37: Int) = makeT(h2.value, h2.left, e35)
                        (e36, (t36 + (1 + (1 + (1 + t37)))))
                      }
                      
                    }
                    
                    (e32, (t21 + t33))
                  }
                  
                }
              }
              
              (e19, (t18 + t20))
            }
            
          }
        }
        
        (e16, (t15 + t17))
      }
      
    }
  }
  } ensuring(res10 => true)

  def size(t : Heap) : Int = {    require(hasLeftistProperty(t));
(t match {
    case Leaf() =>
      0
    case Node(_, v, l, r) =>
      ((size(l) + 1) + size(r))
  })} ensuring(res11 => true)

  def makeT(value : Int, left : Heap, right : Heap) : (Heap, Int) = {locally {
    val (e56: Boolean, t57: Int) = locally {
      val (e75: Int, t76: Int) = locally {
        val (e80: Int, t81: Int) = rank(left)
        (e80, (1 + t81))
      }
      
      locally {
        val (e76: Int, t77: Int) = locally {
          val (e78: Int, t79: Int) = rank(right)
          (e78, (1 + t79))
        }
        
        ((e75 >= e76), (t77 + (t76 + 1)))
      }
      
    }
    
    if (e56) {
      locally {
        val (e57: Node, t58: Int) = locally {
          val (e58: Int, t59: Int) = locally {
            val (e62: Int, t63: Int) = locally {
              val (e65: Int, t66: Int) = rank(right)
              (e65, (1 + t66))
            }
            
            ((e62 + 1), (t63 + 1))
          }
          
          (Node(e58, value, left, right), (t59 + 1))
        }
        
        (e57, (t57 + t58))
      }
      
    } else {
      locally {
        val (e66: Node, t67: Int) = locally {
          val (e67: Int, t68: Int) = locally {
            val (e71: Int, t72: Int) = locally {
              val (e74: Int, t75: Int) = rank(left)
              (e74, (1 + t75))
            }
            
            ((e71 + 1), (t72 + 1))
          }
          
          (Node(e67, value, right, left), (t68 + 1))
        }
        
        (e66, (t57 + t67))
      }
      
    }
  }
  }

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}
}

New Prog: 
object LeftistHeap {
  case class Node(rk: Int, value: Int, left: Heap, right: Heap) extends Heap

  case class Leaf() extends Heap

  sealed abstract class Heap

  def rank(h : Heap) : (Int, Int) = {if (h.isInstanceOf[Leaf]) {
    (0, 1)
  } else {
    (h.rk, (1 + 1))
  }}

  def twopower(x : Int) : Int = {    require((x >= 0));
if ((x < 1)) {
    1
  } else {
    (2 * twopower((x - 1)))
  }}

  def insert(element : Int, heap : Heap) : (Heap, Int) = {    require(hasLeftistProperty(heap));
locally {
    val (e51: Heap, t52: Int) = merge(Node(1, element, Leaf(), Leaf()), heap)
    (e51, (3 + (1 + t52)))
  }
  } ensuring(res12 => true)

  def rightHeight(h : Heap) : Int = {(h match {
    case Leaf() =>
      0
    case Node(_, _, _, r) =>
      (rightHeight(r) + 1)
  })}

  def hasLeftistProperty(h : Heap) : Boolean = {(h match {
    case Leaf() =>
      true
    case Node(_, _, l, r) =>
      (hasLeftistProperty(l) && hasLeftistProperty(r) && (rightHeight(l) >= rightHeight(r)) && (rank(h)._1 == rightHeight(h)))
  })}

  def leftRightHeight(h : Heap) : Int = {(h match {
    case Leaf() =>
      0
    case Node(_, _, l, r) =>
      rightHeight(l)
  })}

  def removeMax(h : Heap) : (Heap, Int) = {    require(hasLeftistProperty(h));
if (h.isInstanceOf[Node]) {
    locally {
      val (e6: Heap, t7: Int) = locally {
        val (e9: Heap, t10: Int) = merge(h.left, h.right)
        (e9, (1 + (1 + (1 + t10))))
      }
      
      (e6, (1 + t7))
    }
    
  } else {
    (h, 1)
  }} ensuring(res9 => true)

  def merge(h1 : Heap, h2 : Heap) : (Heap, Int) = {    require((hasLeftistProperty(h1) && hasLeftistProperty(h2)));
if (h1.isInstanceOf[Leaf]) {
    (h2, 1)
  } else {
    locally {
      val (e16: Heap, t17: Int) = if (h2.isInstanceOf[Leaf]) {
        (h1, 1)
      } else {
        locally {
          val (e19: Heap, t20: Int) = if ((h1.value > h2.value)) {
            locally {
              val (e21: Heap, t22: Int) = locally {
                val (e24: Heap, t25: Int) = locally {
                  val (e28: Heap, t29: Int) = merge(h1.right, h2)
                  (e28, (1 + (1 + t29)))
                }
                
                locally {
                  val (e25: Heap, t26: Int) = makeT(h1.value, h1.left, e24)
                  (e25, (t25 + (1 + (1 + (1 + t26)))))
                }
                
              }
              
              (e21, (3 + t22))
            }
            
          } else {
            locally {
              val (e32: Heap, t33: Int) = locally {
                val (e35: Heap, t36: Int) = locally {
                  val (e39: Heap, t40: Int) = merge(h1, h2.right)
                  (e39, (1 + (1 + t40)))
                }
                
                locally {
                  val (e36: Heap, t37: Int) = makeT(h2.value, h2.left, e35)
                  (e36, (t36 + (1 + (1 + (1 + t37)))))
                }
                
              }
              
              (e32, (3 + t33))
            }
            
          }
          (e19, (1 + t20))
        }
        
      }
      (e16, (1 + t17))
    }
    
  }} ensuring(res10 => true)

  def size(t : Heap) : Int = {    require(hasLeftistProperty(t));
(t match {
    case Leaf() =>
      0
    case Node(_, v, l, r) =>
      ((size(l) + 1) + size(r))
  })} ensuring(res11 => true)

  def makeT(value : Int, left : Heap, right : Heap) : (Heap, Int) = {locally {
    val (e56: Boolean, t57: Int) = locally {
      val (e75: Int, t76: Int) = locally {
        val (e80: Int, t81: Int) = rank(left)
        (e80, (1 + t81))
      }
      
      locally {
        val (e76: Int, t77: Int) = locally {
          val (e78: Int, t79: Int) = rank(right)
          (e78, (1 + t79))
        }
        
        ((e75 >= e76), (t77 + (t76 + 1)))
      }
      
    }
    
    if (e56) {
      locally {
        val (e57: Node, t58: Int) = locally {
          val (e58: Int, t59: Int) = locally {
            val (e62: Int, t63: Int) = locally {
              val (e65: Int, t66: Int) = rank(right)
              (e65, (1 + t66))
            }
            
            ((e62 + 1), (t63 + 1))
          }
          
          (Node(e58, value, left, right), (t59 + 1))
        }
        
        (e57, (t57 + t58))
      }
      
    } else {
      locally {
        val (e66: Node, t67: Int) = locally {
          val (e67: Int, t68: Int) = locally {
            val (e71: Int, t72: Int) = locally {
              val (e74: Int, t75: Int) = rank(left)
              (e74, (1 + t75))
            }
            
            ((e71 + 1), (t72 + 1))
          }
          
          (Node(e67, value, right, left), (t68 + 1))
        }
        
        (e66, (t57 + t67))
      }
      
    }
  }
  }

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}
}

Function: insert template --> (res12._2 ≤ ((a?3 * rightHeight(heap)) + c?1))
Function: removeMax template --> (res9._2 ≤ ((a?1 * leftRightHeight(h)) + b?1))
Function: merge template --> (res10._2 ≤ (((a?2 * rightHeight(h1)) + (b?2 * rightHeight(h2))) + c?))
Function: size template --> (twopower(rightHeight(t)) ≤ ((a? * res11) + b?))
[[34m Info  [0m] Running Invariant Inference Phase...
[[34m Info  [0m] Analysis Order: List(rightHeight, leftRightHeight, twopower, makeT, hasLeftistProperty, merge, removeMax, insert, size)
[[34m Info  [0m] - considering function merge...
[[34m Info  [0m] Body: if (h1.isInstanceOf[Leaf])
            (h2, 1)
          else
            (let (e16,t17 := if (h2.isInstanceOf[Leaf])
              (h1, 1)
            else
              (let (e19,t20 := if ((h1.value > h2.value))
                (let (e21,t22 := (let (e24,t25 := (let (e28,t29 := merge(h1.right, h2)) in
                  (e28, (1 + (1 + t29))))) in
                  (let (e25,t26 := makeT(h1.value, h1.left, e24)) in
                    (e25, (t25 + (1 + (1 + (1 + t26)))))))) in
                  (e21, (3 + t22)))
              else
                (let (e32,t33 := (let (e35,t36 := (let (e39,t40 := merge(h1, h2.right)) in
                  (e39, (1 + (1 + t40))))) in
                  (let (e36,t37 := makeT(h2.value, h2.left, e35)) in
                    (e36, (t36 + (1 + (1 + (1 + t37)))))))) in
                  (e32, (3 + t33)))) in
                (e19, (1 + t20)))) in
              (e16, (1 + t17)))
[[34m Info  [0m] Post: true
falttened Body: (r6 && (r6 == hasLeftistProperty(h1)) && r7 && (r7 == hasLeftistProperty(h2)) && (res10 == ifres) && ((ci && (ci == h1.isInstanceOf[Leaf]) && (ifres == tp) && (arg == 1) && (tp == (h2, arg))) || (!(ci1) && (ci1 == h1.isInstanceOf[Leaf]) && (ifres == tp1) && (arg1 == (1 + t17)) && (tp1 == (e16, arg1)) && ((ci2 && (ci2 == h2.isInstanceOf[Leaf]) && (ifres1 == tp2) && (arg2 == 1) && (tp2 == (h1, arg2))) || (!(ci3) && (ci3 == h2.isInstanceOf[Leaf]) && (ifres1 == tp3) && (arg3 == (1 + t20)) && (tp3 == (e19, arg3)) && (((cs > cs1) && (cs == h1.value) && (cs1 == h2.value) && (ifres2 == tp4) && (arg4 == (3 + t22)) && (tp4 == (e21, arg4)) && (e25 == ts) && (ts == tres._1) && (t25 == (1 + (1 + t29))) && (t26 == ts1) && (ts1 == tres._2) && (t22 == (t25 + (1 + (1 + (1 + t26))))) && (e28 == ts2) && (ts2 == tres1._1) && (tres1 == r8) && (cs2 == h1.right) && (r8 == merge(cs2, h2)) && (tres == r9) && (cs3 == h1.value) && (cs4 == h1.left) && (r9 == makeT(cs3, cs4, e24)) && (e21 == e25) && (e24 == e28) && (t29 == ts3) && (ts3 == tres1._2)) || ((cs5 <= cs6) && (cs5 == h1.value) && (cs6 == h2.value) && (ifres2 == tp5) && (arg5 == (3 + t33)) && (tp5 == (e32, arg5)) && (t37 == ts4) && (ts4 == tres2._2) && (e35 == e39) && (t33 == (t36 + (1 + (1 + (1 + t37))))) && (e39 == ts5) && (ts5 == tres3._1) && (e36 == ts6) && (ts6 == tres2._1) && (t36 == (1 + (1 + t40))) && (e32 == e36) && (tres3 == r10) && (cs7 == h2.right) && (r10 == merge(h1, cs7)) && (t40 == ts7) && (ts7 == tres3._2) && (tres2 == r11) && (cs8 == h2.value) && (cs9 == h2.left) && (r11 == makeT(cs8, cs9, e35)))) && (e19 == ts8) && (ts8 == ifres2._1) && (t20 == ts9) && (ts9 == ifres2._2))) && (e16 == ts10) && (ts10 == ifres1._1) && (t17 == ts11) && (ts11 == ifres1._2))))
Flattened Post: ((ts12 > (((a?2 * r12) + (b?2 * r13)) + c?)) && (ts12 == res10._2) && (r12 == rightHeight(h1)) && (r13 == rightHeight(h2)))
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.117s
2: solved... in 0.152s
1: solved... in 0.018s
2: solved... in 0.007s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.016s
2: solved... in 0.007s
1: solved... in 0.012s
2: solved... in 0.008s
1: solved... in 0.012s
2: solved... in 0.007s
1: solved... in 0.012s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.009s
2: solved... in 0.01s
1: solved... in 0.009s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.009s
2: solved... in 0.016s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.009s
2: solved... in 0.009s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.013s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.013s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.014s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.015s
1: solved... in 0.008s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.012s
1: solved... in 0.008s
2: solved... in 0.015s
1: solved... in 0.007s
2: solved... in 0.013s
1: solved... in 0.008s
2: solved... in 0.013s
1: solved... in 0.008s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.016s
1: solved... in 0.007s
2: solved... in 0.013s
1: solved... in 0.007s
2: solved... in 0.013s
1: solved... in 0.007s
2: solved... in 0.014s
1: solved... in 0.007s
2: solved... in 0.016s
1: solved... in 0.007s
2: solved... in 0.013s
1: solved... in 0.007s
2: solved... in 0.014s
1: solved... in 0.007s
2: solved... in 0.015s
1: solved... in 0.008s
2: solved... in 0.015s
1: solved... in 0.008s
2: solved... in 0.014s
1: solved... in 0.007s
2: solved... in 0.015s
1: solved... in 0.007s
2: solved... in 0.015s
1: solved... in 0.007s
2: solved... in 0.015s
1: solved... in 0.007s
2: solved... in 0.014s
1: solved... in 0.007s
2: solved... in 0.015s
1: solved... in 0.007s
2: solved... in 0.015s
1: solved... in 0.007s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.007s
2: solved... in 0.015s
1: solved... in 0.007s
2: solved... in 0.015s
1: solved... in 0.007s
2: solved... in 0.016s
1: solved... in 0.007s
2: solved... in 0.016s
1: solved... in 0.007s
2: solved... in 0.017s
1: solved... in 0.008s
2: solved... in 0.017s
1: solved... in 0.007s
2: solved... in 0.016s
1: solved... in 0.007s
2: solved... in 0.018s
1: solved... in 0.008s
2: solved... in 0.017s
1: solved... in 0.007s
2: solved... in 0.018s
1: solved... in 0.008s
2: solved... in 0.019s
1: solved... in 0.007s
2: solved... in 0.018s
1: solved... in 0.007s
2: solved... in 0.018s
1: solved... in 0.007s
2: solved... in 0.018s
1: solved... in 0.007s
2: solved... in 0.018s
1: solved... in 0.006s
2: solved... in 0.019s
1: solved... in 0.007s
2: solved... in 0.02s
1: solved... in 0.008s
2: solved... in 0.02s
1: solved... in 0.007s
2: solved... in 0.019s
1: solved... in 0.007s
2: solved... in 0.02s
1: solved... in 0.007s
2: solved... in 0.02s
1: solved... in 0.007s
2: solved... in 0.021s
1: solved... in 0.007s
2: solved... in 0.021s
1: solved... in 0.007s
2: solved... in 0.021s
1: solved... in 0.007s
2: solved... in 0.021s
1: solved... in 0.007s
2: solved... in 0.021s
1: solved... in 0.007s
2: solved... in 0.021s
1: solved... in 0.007s
2: solved... in 0.022s
1: solved... in 0.007s
2: solved... in 0.023s
1: solved... in 0.008s
2: solved... in 0.023s
1: solved... in 0.007s
2: solved... in 0.022s
1: solved... in 0.007s
2: solved... in 0.022s
1: solved... in 0.007s
2: solved... in 0.023s
1: solved... in 0.007s
2: solved... in 0.023s
1: solved... in 0.007s
2: solved... in 0.023s
1: solved... in 0.007s
2: solved... in 0.024s
1: solved... in 0.007s
2: solved... in 0.024s
1: solved... in 0.007s
2: solved... in 0.024s
1: solved... in 0.007s
2: solved... in 0.025s
1: solved... in 0.007s
2: solved... in 0.025s
1: solved... in 0.008s
2: solved... in 0.026s
1: solved... in 0.007s
2: solved... in 0.026s
1: solved... in 0.008s
2: solved... in 0.027s
1: solved... in 0.007s
2: solved... in 0.028s
1: solved... in 0.008s
2: solved... in 0.026s
1: solved... in 0.007s
2: solved... in 0.026s
1: solved... in 0.006s
2: solved... in 0.026s
1: solved... in 0.007s
2: solved... in 0.026s
1: solved... in 0.007s
2: solved... in 0.026s
1: solved... in 0.007s
2: solved... in 0.027s
1: solved... in 0.007s
2: solved... in 0.027s
1: solved... in 0.007s
2: solved... in 0.028s
1: solved... in 0.007s
2: solved... in 0.028s
1: solved... in 0.006s
2: solved... in 0.028s
1: solved... in 0.007s
2: solved... in 0.028s
1: solved... in 0.006s
2: solved... in 0.029s
1: solved... in 0.007s
2: solved... in 0.029s
1: solved... in 0.007s
2: solved... in 0.031s
1: solved... in 0.007s
2: solved... in 0.031s
1: solved... in 0.007s
2: solved... in 0.031s
1: solved... in 0.007s
2: solved... in 0.031s
1: solved... in 0.007s
2: solved... in 0.031s
1: solved... in 0.007s
2: solved... in 0.032s
1: solved... in 0.007s
2: solved... in 0.031s
1: solved... in 0.007s
2: solved... in 0.033s
1: solved... in 0.008s
2: solved... in 0.032s
1: solved... in 0.007s
2: solved... in 0.033s
1: solved... in 0.007s
2: solved... in 0.034s
1: solved... in 0.008s
2: solved... in 0.034s
1: solved... in 0.007s
2: solved... in 0.034s
1: solved... in 0.007s
2: solved... in 0.035s
1: solved... in 0.007s
2: solved... in 0.035s
1: solved... in 0.007s
2: solved... in 0.035s
1: solved... in 0.007s
2: solved... in 0.035s
1: solved... in 0.007s
2: solved... in 0.035s
1: solved... in 0.007s
2: solved... in 0.036s
1: solved... in 0.006s
2: solved... in 0.036s
1: solved... in 0.007s
2: solved... in 0.037s
1: solved... in 0.007s
2: solved... in 0.037s
1: solved... in 0.007s
2: solved... in 0.037s
1: solved... in 0.007s
2: solved... in 0.038s
1: solved... in 0.007s
2: solved... in 0.039s
1: solved... in 0.007s
2: solved... in 0.039s
1: solved... in 0.007s
2: solved... in 0.038s
1: solved... in 0.006s
2: solved... in 0.039s
1: solved... in 0.007s
2: solved... in 0.039s
1: solved... in 0.007s
2: solved... in 0.04s
1: solved... in 0.007s
2: solved... in 0.04s
1: solved... in 0.007s
2: solved... in 0.041s
1: solved... in 0.008s
2: solved... in 0.041s
1: solved... in 0.007s
2: solved... in 0.053s
1: solved... in 0.007s
2: solved... in 0.042s
1: solved... in 0.007s
2: solved... in 0.044s
1: solved... in 0.007s
2: solved... in 0.043s
1: solved... in 0.007s
2: solved... in 0.042s
1: solved... in 0.007s
2: solved... in 0.043s
1: solved... in 0.007s
2: solved... in 0.044s
1: solved... in 0.007s
2: solved... in 0.046s
1: solved... in 0.007s
2: solved... in 0.045s
1: solved... in 0.007s
2: solved... in 0.045s
1: solved... in 0.007s
2: solved... in 0.045s
1: solved... in 0.007s
2: solved... in 0.046s
1: solved... in 0.006s
2: solved... in 0.048s
1: solved... in 0.007s
2: solved... in 0.047s
1: solved... in 0.007s
2: solved... in 0.047s
1: solved... in 0.007s
2: solved... in 0.048s
1: solved... in 0.007s
2: solved... in 0.048s
1: solved... in 0.006s
2: solved... in 0.048s
1: solved... in 0.007s
2: solved... in 0.048s
1: solved... in 0.007s
2: solved... in 0.049s
1: solved... in 0.009s
2: solved... in 0.018s
1: solved... in 0.008s
2: solved... in 0.018s
1: solved... in 0.008s
2: solved... in 0.017s
1: solved... in 0.008s
2: solved... in 0.019s
1: solved... in 0.008s
2: solved... in 0.018s
1: solved... in 0.007s
2: solved... in 0.018s
1: solved... in 0.006s
2: solved... in 0.018s
1: solved... in 0.007s
2: solved... in 0.019s
1: solved... in 0.007s
2: solved... in 0.018s
1: solved... in 0.007s
2: solved... in 0.019s
1: solved... in 0.007s
2: solved... in 0.019s
1: solved... in 0.008s
2: solved... in 0.02s
1: solved... in 0.007s
2: solved... in 0.02s
1: solved... in 0.008s
2: solved... in 0.02s
1: solved... in 0.007s
2: solved... in 0.02s
1: solved... in 0.007s
2: solved... in 0.02s
1: solved... in 0.007s
2: solved... in 0.02s
1: solved... in 0.007s
2: solved... in 0.02s
1: solved... in 0.007s
2: solved... in 0.02s
1: solved... in 0.007s
2: solved... in 0.02s
1: solved... in 0.007s
2: solved... in 0.02s
1: solved... in 0.007s
2: solved... in 0.021s
1: solved... in 0.007s
2: solved... in 0.02s
1: solved... in 0.007s
2: solved... in 0.021s
1: solved... in 0.007s
2: solved... in 0.021s
1: solved... in 0.007s
2: solved... in 0.026s
1: solved... in 0.007s
2: solved... in 0.02s
1: solved... in 0.007s
2: solved... in 0.02s
1: solved... in 0.008s
2: solved... in 0.021s
1: solved... in 0.007s
2: solved... in 0.02s
1: solved... in 0.008s
2: solved... in 0.021s
1: solved... in 0.007s
2: solved... in 0.022s
1: solved... in 0.008s
2: solved... in 0.021s
1: solved... in 0.007s
2: solved... in 0.021s
1: solved... in 0.006s
2: solved... in 0.021s
1: solved... in 0.007s
2: solved... in 0.021s
1: solved... in 0.008s
2: solved... in 0.021s
1: solved... in 0.007s
2: solved... in 0.021s
1: solved... in 0.007s
2: solved... in 0.031s
1: solved... in 0.007s
2: solved... in 0.033s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 8/8
Unrolled calls: Set((r6 <=> hasLeftistProperty(h1)), (r13 == rightHeight(h2)), (r10 == merge(h1, cs7)), (r9 == makeT(cs3, cs4, e24)), (r12 == rightHeight(h1)), (r11 == makeT(cs8, cs9, e35)), (r7 <=> hasLeftistProperty(h2)), (r8 == merge(cs2, h2)))
Inlining (r9 == makeT(cs3, cs4, e24))
Creating VC for hasLeftistProperty
[[34m Info  [0m] - Number of new terms enumerated: 2
[[34m Info  [0m] - Template generated for function hasLeftistProperty : (a?283 ≤ 0)
Unrolling (r6 <=> hasLeftistProperty(h1))
Unrolling (r10 == merge(h1, cs7))
Unrolling (r7 <=> hasLeftistProperty(h2))
Creating VC for rightHeight
[[34m Info  [0m] - Number of new terms enumerated: 2
[[34m Info  [0m] - Template generated for function rightHeight : (((a?285 * #res) + a?284) ≤ 0)
Unrolling (r13 == rightHeight(h2))
Unrolling (r12 == rightHeight(h1))
Inlining (r11 == makeT(cs8, cs9, e35))
Unrolling (r8 == merge(cs2, h2))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.029s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.025s
2: solved... in 0.006s
1: solved... in 0.026s
2: solved... in 0.007s
1: solved... in 0.019s
2: solved... in 0.007s
1: solved... in 0.015s
2: solved... in 0.006s
1: solved... in 0.013s
2: solved... in 0.006s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 69/69
Unrolled calls: Set((r51 <=> hasLeftistProperty(cs37)), (r45 == rightHeight(h1)), (r63 == rightHeight(h2)), (r56 <=> hasLeftistProperty(cs40)), (r72 == merge(cs51, h2)), (r27 == rightHeight(cs17)), (r67 == rank(e35)), (r39 <=> hasLeftistProperty(cs23)), (r80 <=> hasLeftistProperty(h2)), (r43 == rightHeight(h1)), (r30 == rank(h)), (r77 == rightHeight(h1)), (r82 == rightHeight(h2)), (r48 == makeT(cs33, cs34, e100)), (r37 == rightHeight(h1)), (r62 == rank(h2)), (r64 == rightHeight(cs44)), (r19 <=> hasLeftistProperty(cs11)), (r44 == rank(h1)), (r17 == rank(e24)), (r32 <=> hasLeftistProperty(cs18)), (r36 == rank(h1)), (r55 == rightHeight(h2)), (r20 == rightHeight(cs12)), (r35 == rightHeight(cs21)), (r33 <=> hasLeftistProperty(cs19)), (r41 == rightHeight(cs25)), (r49 == merge(h1, cs35)), (r53 == rightHeight(cs39)), (r15 == rank(cs4)), (r68 == rank(e35)), (r18 <=> hasLeftistProperty(cs10)), (r28 == rank(h)), (r71 == makeT(cs49, cs50, e119)), (r81 == rightHeight(cs2)), (r21 == rightHeight(cs13)), (r54 == rank(h2)), (r60 == rank(h2)), (r42 == rank(h1)), (r79 <=> hasLeftistProperty(cs2)), (r59 == rightHeight(cs43)), (r47 == merge(cs30, cs7)), (r74 == makeT(cs55, cs56, e123)), (r40 == rightHeight(cs24)), (r78 == rightHeight(cs7)), (r22 == rank(h)), (r29 == rightHeight(h)), (r50 <=> hasLeftistProperty(cs36)), (r46 == makeT(cs28, cs29, e96)), (r31 == rightHeight(h)), (r73 == merge(cs2, cs54)), (r58 == rightHeight(cs42)), (r69 == rank(cs9)), (r25 <=> hasLeftistProperty(cs15)), (r65 == rightHeight(cs45)), (r75 <=> hasLeftistProperty(h1)), (r52 == rightHeight(cs38)), (r66 == rightHeight(cs46)), (r24 <=> hasLeftistProperty(cs14)), (r38 <=> hasLeftistProperty(cs22)), (r14 == rank(e24)), (r61 == rightHeight(h2)), (r76 <=> hasLeftistProperty(cs7)), (r23 == rightHeight(h)), (r16 == rank(cs4)), (r34 == rightHeight(cs20)), (r70 == rank(cs9)), (r26 == rightHeight(cs16)), (r57 <=> hasLeftistProperty(cs41)))
Unrolling (r61 == rightHeight(h2))
Unrolling (r39 <=> hasLeftistProperty(cs23))
Unrolling (r66 == rightHeight(cs46))
Inlining (r71 == makeT(cs49, cs50, e119))
Unrolling (r64 == rightHeight(cs44))
Unrolling (r75 <=> hasLeftistProperty(h1))
Unrolling (r50 <=> hasLeftistProperty(cs36))
Unrolling (r53 == rightHeight(cs39))
Unrolling (r23 == rightHeight(h))
Inlining (r44 == rank(h1))
Inlining (r36 == rank(h1))
Inlining (r74 == makeT(cs55, cs56, e123))
Unrolling (r33 <=> hasLeftistProperty(cs19))
Unrolling (r18 <=> hasLeftistProperty(cs10))
Unrolling (r65 == rightHeight(cs45))
Unrolling (r38 <=> hasLeftistProperty(cs22))
Unrolling (r29 == rightHeight(h))
Inlining (r69 == rank(cs9))
Unrolling (r31 == rightHeight(h))
Inlining (r62 == rank(h2))
Unrolling (r56 <=> hasLeftistProperty(cs40))
Unrolling (r76 <=> hasLeftistProperty(cs7))
Unrolling (r82 == rightHeight(h2))
Unrolling (r27 == rightHeight(cs17))
Unrolling (r81 == rightHeight(cs2))
Inlining (r42 == rank(h1))
Unrolling (r59 == rightHeight(cs43))
Unrolling (r52 == rightHeight(cs38))
Unrolling (r80 <=> hasLeftistProperty(h2))
Inlining (r14 == rank(e24))
Unrolling (r37 == rightHeight(h1))
Unrolling (r43 == rightHeight(h1))
Unrolling (r20 == rightHeight(cs12))
Inlining (r28 == rank(h))
Inlining (r46 == makeT(cs28, cs29, e96))
Unrolling (r26 == rightHeight(cs16))
Inlining (r22 == rank(h))
Unrolling (r41 == rightHeight(cs25))
Unrolling (r51 <=> hasLeftistProperty(cs37))
Unrolling (r34 == rightHeight(cs20))
Unrolling (r40 == rightHeight(cs24))
Inlining (r68 == rank(e35))
Unrolling (r35 == rightHeight(cs21))
Unrolling (r78 == rightHeight(cs7))
Unrolling (r19 <=> hasLeftistProperty(cs11))
Unrolling (r21 == rightHeight(cs13))
Inlining (r70 == rank(cs9))
Inlining (r54 == rank(h2))
Unrolling (r79 <=> hasLeftistProperty(cs2))
Inlining (r16 == rank(cs4))
Unrolling (r45 == rightHeight(h1))
Inlining (r17 == rank(e24))
Unrolling (r24 <=> hasLeftistProperty(cs14))
Unrolling (r58 == rightHeight(cs42))
Inlining (r15 == rank(cs4))
Inlining (r30 == rank(h))
Unrolling (r25 <=> hasLeftistProperty(cs15))
Unrolling (r32 <=> hasLeftistProperty(cs18))
Unrolling (r77 == rightHeight(h1))
Inlining (r67 == rank(e35))
Inlining (r60 == rank(h2))
Unrolling (r57 <=> hasLeftistProperty(cs41))
Unrolling (r55 == rightHeight(h2))
Inlining (r48 == makeT(cs33, cs34, e100))
Unrolling (r63 == rightHeight(h2))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.127s
2: solved... in 0.006s
1: solved... in 0.035s
2: solved... in 0.007s
1: solved... in 0.095s
2: solved... in 0.006s
1: solved... in 0.131s
2: solved... in 0.006s
1: solved... in 0.031s
2: solved... in 0.006s
1: solved... in 0.138s
2: solved... in 0.006s
1: solved... in 0.135s
2: solved... in 0.007s
1: solved... in 0.135s
2: solved... in 0.006s
1: solved... in 0.12s
2: solved... in 0.007s
1: solved... in 0.141s
2: solved... in 0.008s
1: solved... in 0.134s
2: solved... in 0.007s
1: solved... in 0.109s
2: solved... in 0.008s
1: solved... in 0.107s
2: solved... in 0.008s
1: solved... in 0.107s
2: solved... in 0.008s
1: solved... in 0.139s
2: solved... in 0.008s
1: solved... in 0.106s
2: solved... in 0.007s
1: solved... in 0.145s
2: solved... in 0.007s
1: solved... in 0.107s
2: solved... in 0.008s
1: solved... in 0.107s
2: solved... in 0.008s
1: solved... in 0.11s
2: solved... in 0.008s
1: solved... in 0.107s
2: solved... in 0.008s
1: solved... in 0.107s
2: solved... in 0.008s
1: solved... in 0.142s
2: solved... in 0.009s
1: solved... in 0.107s
2: solved... in 0.009s
1: solved... in 0.107s
2: solved... in 0.009s
1: solved... in 0.134s
2: solved... in 0.009s
1: solved... in 0.11s
2: solved... in 0.009s
1: solved... in 0.107s
2: solved... in 0.008s
1: solved... in 0.117s
2: solved... in 0.009s
1: solved... in 0.111s
2: solved... in 0.01s
1: solved... in 0.107s
2: solved... in 0.01s
1: solved... in 0.109s
2: solved... in 0.009s
1: solved... in 0.106s
2: solved... in 0.009s
1: solved... in 0.108s
2: solved... in 0.009s
1: solved... in 0.105s
2: solved... in 0.01s
1: solved... in 0.107s
2: solved... in 0.01s
1: solved... in 0.109s
2: solved... in 0.01s
1: solved... in 0.106s
2: solved... in 0.01s
1: solved... in 0.113s
2: solved... in 0.01s
1: solved... in 0.106s
2: solved... in 0.01s
1: solved... in 0.109s
2: solved... in 0.011s
1: solved... in 0.107s
2: solved... in 0.011s
1: solved... in 0.107s
2: solved... in 0.01s
1: solved... in 0.113s
2: solved... in 0.01s
1: solved... in 0.106s
2: solved... in 0.01s
1: solved... in 0.107s
2: solved... in 0.011s
1: solved... in 0.106s
2: solved... in 0.01s
1: solved... in 0.106s
2: solved... in 0.01s
1: solved... in 0.143s
2: solved... in 0.012s
1: solved... in 0.106s
2: solved... in 0.012s
1: solved... in 0.105s
2: solved... in 0.013s
1: solved... in 0.106s
2: solved... in 0.012s
1: solved... in 0.106s
2: solved... in 0.012s
1: solved... in 0.109s
2: solved... in 0.013s
1: solved... in 0.106s
2: solved... in 0.012s
1: solved... in 0.106s
2: solved... in 0.012s
1: solved... in 0.106s
2: solved... in 0.013s
1: solved... in 0.106s
2: solved... in 0.012s
1: solved... in 0.108s
2: solved... in 0.013s
1: solved... in 0.106s
2: solved... in 0.014s
1: solved... in 0.105s
2: solved... in 0.014s
1: solved... in 0.106s
2: solved... in 0.013s
1: solved... in 0.106s
2: solved... in 0.014s
1: solved... in 0.109s
2: solved... in 0.011s
1: solved... in 0.105s
2: solved... in 0.013s
1: solved... in 0.123s
2: solved... in 0.013s
1: solved... in 0.105s
2: solved... in 0.014s
1: solved... in 0.105s
2: solved... in 0.015s
1: solved... in 0.109s
2: solved... in 0.014s
1: solved... in 0.105s
2: solved... in 0.013s
1: solved... in 0.108s
2: solved... in 0.015s
1: solved... in 0.106s
2: solved... in 0.014s
1: solved... in 0.14s
2: solved... in 0.015s
1: solved... in 0.106s
2: solved... in 0.015s
1: solved... in 0.105s
2: solved... in 0.014s
1: solved... in 0.124s
2: solved... in 0.015s
1: solved... in 0.106s
2: solved... in 0.016s
1: solved... in 0.142s
2: solved... in 0.012s
1: solved... in 0.105s
2: solved... in 0.016s
1: solved... in 0.106s
2: solved... in 0.015s
1: solved... in 0.106s
2: solved... in 0.015s
1: solved... in 0.105s
2: solved... in 0.017s
1: solved... in 0.109s
2: solved... in 0.017s
1: solved... in 0.105s
2: solved... in 0.017s
1: solved... in 0.107s
2: solved... in 0.017s
1: solved... in 0.107s
2: solved... in 0.016s
1: solved... in 0.106s
2: solved... in 0.016s
1: solved... in 0.108s
2: solved... in 0.017s
1: solved... in 0.105s
2: solved... in 0.017s
1: solved... in 0.108s
2: solved... in 0.018s
1: solved... in 0.106s
2: solved... in 0.018s
1: solved... in 0.114s
2: solved... in 0.016s
1: solved... in 0.105s
2: solved... in 0.018s
1: solved... in 0.105s
2: solved... in 0.018s
1: solved... in 0.105s
2: solved... in 0.019s
1: solved... in 0.105s
2: solved... in 0.018s
1: solved... in 0.108s
2: solved... in 0.018s
1: solved... in 0.106s
2: solved... in 0.019s
1: solved... in 0.106s
2: solved... in 0.019s
1: solved... in 0.114s
2: solved... in 0.017s
1: solved... in 0.106s
2: solved... in 0.022s
1: solved... in 0.108s
2: solved... in 0.019s
1: solved... in 0.105s
2: solved... in 0.015s
1: solved... in 0.109s
2: solved... in 0.015s
1: solved... in 0.106s
2: solved... in 0.02s
1: solved... in 0.114s
2: solved... in 0.015s
1: solved... in 0.106s
2: solved... in 0.016s
1: solved... in 0.107s
2: solved... in 0.02s
1: solved... in 0.107s
2: solved... in 0.022s
1: solved... in 0.106s
2: solved... in 0.02s
1: solved... in 0.108s
2: solved... in 0.02s
1: solved... in 0.106s
2: solved... in 0.02s
1: solved... in 0.107s
2: solved... in 0.015s
1: solved... in 0.106s
2: solved... in 0.022s
1: solved... in 0.106s
2: solved... in 0.021s
1: solved... in 0.106s
2: solved... in 0.016s
1: solved... in 0.106s
2: solved... in 0.015s
1: solved... in 0.109s
2: solved... in 0.021s
1: solved... in 0.106s
2: solved... in 0.021s
1: solved... in 0.106s
2: solved... in 0.021s
1: solved... in 0.108s
2: solved... in 0.022s
1: solved... in 0.106s
2: solved... in 0.022s
1: solved... in 0.107s
2: solved... in 0.021s
1: solved... in 0.107s
2: solved... in 0.016s
1: solved... in 0.108s
2: solved... in 0.025s
1: solved... in 0.106s
2: solved... in 0.021s
1: solved... in 0.106s
2: solved... in 0.023s
1: solved... in 0.107s
2: solved... in 0.019s
1: solved... in 0.106s
2: solved... in 0.023s
1: solved... in 0.109s
2: solved... in 0.023s
1: solved... in 0.107s
2: solved... in 0.023s
1: solved... in 0.107s
2: solved... in 0.023s
1: solved... in 0.106s
2: solved... in 0.022s
1: solved... in 0.105s
2: solved... in 0.024s
1: solved... in 0.109s
2: solved... in 0.029s
1: solved... in 0.106s
2: solved... in 0.022s
1: solved... in 0.108s
2: solved... in 0.017s
1: solved... in 0.106s
2: solved... in 0.025s
1: solved... in 0.105s
2: solved... in 0.023s
1: solved... in 0.106s
2: solved... in 0.023s
1: solved... in 0.105s
2: solved... in 0.024s
1: solved... in 0.111s
2: solved... in 0.023s
1: solved... in 0.106s
2: solved... in 0.024s
1: solved... in 0.109s
2: solved... in 0.024s
1: solved... in 0.106s
2: solved... in 0.029s
1: solved... in 0.108s
2: solved... in 0.022s
1: solved... in 0.106s
2: solved... in 0.026s
1: solved... in 0.105s
2: solved... in 0.027s
1: solved... in 0.106s
2: solved... in 0.024s
1: solved... in 0.105s
2: solved... in 0.024s
1: solved... in 0.109s
2: solved... in 0.025s
1: solved... in 0.106s
2: solved... in 0.025s
1: solved... in 0.107s
2: solved... in 0.03s
1: solved... in 0.106s
2: solved... in 0.023s
1: solved... in 0.107s
2: solved... in 0.032s
1: solved... in 0.108s
2: solved... in 0.025s
1: solved... in 0.107s
2: solved... in 0.029s
1: solved... in 0.109s
2: solved... in 0.024s
1: solved... in 0.106s
2: solved... in 0.021s
1: solved... in 0.105s
2: solved... in 0.025s
1: solved... in 0.14s
2: solved... in 0.018s
1: solved... in 0.106s
2: solved... in 0.034s
1: solved... in 0.107s
2: solved... in 0.025s
1: solved... in 0.142s
2: solved... in 0.04s
1: solved... in 0.107s
2: solved... in 0.029s
1: solved... in 0.106s
2: solved... in 0.033s
1: solved... in 0.112s
2: solved... in 0.026s
1: solved... in 0.106s
2: solved... in 0.03s
1: solved... in 0.143s
2: solved... in 0.03s
1: solved... in 0.106s
2: solved... in 0.033s
1: solved... in 0.111s
2: solved... in 0.04s
1: solved... in 0.105s
2: solved... in 0.031s
1: solved... in 0.11s
2: solved... in 0.029s
1: solved... in 0.155s
2: solved... in 0.032s
1: solved... in 0.106s
2: solved... in 0.026s
1: solved... in 0.141s
2: solved... in 0.026s
1: solved... in 0.143s
2: solved... in 0.024s
1: solved... in 0.145s
2: solved... in 0.026s
1: solved... in 0.151s
2: solved... in 0.043s
1: solved... in 0.105s
2: solved... in 0.034s
1: solved... in 0.109s
2: solved... in 0.026s
1: solved... in 0.106s
2: solved... in 0.023s
1: solved... in 0.147s
2: solved... in 0.026s
1: solved... in 0.141s
2: solved... in 0.032s
1: solved... in 0.105s
2: solved... in 0.044s
1: solved... in 0.105s
2: solved... in 0.041s
1: solved... in 0.105s
2: solved... in 0.04s
1: solved... in 0.106s
2: solved... in 0.026s
1: solved... in 0.118s
2: solved... in 0.029s
1: solved... in 0.142s
2: solved... in 0.028s
1: solved... in 0.141s
2: solved... in 0.041s
1: solved... in 0.11s
2: solved... in 0.029s
1: solved... in 0.107s
2: solved... in 0.023s
1: solved... in 0.124s
2: solved... in 0.022s
1: solved... in 0.119s
2: solved... in 0.03s
1: solved... in 0.11s
2: solved... in 0.031s
1: solved... in 0.106s
2: solved... in 0.043s
1: solved... in 0.106s
2: solved... in 0.032s
1: solved... in 0.107s
2: solved... in 0.032s
1: solved... in 0.107s
2: solved... in 0.024s
1: solved... in 0.106s
2: solved... in 0.023s
1: solved... in 0.106s
2: solved... in 0.023s
1: solved... in 0.108s
2: solved... in 0.023s
1: solved... in 0.106s
2: solved... in 0.023s
1: solved... in 0.106s
2: solved... in 0.042s
1: solved... in 0.106s
2: solved... in 0.023s
1: solved... in 0.147s
2: solved... in 0.033s
1: solved... in 0.106s
2: solved... in 0.023s
1: solved... in 0.105s
2: solved... in 0.047s
1: solved... in 0.108s
2: solved... in 0.023s
1: solved... in 0.107s
2: solved... in 0.025s
1: solved... in 0.112s
2: solved... in 0.032s
1: solved... in 0.106s
2: solved... in 0.023s
1: solved... in 0.108s
2: solved... in 0.047s
1: solved... in 0.106s
2: solved... in 0.032s
1: solved... in 0.107s
2: solved... in 0.032s
1: solved... in 0.106s
2: solved... in 0.047s
1: solved... in 0.107s
2: solved... in 0.027s
1: solved... in 0.11s
2: solved... in 0.032s
1: solved... in 0.107s
2: solved... in 0.026s
1: solved... in 0.111s
2: solved... in 0.033s
1: solved... in 0.105s
2: solved... in 0.025s
1: solved... in 0.106s
2: solved... in 0.025s
1: solved... in 0.106s
2: solved... in 0.048s
1: solved... in 0.105s
2: solved... in 0.034s
1: solved... in 0.107s
2: solved... in 0.033s
1: solved... in 0.106s
2: solved... in 0.036s
1: solved... in 0.109s
2: solved... in 0.031s
1: solved... in 0.109s
2: solved... in 0.033s
1: solved... in 0.108s
2: solved... in 0.034s
1: solved... in 0.106s
2: solved... in 0.026s
1: solved... in 0.106s
2: solved... in 0.051s
1: solved... in 0.106s
2: solved... in 0.025s
1: solved... in 0.106s
2: solved... in 0.034s
1: solved... in 0.109s
2: solved... in 0.025s
1: solved... in 0.107s
2: solved... in 0.034s
1: solved... in 0.106s
2: solved... in 0.07s
1: solved... in 0.147s
2: solved... in 0.055s
1: solved... in 0.117s
2: solved... in 0.046s
1: solved... in 0.148s
2: solved... in 0.054s
1: solved... in 0.14s
2: solved... in 0.056s
1: solved... in 0.145s
2: solved... in 0.063s
1: solved... in 0.141s
2: solved... in 0.056s
1: solved... in 0.157s
2: solved... in 0.056s
1: solved... in 0.14s
2: solved... in 0.053s
1: solved... in 0.158s
2: solved... in 0.053s
1: solved... in 0.141s
2: solved... in 0.033s
1: solved... in 0.146s
2: solved... in 0.054s
1: solved... in 0.14s
2: solved... in 0.055s
1: solved... in 0.119s
2: solved... in 0.057s
1: solved... in 0.148s
2: solved... in 0.056s
1: solved... in 0.147s
2: solved... in 0.054s
1: solved... in 0.152s
2: solved... in 0.054s
1: solved... in 0.15s
2: solved... in 0.041s
1: solved... in 0.168s
2: solved... in 0.054s
1: solved... in 0.148s
2: solved... in 0.062s
1: solved... in 0.147s
2: solved... in 0.055s
1: solved... in 0.146s
2: solved... in 0.056s
1: solved... in 0.147s
2: solved... in 0.057s
1: solved... in 0.153s
2: solved... in 0.056s
1: solved... in 0.147s
2: solved... in 0.056s
1: solved... in 0.155s
2: solved... in 0.057s
1: solved... in 0.146s
2: solved... in 0.058s
1: solved... in 0.146s
2: solved... in 0.057s
1: solved... in 0.146s
2: solved... in 0.061s
1: solved... in 0.147s
2: solved... in 0.076s
1: solved... in 0.153s
2: solved... in 0.076s
1: solved... in 0.146s
2: solved... in 0.06s
1: solved... in 0.158s
2: solved... in 0.06s
1: solved... in 0.149s
2: solved... in 0.075s
1: solved... in 0.147s
2: solved... in 0.06s
1: solved... in 0.139s
2: solved... in 0.059s
1: solved... in 0.13s
2: solved... in 0.06s
1: solved... in 0.143s
2: solved... in 0.062s
1: solved... in 0.13s
2: solved... in 0.062s
1: solved... in 0.149s
2: solved... in 0.06s
1: solved... in 0.139s
2: solved... in 0.075s
1: solved... in 0.129s
2: solved... in 0.062s
1: solved... in 0.147s
2: solved... in 0.062s
1: solved... in 0.147s
2: solved... in 0.062s
1: solved... in 0.165s
2: solved... in 0.059s
1: solved... in 0.147s
2: solved... in 0.075s
1: solved... in 0.147s
2: solved... in 0.059s
1: solved... in 0.155s
2: solved... in 0.063s
1: solved... in 0.129s
2: solved... in 0.069s
1: solved... in 0.162s
2: solved... in 0.068s
1: solved... in 0.148s
2: solved... in 0.09s
1: solved... in 0.13s
2: solved... in 0.064s
1: solved... in 0.147s
2: solved... in 0.067s
1: solved... in 0.147s
2: solved... in 0.064s
1: solved... in 0.161s
2: solved... in 0.067s
1: solved... in 0.146s
2: solved... in 0.065s
1: solved... in 0.149s
2: solved... in 0.067s
1: solved... in 0.146s
2: solved... in 0.068s
1: solved... in 0.129s
2: solved... in 0.069s
1: solved... in 0.146s
2: solved... in 0.068s
1: solved... in 0.146s
2: solved... in 0.066s
1: solved... in 0.149s
2: solved... in 0.066s
1: solved... in 0.146s
2: solved... in 0.067s
1: solved... in 0.149s
2: solved... in 0.067s
1: solved... in 0.147s
2: solved... in 0.047s
1: solved... in 0.137s
2: solved... in 0.069s
1: solved... in 0.147s
2: solved... in 0.073s
1: solved... in 0.146s
2: solved... in 0.047s
1: solved... in 0.151s
2: solved... in 0.069s
1: solved... in 0.146s
2: solved... in 0.07s
1: solved... in 0.149s
2: solved... in 0.072s
1: solved... in 0.145s
2: solved... in 0.075s
1: solved... in 0.148s
2: solved... in 0.074s
1: solved... in 0.146s
2: solved... in 0.069s
1: solved... in 0.146s
2: solved... in 0.073s
1: solved... in 0.15s
2: solved... in 0.07s
1: solved... in 0.146s
2: solved... in 0.074s
1: solved... in 0.149s
2: solved... in 0.067s
1: solved... in 0.146s
2: solved... in 0.075s
1: solved... in 0.147s
2: solved... in 0.041s
1: solved... in 0.136s
2: solved... in 0.084s
1: solved... in 0.146s
2: solved... in 0.072s
1: solved... in 0.148s
2: solved... in 0.075s
1: solved... in 0.159s
2: solved... in 0.076s
1: solved... in 0.146s
2: solved... in 0.076s
1: solved... in 0.155s
2: solved... in 0.079s
1: solved... in 0.147s
2: solved... in 0.08s
1: solved... in 0.149s
2: solved... in 0.079s
1: solved... in 0.151s
2: solved... in 0.081s
1: solved... in 0.148s
2: solved... in 0.082s
1: solved... in 0.15s
2: solved... in 0.1s
1: solved... in 0.154s
2: solved... in 0.08s
1: solved... in 0.15s
2: solved... in 0.084s
1: solved... in 0.139s
2: solved... in 0.08s
1: solved... in 0.149s
2: solved... in 0.099s
1: solved... in 0.146s
2: solved... in 0.08s
1: solved... in 0.15s
2: solved... in 0.114s
1: solved... in 0.146s
2: solved... in 0.08s
1: solved... in 0.147s
2: solved... in 0.079s
1: solved... in 0.154s
2: solved... in 0.079s
1: solved... in 0.148s
2: solved... in 0.084s
1: solved... in 0.147s
2: solved... in 0.079s
1: solved... in 0.147s
2: solved... in 0.096s
1: solved... in 0.13s
2: solved... in 0.047s
1: solved... in 0.149s
2: solved... in 0.073s
1: solved... in 0.146s
2: solved... in 0.074s
1: solved... in 0.162s
2: solved... in 0.081s
1: solved... in 0.149s
2: solved... in 0.08s
1: solved... in 0.146s
2: solved... in 0.077s
1: solved... in 0.148s
2: solved... in 0.084s
1: solved... in 0.147s
2: solved... in 0.082s
1: solved... in 0.149s
2: solved... in 0.094s
1: solved... in 0.145s
2: solved... in 0.086s
1: solved... in 0.147s
2: solved... in 0.072s
1: solved... in 0.141s
2: solved... in 0.083s
1: solved... in 0.146s
2: solved... in 0.083s
1: solved... in 0.151s
2: solved... in 0.088s
1: solved... in 0.146s
2: solved... in 0.086s
1: solved... in 0.147s
2: solved... in 0.054s
1: solved... in 0.133s
2: solved... in 0.087s
1: solved... in 0.147s
2: solved... in 0.081s
1: solved... in 0.155s
2: solved... in 0.05s
1: solved... in 0.136s
2: solved... in 0.088s
1: solved... in 0.149s
2: solved... in 0.084s
1: solved... in 0.149s
2: solved... in 0.084s
1: solved... in 0.146s
2: solved... in 0.054s
1: solved... in 0.137s
2: solved... in 0.09s
1: solved... in 0.151s
2: solved... in 0.098s
1: solved... in 0.147s
2: solved... in 0.082s
1: solved... in 0.153s
2: solved... in 0.087s
1: solved... in 0.147s
2: solved... in 0.096s
1: solved... in 0.147s
2: solved... in 0.093s
1: solved... in 0.147s
2: solved... in 0.086s
1: solved... in 0.147s
2: solved... in 0.085s
1: solved... in 0.159s
2: solved... in 0.085s
1: solved... in 0.146s
2: solved... in 0.095s
1: solved... in 0.147s
2: solved... in 0.088s
1: solved... in 0.161s
2: solved... in 0.1s
1: solved... in 0.146s
2: solved... in 0.108s
1: solved... in 0.147s
2: solved... in 0.094s
1: solved... in 0.16s
2: solved... in 0.088s
1: solved... in 0.147s
2: solved... in 0.095s
1: solved... in 0.151s
2: solved... in 0.101s
1: solved... in 0.16s
2: solved... in 0.094s
1: solved... in 0.15s
2: solved... in 0.096s
1: solved... in 0.151s
2: solved... in 0.061s
1: solved... in 0.139s
2: solved... in 0.062s
1: solved... in 0.142s
2: solved... in 0.111s
1: solved... in 0.151s
2: solved... in 0.096s
1: solved... in 0.147s
2: solved... in 0.097s
1: solved... in 0.149s
2: solved... in 0.103s
1: solved... in 0.15s
2: solved... in 0.091s
1: solved... in 0.147s
2: solved... in 0.104s
1: solved... in 0.147s
2: solved... in 0.09s
1: solved... in 0.151s
2: solved... in 0.095s
1: solved... in 0.147s
2: solved... in 0.097s
1: solved... in 0.148s
2: solved... in 0.06s
1: solved... in 0.139s
2: solved... in 0.094s
1: solved... in 0.13s
2: solved... in 0.088s
1: solved... in 0.15s
2: solved... in 0.116s
1: solved... in 0.131s
2: solved... in 0.121s
1: solved... in 0.151s
2: solved... in 0.076s
1: solved... in 0.08s
2: solved... in 0.095s
1: solved... in 0.081s
2: solved... in 0.094s
1: solved... in 0.081s
2: solved... in 0.098s
1: solved... in 0.081s
2: solved... in 0.078s
1: solved... in 0.081s
2: solved... in 0.083s
1: solved... in 0.08s
2: solved... in 0.09s
1: solved... in 0.144s
2: solved... in 0.069s
1: solved... in 0.139s
2: solved... in 0.069s
1: solved... in 0.136s
2: solved... in 0.07s
1: solved... in 0.151s
2: solved... in 0.065s
1: solved... in 0.138s
2: solved... in 0.096s
1: solved... in 0.081s
2: solved... in 0.095s
1: solved... in 0.081s
2: solved... in 0.067s
1: solved... in 0.139s
2: solved... in 0.085s
1: solved... in 0.08s
2: solved... in 0.076s
1: solved... in 0.131s
2: solved... in 0.086s
1: solved... in 0.126s
2: solved... in 0.069s
1: solved... in 0.133s
2: solved... in 0.069s
1: solved... in 0.142s
2: solved... in 0.073s
1: solved... in 0.14s
2: solved... in 0.11s
1: solved... in 0.132s
2: solved... in 0.089s
1: solved... in 0.139s
2: solved... in 0.088s
1: solved... in 0.126s
2: solved... in 0.069s
1: solved... in 0.136s
2: solved... in 0.068s
1: solved... in 0.059s
[[34m Info  [0m] - Found inductive invariant: merge --> (((((-22 * rightHeight(h2)) + (-200 * rightHeight(h1))) + (1 * res10._2)) + -1) <= 0)
[[34m Info  [0m] - Found inductive invariant: hasLeftistProperty --> (0 <= 0)
[[34m Info  [0m] - Found inductive invariant: rightHeight --> (((-1 * #res) + 0) <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[34m Info  [0m] - Invariant verified
[[34m Info  [0m] - considering function removeMax...
[[34m Info  [0m] Body: if (h.isInstanceOf[Node])
            (let (e6,t7 := (let (e9,t10 := merge(h.left, h.right)) in
              (e9, (1 + (1 + (1 + t10)))))) in
              (e6, (1 + t7)))
          else
            (h, 1)
[[34m Info  [0m] Post: true
falttened Body: (r369 && (r369 == hasLeftistProperty(h)) && (res9 == ifres82) && ((ci146 && (ci146 == h.isInstanceOf[Node]) && (ifres82 == tp64) && (arg81 == (1 + t7)) && (tp64 == (e6, arg81)) && (t7 == (1 + (1 + (1 + t10)))) && (tres36 == r370) && (cs230 == h.left) && (cs231 == h.right) && (r370 == merge(cs230, cs231)) && (e6 == e9) && (e9 == ts149) && (ts149 == tres36._1) && (t10 == ts150) && (ts150 == tres36._2)) || (!(ci147) && (ci147 == h.isInstanceOf[Node]) && (ifres82 == tp65) && (arg82 == 1) && (tp65 == (h, arg82)))))
Flattened Post: ((ts151 > ((a?1 * r371) + b?1)) && (ts151 == res9._2) && (r371 == leftRightHeight(h)))
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.006s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.004s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.004s
2: solved... in 0.012s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 3/3
Unrolled calls: Set((r369 <=> hasLeftistProperty(h)), (r370 == merge(cs230, cs231)), (r371 == leftRightHeight(h)))
Creating VC for hasLeftistProperty
Unrolling (r369 <=> hasLeftistProperty(h))
Creating VC for merge
Unrolling (r370 == merge(cs230, cs231))
Inlining (r371 == leftRightHeight(h))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.013s
2: solved... in 0.004s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 45/45
Unrolled calls: Set((r403 == merge(cs252, h2)), (r401 <=> hasLeftistProperty(h2)), (r393 <=> hasLeftistProperty(cs245)), (r409 == makeT(cs261, cs262, e200)), (r394 == rightHeight(cs246)), (r392 <=> hasLeftistProperty(cs244)), (r416 == rightHeight(cs230)), (r397 == rightHeight(h)), (r390 == rank(h)), (r414 <=> hasLeftistProperty(cs231)), (r381 == rightHeight(cs239)), (r387 <=> hasLeftistProperty(cs241)), (r377 == rightHeight(h)), (r376 == rank(h)), (r395 == rightHeight(cs247)), (r373 <=> hasLeftistProperty(cs233)), (r378 <=> hasLeftistProperty(cs236)), (r391 == rightHeight(h)), (r407 == rightHeight(h1)), (r412 == rightHeight(cs268)), (r384 == rank(h)), (r375 == rightHeight(cs235)), (r405 == merge(h1, cs257)), (r389 == rightHeight(cs243)), (r379 <=> hasLeftistProperty(cs237)), (r415 == rightHeight(cs231)), (r382 == rank(h)), (r398 == rank(h)), (r388 == rightHeight(cs242)), (r402 == makeT(cs250, cs251, e190)), (r410 == makeT(cs265, cs266, e204)), (r413 <=> hasLeftistProperty(cs230)), (r400 <=> hasLeftistProperty(h1)), (r406 == rightHeight(h2)), (r372 <=> hasLeftistProperty(cs232)), (r374 == rightHeight(cs234)), (r408 == merge(cs260, cs231)), (r411 == merge(cs230, cs267)), (r385 == rightHeight(h)), (r386 <=> hasLeftistProperty(cs240)), (r396 == rank(h)), (r380 == rightHeight(cs238)), (r404 == makeT(cs255, cs256, e194)), (r399 == rightHeight(h)), (r383 == rightHeight(h)))
Creating VC for rightHeight
Unrolling (r374 == rightHeight(cs234))
Inlining (r402 == makeT(cs250, cs251, e190))
Unrolling (r397 == rightHeight(h))
Unrolling (r381 == rightHeight(cs239))
Unrolling (r383 == rightHeight(h))
Unrolling (r392 <=> hasLeftistProperty(cs244))
Inlining (r376 == rank(h))
Unrolling (r415 == rightHeight(cs231))
Unrolling (r386 <=> hasLeftistProperty(cs240))
Unrolling (r395 == rightHeight(cs247))
Unrolling (r372 <=> hasLeftistProperty(cs232))
Unrolling (r387 <=> hasLeftistProperty(cs241))
Unrolling (r411 == merge(cs230, cs267))
Unrolling (r375 == rightHeight(cs235))
Inlining (r396 == rank(h))
Unrolling (r406 == rightHeight(h2))
Unrolling (r403 == merge(cs252, h2))
Unrolling (r388 == rightHeight(cs242))
Unrolling (r413 <=> hasLeftistProperty(cs230))
Unrolling (r400 <=> hasLeftistProperty(h1))
Unrolling (r394 == rightHeight(cs246))
Inlining (r382 == rank(h))
Inlining (r390 == rank(h))
Unrolling (r393 <=> hasLeftistProperty(cs245))
Inlining (r410 == makeT(cs265, cs266, e204))
Unrolling (r408 == merge(cs260, cs231))
Inlining (r398 == rank(h))
Unrolling (r399 == rightHeight(h))
Unrolling (r389 == rightHeight(cs243))
Unrolling (r385 == rightHeight(h))
Inlining (r404 == makeT(cs255, cs256, e194))
Unrolling (r380 == rightHeight(cs238))
Unrolling (r379 <=> hasLeftistProperty(cs237))
Unrolling (r378 <=> hasLeftistProperty(cs236))
Unrolling (r377 == rightHeight(h))
Inlining (r384 == rank(h))
Unrolling (r416 == rightHeight(cs230))
Unrolling (r405 == merge(h1, cs257))
Unrolling (r373 <=> hasLeftistProperty(cs233))
Unrolling (r407 == rightHeight(h1))
Unrolling (r401 <=> hasLeftistProperty(h2))
Inlining (r409 == makeT(cs261, cs262, e200))
Unrolling (r391 == rightHeight(h))
Unrolling (r412 == rightHeight(cs268))
Unrolling (r414 <=> hasLeftistProperty(cs231))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.07s
2: solved... in 0.006s
1: solved... in 0.058s
2: solved... in 0.006s
1: solved... in 0.056s
2: solved... in 0.005s
1: solved... in 0.027s
2: solved... in 0.006s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 236/236
Unrolled calls: Set((r461 == rightHeight(cs232)), (r418 == rightHeight(cs270)), (r574 <=> hasLeftistProperty(cs387)), (r565 == rightHeight(cs237)), (r583 == rightHeight(cs393)), (r508 == rightHeight(cs230)), (r495 <=> hasLeftistProperty(cs333)), (r465 == rightHeight(cs300)), (r635 == rank(cs231)), (r606 == rightHeight(cs416)), (r498 == rightHeight(cs336)), (r519 == rank(h1)), (r603 <=> hasLeftistProperty(cs413)), (r485 == makeT(cs312, cs313, e223)), (r614 == rightHeight(h2)), (r595 <=> hasLeftistProperty(cs409)), (r620 == rank(cs262)), (r546 == rightHeight(cs371)), (r481 == rightHeight(cs241)), (r478 == rightHeight(cs307)), (r543 == merge(cs364, cs231)), (r510 <=> hasLeftistProperty(cs342)), (r639 == rightHeight(cs267)), (r643 == rightHeight(h2)), (r587 == merge(h1, cs403)), (r585 == makeT(cs397, cs398, e279)), (r466 == rank(cs232)), (r553 == rightHeight(cs374)), (r601 == rightHeight(cs233)), (r616 == rightHeight(h2)), (r568 <=> hasLeftistProperty(cs383)), (r440 == rightHeight(cs283)), (r453 == rank(cs240)), (r521 == rank(h1)), (r612 == rightHeight(cs420)), (r489 == rightHeight(cs321)), (r503 == rightHeight(cs339)), (r509 <=> hasLeftistProperty(cs341)), (r628 == rightHeight(cs231)), (r571 == rightHeight(cs386)), (r593 == rightHeight(cs233)), (r597 == rightHeight(cs411)), (r506 == rightHeight(cs230)), (r424 == rightHeight(cs272)), (r444 == rightHeight(cs287)), (r598 == rank(cs233)), (r439 == rightHeight(cs244)), (r499 == rank(cs230)), (r572 == rank(cs236)), (r566 == rank(cs237)), (r435 == rightHeight(cs281)), (r624 <=> hasLeftistProperty(cs424)), (r479 == rightHeight(cs308)), (r445 == rank(cs240)), (r607 == rank(h2)), (r472 == rightHeight(cs303)), (r586 == makeT(cs401, cs402, e283)), (r647 == rightHeight(cs231)), (r575 <=> hasLeftistProperty(cs388)), (r526 == rightHeight(cs354)), (r589 <=> hasLeftistProperty(cs405)), (r615 == rank(h2)), (r473 == rightHeight(cs304)), (r582 == rightHeight(cs391)), (r516 <=> hasLeftistProperty(cs346)), (r645 <=> hasLeftistProperty(cs260)), (r525 <=> hasLeftistProperty(cs353)), (r423 == rightHeight(cs271)), (r477 <=> hasLeftistProperty(cs306)), (r462 <=> hasLeftistProperty(cs297)), (r419 == rank(e190)), (r515 <=> hasLeftistProperty(cs345)), (r464 == rightHeight(cs299)), (r556 == rightHeight(cs377)), (r608 == rightHeight(h2)), (r590 == rightHeight(cs406)), (r618 == rank(e200)), (r634 == rightHeight(cs231)), (r648 == rightHeight(cs260)), (r502 <=> hasLeftistProperty(cs338)), (r486 == makeT(cs316, cs317, e227)), (r547 == rightHeight(cs372)), (r591 == rightHeight(cs407)), (r613 == rank(h2)), (r617 == rank(e200)), (r594 <=> hasLeftistProperty(cs408)), (r458 == rightHeight(cs295)), (r434 == rightHeight(cs280)), (r484 == merge(cs311, cs267)), (r471 <=> hasLeftistProperty(cs302)), (r524 <=> hasLeftistProperty(cs352)), (r541 == rank(e204)), (r505 == rank(cs230)), (r644 == rightHeight(cs252)), (r545 == merge(cs260, cs369)), (r433 <=> hasLeftistProperty(cs279)), (r596 == rightHeight(cs410)), (r518 == rightHeight(cs348)), (r536 == rank(cs245)), (r554 <=> hasLeftistProperty(cs375)), (r492 == makeT(cs329, cs330, e237)), (r636 == rightHeight(cs231)), (r530 <=> hasLeftistProperty(cs356)), (r527 == rightHeight(cs355)), (r431 == rightHeight(cs244)), (r638 <=> hasLeftistProperty(cs267)), (r455 == rightHeight(cs292)), (r504 == rightHeight(cs340)), (r599 == rightHeight(cs233)), (r442 <=> hasLeftistProperty(cs285)), (r567 == rightHeight(cs237)), (r619 == rank(cs262)), (r467 == rightHeight(cs232)), (r468 == rank(cs232)), (r469 == rightHeight(cs232)), (r448 <=> hasLeftistProperty(cs289)), (r564 == rank(cs237)), (r551 == rank(cs256)), (r517 == rightHeight(cs347)), (r428 == rightHeight(cs276)), (r430 == rank(cs244)), (r537 == rightHeight(cs245)), (r625 == rightHeight(cs425)), (r605 == rightHeight(cs415)), (r649 <=> hasLeftistProperty(h1)), (r500 == rightHeight(cs230)), (r460 == rank(cs232)), (r425 == rightHeight(cs273)), (r459 == rightHeight(cs296)), (r652 == rightHeight(h1)), (r650 <=> hasLeftistProperty(cs257)), (r493 == merge(cs252, cs331)), (r642 <=> hasLeftistProperty(h2)), (r480 == rank(cs241)), (r520 == rightHeight(h1)), (r476 <=> hasLeftistProperty(cs305)), (r497 == rightHeight(cs335)), (r475 == rightHeight(cs241)), (r441 <=> hasLeftistProperty(cs284)), (r626 == rightHeight(cs426)), (r421 == rank(e190)), (r482 == rank(cs241)), (r490 == makeT(cs324, cs325, e233)), (r560 <=> hasLeftistProperty(cs379)), (r609 <=> hasLeftistProperty(cs417)), (r640 == rightHeight(cs230)), (r637 <=> hasLeftistProperty(cs230)), (r501 <=> hasLeftistProperty(cs337)), (r488 == rightHeight(cs319)), (r449 == rightHeight(cs290)), (r532 == rightHeight(cs358)), (r544 == makeT(cs367, cs368, e260)), (r570 == rightHeight(cs385)), (r534 == rank(cs245)), (r512 == rightHeight(cs344)), (r533 == rightHeight(cs359)), (r450 == rightHeight(cs291)), (r523 == rightHeight(cs349)), (r470 <=> hasLeftistProperty(cs301)), (r577 == rightHeight(cs390)), (r602 == rightHeight(cs412)), (r630 <=> hasLeftistProperty(cs428)), (r491 == merge(cs326, h2)), (r646 <=> hasLeftistProperty(cs231)), (r438 == rank(cs244)), (r604 <=> hasLeftistProperty(cs414)), (r420 == rank(cs251)), (r561 <=> hasLeftistProperty(cs380)), (r446 == rightHeight(cs240)), (r580 == rank(cs236)), (r447 <=> hasLeftistProperty(cs288)), (r487 == merge(cs230, cs318)), (r558 == rank(cs237)), (r529 == rightHeight(cs245)), (r456 <=> hasLeftistProperty(cs293)), (r623 <=> hasLeftistProperty(cs423)), (r552 == rank(e194)), (r627 == rank(cs231)), (r651 == rightHeight(cs257)), (r548 == rightHeight(cs373)), (r563 == rightHeight(cs382)), (r578 == rank(cs236)), (r631 == rightHeight(cs429)), (r463 <=> hasLeftistProperty(cs298)), (r550 == rank(e194)), (r559 == rightHeight(cs237)), (r513 == rank(h1)), (r507 == rank(cs230)), (r633 == rank(cs231)), (r542 == makeT(cs362, cs363, e256)), (r432 <=> hasLeftistProperty(cs278)), (r514 == rightHeight(h1)), (r494 == rightHeight(cs332)), (r436 == rank(cs244)), (r443 == rightHeight(cs286)), (r437 == rightHeight(cs244)), (r581 == rightHeight(cs236)), (r592 == rank(cs233)), (r511 == rightHeight(cs343)), (r422 == rank(cs251)), (r427 <=> hasLeftistProperty(cs275)), (r611 == rightHeight(cs419)), (r451 == rank(cs240)), (r562 == rightHeight(cs381)), (r496 <=> hasLeftistProperty(cs334)), (r584 == merge(cs396, cs257)), (r641 <=> hasLeftistProperty(cs252)), (r535 == rightHeight(cs245)), (r632 == rightHeight(cs430)), (r452 == rightHeight(cs240)), (r588 <=> hasLeftistProperty(cs404)), (r622 == rightHeight(cs422)), (r600 == rank(cs233)), (r483 == rightHeight(cs241)), (r429 == rightHeight(cs277)), (r573 == rightHeight(cs236)), (r621 == rightHeight(cs421)), (r557 == rightHeight(cs378)), (r539 == rank(e204)), (r417 == rightHeight(cs269)), (r522 == rightHeight(h1)), (r457 <=> hasLeftistProperty(cs294)), (r454 == rightHeight(cs240)), (r474 == rank(cs241)), (r549 == rank(cs256)), (r538 == rank(cs266)), (r579 == rightHeight(cs236)), (r629 <=> hasLeftistProperty(cs427)), (r528 == rank(cs245)), (r610 <=> hasLeftistProperty(cs418)), (r426 <=> hasLeftistProperty(cs274)), (r555 <=> hasLeftistProperty(cs376)), (r540 == rank(cs266)), (r569 <=> hasLeftistProperty(cs384)), (r576 == rightHeight(cs389)), (r531 <=> hasLeftistProperty(cs357)))
Inlining (r505 == rank(cs230))
Unrolling (r650 <=> hasLeftistProperty(cs257))
Inlining (r466 == rank(cs232))
Unrolling (r501 <=> hasLeftistProperty(cs337))
Unrolling (r563 == rightHeight(cs382))
Unrolling (r599 == rightHeight(cs233))
Inlining (r540 == rank(cs266))
Unrolling (r632 == rightHeight(cs430))
Unrolling (r488 == rightHeight(cs319))
Inlining (r549 == rank(cs256))
Unrolling (r557 == rightHeight(cs378))
Unrolling (r643 == rightHeight(h2))
Inlining (r536 == rank(cs245))
Inlining (r627 == rank(cs231))
Unrolling (r497 == rightHeight(cs335))
Unrolling (r425 == rightHeight(cs273))
Unrolling (r511 == rightHeight(cs343))
Inlining (r550 == rank(e194))
Unrolling (r630 <=> hasLeftistProperty(cs428))
Unrolling (r504 == rightHeight(cs340))
Unrolling (r514 == rightHeight(h1))
Inlining (r580 == rank(cs236))
Unrolling (r628 == rightHeight(cs231))
Unrolling (r582 == rightHeight(cs391))
Inlining (r519 == rank(h1))
Unrolling (r639 == rightHeight(cs267))
Unrolling (r616 == rightHeight(h2))
Inlining (r613 == rank(h2))
Unrolling (r458 == rightHeight(cs295))
Unrolling (r590 == rightHeight(cs406))
Unrolling (r483 == rightHeight(cs241))
Inlining (r544 == makeT(cs367, cs368, e260))
Unrolling (r424 == rightHeight(cs272))
Inlining (r551 == rank(cs256))
Unrolling (r636 == rightHeight(cs231))
Unrolling (r434 == rightHeight(cs280))
Unrolling (r644 == rightHeight(cs252))
Unrolling (r467 == rightHeight(cs232))
Inlining (r507 == rank(cs230))
Inlining (r539 == rank(e204))
Inlining (r436 == rank(cs244))
Inlining (r513 == rank(h1))
Inlining (r618 == rank(e200))
Unrolling (r562 == rightHeight(cs381))
Unrolling (r596 == rightHeight(cs410))
Unrolling (r455 == rightHeight(cs292))
Unrolling (r428 == rightHeight(cs276))
Unrolling (r546 == rightHeight(cs371))
Unrolling (r611 == rightHeight(cs419))
Inlining (r564 == rank(cs237))
Unrolling (r516 <=> hasLeftistProperty(cs346))
Inlining (r538 == rank(cs266))
Inlining (r619 == rank(cs262))
Inlining (r451 == rank(cs240))
Unrolling (r603 <=> hasLeftistProperty(cs413))
Unrolling (r625 == rightHeight(cs425))
Unrolling (r570 == rightHeight(cs385))
Unrolling (r647 == rightHeight(cs231))
Unrolling (r529 == rightHeight(cs245))
Inlining (r521 == rank(h1))
Unrolling (r556 == rightHeight(cs377))
Unrolling (r602 == rightHeight(cs412))
Inlining (r534 == rank(cs245))
Inlining (r430 == rank(cs244))
Unrolling (r437 == rightHeight(cs244))
Unrolling (r649 <=> hasLeftistProperty(h1))
Unrolling (r459 == rightHeight(cs296))
Unrolling (r523 == rightHeight(cs349))
Inlining (r600 == rank(cs233))
Unrolling (r571 == rightHeight(cs386))
Inlining (r445 == rank(cs240))
Unrolling (r535 == rightHeight(cs245))
Unrolling (r548 == rightHeight(cs373))
Unrolling (r626 == rightHeight(cs426))
Unrolling (r565 == rightHeight(cs237))
Inlining (r474 == rank(cs241))
Unrolling (r593 == rightHeight(cs233))
Unrolling (r475 == rightHeight(cs241))
Inlining (r566 == rank(cs237))
Unrolling (r517 == rightHeight(cs347))
Inlining (r592 == rank(cs233))
Inlining (r598 == rank(cs233))
Unrolling (r423 == rightHeight(cs271))
Unrolling (r478 == rightHeight(cs307))
Unrolling (r452 == rightHeight(cs240))
Unrolling (r579 == rightHeight(cs236))
Unrolling (r429 == rightHeight(cs277))
Unrolling (r651 == rightHeight(cs257))
Inlining (r499 == rank(cs230))
Unrolling (r440 == rightHeight(cs283))
Inlining (r438 == rank(cs244))
Inlining (r635 == rank(cs231))
Inlining (r552 == rank(e194))
Unrolling (r576 == rightHeight(cs389))
Unrolling (r526 == rightHeight(cs354))
Inlining (r541 == rank(e204))
Unrolling (r495 <=> hasLeftistProperty(cs333))
Unrolling (r559 == rightHeight(cs237))
Unrolling (r591 == rightHeight(cs407))
Inlining (r578 == rank(cs236))
Unrolling (r537 == rightHeight(cs245))
Unrolling (r431 == rightHeight(cs244))
Inlining (r422 == rank(cs251))
Unrolling (r496 <=> hasLeftistProperty(cs334))
Unrolling (r489 == rightHeight(cs321))
Unrolling (r439 == rightHeight(cs244))
Inlining (r453 == rank(cs240))
Inlining (r486 == makeT(cs316, cs317, e227))
Inlining (r468 == rank(cs232))
Unrolling (r461 == rightHeight(cs232))
Unrolling (r449 == rightHeight(cs290))
Unrolling (r417 == rightHeight(cs269))
Unrolling (r642 <=> hasLeftistProperty(h2))
Inlining (r490 == makeT(cs324, cs325, e233))
Unrolling (r597 == rightHeight(cs411))
Unrolling (r532 == rightHeight(cs358))
Unrolling (r612 == rightHeight(cs420))
Unrolling (r652 == rightHeight(h1))
Unrolling (r608 == rightHeight(h2))
Inlining (r607 == rank(h2))
Inlining (r421 == rank(e190))
Unrolling (r509 <=> hasLeftistProperty(cs341))
Unrolling (r609 <=> hasLeftistProperty(cs417))
Inlining (r419 == rank(e190))
Inlining (r620 == rank(cs262))
Unrolling (r637 <=> hasLeftistProperty(cs230))
Unrolling (r520 == rightHeight(h1))
Inlining (r572 == rank(cs236))
Unrolling (r443 == rightHeight(cs286))
Unrolling (r435 == rightHeight(cs281))
Unrolling (r573 == rightHeight(cs236))
Unrolling (r464 == rightHeight(cs299))
Inlining (r420 == rank(cs251))
Unrolling (r601 == rightHeight(cs233))
Unrolling (r533 == rightHeight(cs359))
Unrolling (r623 <=> hasLeftistProperty(cs423))
Inlining (r482 == rank(cs241))
Unrolling (r418 == rightHeight(cs270))
Unrolling (r583 == rightHeight(cs393))
Unrolling (r577 == rightHeight(cs390))
Inlining (r485 == makeT(cs312, cs313, e223))
Unrolling (r547 == rightHeight(cs372))
Unrolling (r481 == rightHeight(cs241))
Unrolling (r508 == rightHeight(cs230))
Unrolling (r621 == rightHeight(cs421))
Inlining (r586 == makeT(cs401, cs402, e283))
Inlining (r528 == rank(cs245))
Unrolling (r473 == rightHeight(cs304))
Unrolling (r606 == rightHeight(cs416))
Inlining (r542 == makeT(cs362, cs363, e256))
Inlining (r460 == rank(cs232))
Unrolling (r522 == rightHeight(h1))
Unrolling (r567 == rightHeight(cs237))
Unrolling (r527 == rightHeight(cs355))
Inlining (r633 == rank(cs231))
Inlining (r617 == rank(e200))
Unrolling (r622 == rightHeight(cs422))
Unrolling (r506 == rightHeight(cs230))
Inlining (r492 == makeT(cs329, cs330, e237))
Unrolling (r629 <=> hasLeftistProperty(cs427))
Unrolling (r494 == rightHeight(cs332))
Unrolling (r465 == rightHeight(cs300))
Unrolling (r512 == rightHeight(cs344))
Unrolling (r604 <=> hasLeftistProperty(cs414))
Unrolling (r450 == rightHeight(cs291))
Unrolling (r631 == rightHeight(cs429))
Unrolling (r645 <=> hasLeftistProperty(cs260))
Unrolling (r472 == rightHeight(cs303))
Unrolling (r634 == rightHeight(cs231))
Inlining (r558 == rank(cs237))
Unrolling (r641 <=> hasLeftistProperty(cs252))
Unrolling (r610 <=> hasLeftistProperty(cs418))
Unrolling (r454 == rightHeight(cs240))
Unrolling (r479 == rightHeight(cs308))
Unrolling (r498 == rightHeight(cs336))
Unrolling (r614 == rightHeight(h2))
Inlining (r585 == makeT(cs397, cs398, e279))
Unrolling (r605 == rightHeight(cs415))
Unrolling (r646 <=> hasLeftistProperty(cs231))
Unrolling (r553 == rightHeight(cs374))
Unrolling (r510 <=> hasLeftistProperty(cs342))
Unrolling (r581 == rightHeight(cs236))
Unrolling (r638 <=> hasLeftistProperty(cs267))
Unrolling (r624 <=> hasLeftistProperty(cs424))
Unrolling (r500 == rightHeight(cs230))
Unrolling (r446 == rightHeight(cs240))
Unrolling (r502 <=> hasLeftistProperty(cs338))
Unrolling (r444 == rightHeight(cs287))
Inlining (r480 == rank(cs241))
Unrolling (r640 == rightHeight(cs230))
Unrolling (r518 == rightHeight(cs348))
Unrolling (r515 <=> hasLeftistProperty(cs345))
Unrolling (r648 == rightHeight(cs260))
Unrolling (r503 == rightHeight(cs339))
Inlining (r615 == rank(h2))
Unrolling (r469 == rightHeight(cs232))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.638s
2: solved... in 0.005s
1: solved... in 0.539s
2: solved... in 0.005s
1: solved... in 0.075s
2: solved... in 0.006s
1: solved... in 0.621s
2: solved... in 0.006s
1: solved... in 0.565s
2: solved... in 0.009s
1: solved... in 0.596s
2: solved... in 0.006s
1: solved... in 0.117s
2: solved... in 0.007s
1: solved... in 0.602s
2: solved... in 0.007s
1: solved... in 0.594s
2: solved... in 0.007s
1: solved... in 0.581s
2: solved... in 0.007s
1: solved... in 0.599s
2: solved... in 0.007s
1: solved... in 0.598s
2: solved... in 0.007s
1: solved... in 0.593s
2: solved... in 0.008s
1: solved... in 0.597s
2: solved... in 0.008s
1: solved... in 0.592s
2: solved... in 0.008s
1: solved... in 0.507s
2: solved... in 0.008s
1: solved... in 0.662s
2: solved... in 0.008s
1: solved... in 0.606s
2: solved... in 0.008s
1: solved... in 0.591s
2: solved... in 0.01s
1: solved... in 0.685s
2: solved... in 0.009s
1: solved... in 0.436s
2: solved... in 0.009s
1: solved... in 0.599s
2: solved... in 0.009s
1: solved... in 0.592s
2: solved... in 0.009s
1: solved... in 0.606s
2: solved... in 0.009s
1: solved... in 0.6s
2: solved... in 0.01s
1: solved... in 0.611s
2: solved... in 0.01s
1: solved... in 0.591s
2: solved... in 0.01s
1: solved... in 0.595s
2: solved... in 0.01s
1: solved... in 0.591s
2: solved... in 0.01s
1: solved... in 0.597s
2: solved... in 0.01s
1: solved... in 0.073s
2: solved... in 0.01s
1: solved... in 0.597s
2: solved... in 0.011s
1: solved... in 0.615s
2: solved... in 0.011s
1: solved... in 0.592s
2: solved... in 0.011s
1: solved... in 0.592s
2: solved... in 0.011s
1: solved... in 0.592s
2: solved... in 0.011s
1: solved... in 0.588s
2: solved... in 0.012s
1: solved... in 0.718s
2: solved... in 0.011s
1: solved... in 0.589s
2: solved... in 0.012s
1: solved... in 0.595s
2: solved... in 0.015s
1: solved... in 0.593s
2: solved... in 0.012s
1: solved... in 0.59s
2: solved... in 0.012s
1: solved... in 0.592s
2: solved... in 0.013s
1: solved... in 0.583s
2: solved... in 0.013s
1: solved... in 0.604s
2: solved... in 0.014s
1: solved... in 0.59s
2: solved... in 0.013s
1: solved... in 0.598s
2: solved... in 0.014s
1: solved... in 0.591s
2: solved... in 0.014s
1: solved... in 0.589s
2: solved... in 0.014s
1: solved... in 0.599s
2: solved... in 0.013s
1: solved... in 0.593s
2: solved... in 0.015s
1: solved... in 0.595s
2: solved... in 0.015s
1: solved... in 0.589s
2: solved... in 0.014s
1: solved... in 0.586s
2: solved... in 0.015s
1: solved... in 0.593s
2: solved... in 0.015s
1: solved... in 0.612s
2: solved... in 0.015s
1: solved... in 0.435s
2: solved... in 0.015s
1: solved... in 0.436s
2: solved... in 0.015s
1: solved... in 0.591s
2: solved... in 0.016s
1: solved... in 0.447s
2: solved... in 0.015s
1: solved... in 0.616s
2: solved... in 0.016s
1: solved... in 0.453s
2: solved... in 0.016s
1: solved... in 0.619s
2: solved... in 0.018s
1: solved... in 0.609s
2: solved... in 0.02s
1: solved... in 0.437s
2: solved... in 0.016s
1: solved... in 0.648s
2: solved... in 0.016s
1: solved... in 0.692s
2: solved... in 0.017s
1: solved... in 0.663s
2: solved... in 0.018s
1: solved... in 0.661s
2: solved... in 0.017s
1: solved... in 0.665s
2: solved... in 0.017s
1: solved... in 0.444s
2: solved... in 0.017s
1: solved... in 0.439s
2: solved... in 0.017s
1: solved... in 0.438s
2: solved... in 0.017s
1: solved... in 0.657s
2: solved... in 0.018s
1: solved... in 0.66s
2: solved... in 0.018s
1: solved... in 0.636s
2: solved... in 0.018s
1: solved... in 0.661s
2: solved... in 0.018s
1: solved... in 0.64s
2: solved... in 0.018s
1: solved... in 0.647s
2: solved... in 0.019s
1: solved... in 0.663s
2: solved... in 0.019s
1: solved... in 0.667s
2: solved... in 0.019s
1: solved... in 0.661s
2: solved... in 0.019s
1: solved... in 0.657s
2: solved... in 0.02s
1: solved... in 0.434s
2: solved... in 0.02s
1: solved... in 0.644s
2: solved... in 0.02s
1: solved... in 0.664s
2: solved... in 0.02s
1: solved... in 0.669s
2: solved... in 0.02s
1: solved... in 0.646s
2: solved... in 0.02s
1: solved... in 0.637s
2: solved... in 0.02s
1: solved... in 0.636s
2: solved... in 0.021s
1: solved... in 0.634s
2: solved... in 0.021s
1: solved... in 0.635s
2: solved... in 0.021s
1: solved... in 0.661s
2: solved... in 0.023s
1: solved... in 0.602s
2: solved... in 0.023s
1: solved... in 0.598s
2: solved... in 0.022s
1: solved... in 0.598s
2: solved... in 0.022s
1: solved... in 0.61s
2: solved... in 0.023s
1: solved... in 0.615s
2: solved... in 0.022s
1: solved... in 0.618s
2: solved... in 0.023s
1: solved... in 0.621s
2: solved... in 0.023s
1: solved... in 0.622s
2: solved... in 0.023s
1: solved... in 0.622s
2: solved... in 0.025s
1: solved... in 0.63s
2: solved... in 0.023s
1: solved... in 0.612s
2: solved... in 0.024s
1: solved... in 0.61s
2: solved... in 0.024s
1: solved... in 0.663s
2: solved... in 0.024s
1: solved... in 0.621s
2: solved... in 0.025s
1: solved... in 0.613s
2: solved... in 0.027s
1: solved... in 0.432s
2: solved... in 0.028s
1: solved... in 0.437s
2: solved... in 0.028s
1: solved... in 0.435s
2: solved... in 0.027s
1: solved... in 0.428s
2: solved... in 0.028s
1: solved... in 0.433s
2: solved... in 0.027s
1: solved... in 0.44s
2: solved... in 0.029s
1: solved... in 0.434s
2: solved... in 0.032s
1: solved... in 0.434s
2: solved... in 0.032s
1: solved... in 0.432s
2: solved... in 0.032s
1: solved... in 0.433s
2: solved... in 0.029s
1: solved... in 0.433s
2: solved... in 0.028s
1: solved... in 0.442s
2: solved... in 0.029s
1: solved... in 0.435s
2: solved... in 0.03s
1: solved... in 0.431s
2: solved... in 0.029s
1: solved... in 0.458s
2: solved... in 0.028s
1: solved... in 0.443s
2: solved... in 0.03s
1: solved... in 0.433s
2: solved... in 0.029s
1: solved... in 0.439s
2: solved... in 0.029s
1: solved... in 0.443s
2: solved... in 0.032s
1: solved... in 0.435s
2: solved... in 0.032s
1: solved... in 0.432s
2: solved... in 0.032s
1: solved... in 0.445s
2: solved... in 0.032s
1: solved... in 0.435s
2: solved... in 0.032s
1: solved... in 0.436s
2: solved... in 0.032s
1: solved... in 0.428s
2: solved... in 0.032s
1: solved... in 0.438s
2: solved... in 0.03s
1: solved... in 0.436s
2: solved... in 0.029s
1: solved... in 0.436s
2: solved... in 0.029s
1: solved... in 0.44s
2: solved... in 0.03s
1: solved... in 0.436s
2: solved... in 0.029s
1: solved... in 0.428s
2: solved... in 0.029s
1: solved... in 0.439s
2: solved... in 0.027s
1: solved... in 0.454s
2: solved... in 0.031s
1: solved... in 0.443s
2: solved... in 0.03s
1: solved... in 0.44s
2: solved... in 0.029s
1: solved... in 0.436s
2: solved... in 0.027s
1: solved... in 0.432s
2: solved... in 0.028s
1: solved... in 0.451s
2: solved... in 0.029s
1: solved... in 0.45s
2: solved... in 0.03s
1: solved... in 0.446s
2: solved... in 0.031s
1: solved... in 0.433s
2: solved... in 0.029s
1: solved... in 0.439s
2: solved... in 0.031s
1: solved... in 0.437s
2: solved... in 0.032s
1: solved... in 0.431s
2: solved... in 0.028s
1: solved... in 0.485s
2: solved... in 0.027s
1: solved... in 0.442s
2: solved... in 0.034s
1: solved... in 0.438s
2: solved... in 0.029s
1: solved... in 0.448s
2: solved... in 0.028s
1: solved... in 0.442s
2: solved... in 0.028s
1: solved... in 0.435s
2: solved... in 0.028s
1: solved... in 0.444s
2: solved... in 0.028s
1: solved... in 0.441s
2: solved... in 0.028s
1: solved... in 0.436s
2: solved... in 0.028s
1: solved... in 0.444s
2: solved... in 0.028s
1: solved... in 0.444s
2: solved... in 0.028s
1: solved... in 0.434s
2: solved... in 0.03s
1: solved... in 0.443s
2: solved... in 0.03s
1: solved... in 0.445s
2: solved... in 0.033s
1: solved... in 0.436s
2: solved... in 0.029s
1: solved... in 0.433s
2: solved... in 0.033s
1: solved... in 0.439s
2: solved... in 0.037s
1: solved... in 0.466s
2: solved... in 0.034s
1: solved... in 0.433s
2: solved... in 0.031s
1: solved... in 0.446s
2: solved... in 0.03s
1: solved... in 0.436s
2: solved... in 0.03s
1: solved... in 0.438s
2: solved... in 0.033s
1: solved... in 0.443s
2: solved... in 0.034s
1: solved... in 0.448s
2: solved... in 0.031s
1: solved... in 0.436s
2: solved... in 0.032s
1: solved... in 0.434s
2: solved... in 0.032s
1: solved... in 0.443s
2: solved... in 0.035s
1: solved... in 0.449s
2: solved... in 0.03s
1: solved... in 0.444s
2: solved... in 0.03s
1: solved... in 0.445s
2: solved... in 0.03s
1: solved... in 0.439s
2: solved... in 0.031s
1: solved... in 0.445s
2: solved... in 0.038s
1: solved... in 0.435s
2: solved... in 0.031s
1: solved... in 0.447s
2: solved... in 0.032s
1: solved... in 0.436s
2: solved... in 0.034s
1: solved... in 0.435s
2: solved... in 0.034s
1: solved... in 0.443s
2: solved... in 0.031s
1: solved... in 0.442s
2: solved... in 0.035s
1: solved... in 0.437s
2: solved... in 0.032s
1: solved... in 0.443s
2: solved... in 0.03s
1: solved... in 0.438s
2: solved... in 0.03s
1: solved... in 0.431s
2: solved... in 0.036s
1: solved... in 0.438s
2: solved... in 0.033s
1: solved... in 0.438s
2: solved... in 0.036s
1: solved... in 0.435s
2: solved... in 0.036s
1: solved... in 0.438s
2: solved... in 0.031s
1: solved... in 0.446s
2: solved... in 0.032s
1: solved... in 0.448s
2: solved... in 0.033s
1: solved... in 0.433s
2: solved... in 0.033s
1: solved... in 0.438s
2: solved... in 0.034s
1: solved... in 0.445s
2: solved... in 0.032s
1: solved... in 0.434s
2: solved... in 0.035s
1: solved... in 0.436s
2: solved... in 0.037s
1: solved... in 0.438s
2: solved... in 0.033s
1: solved... in 0.437s
2: solved... in 0.034s
1: solved... in 0.441s
2: solved... in 0.034s
1: solved... in 0.446s
2: solved... in 0.035s
1: solved... in 0.439s
2: solved... in 0.035s
1: solved... in 0.441s
2: solved... in 0.035s
1: solved... in 0.447s
2: solved... in 0.038s
1: solved... in 0.436s
2: solved... in 0.033s
1: solved... in 0.435s
2: solved... in 0.034s
1: solved... in 0.444s
2: solved... in 0.035s
1: solved... in 0.451s
2: solved... in 0.039s
1: solved... in 0.435s
2: solved... in 0.035s
1: solved... in 0.452s
2: solved... in 0.035s
1: solved... in 0.451s
2: solved... in 0.034s
1: solved... in 0.45s
2: solved... in 0.038s
1: solved... in 0.433s
2: solved... in 0.035s
1: solved... in 0.439s
2: solved... in 0.035s
1: solved... in 0.434s
2: solved... in 0.036s
1: solved... in 0.436s
2: solved... in 0.036s
1: solved... in 0.435s
2: solved... in 0.035s
1: solved... in 0.437s
2: solved... in 0.036s
1: solved... in 0.432s
2: solved... in 0.036s
1: solved... in 0.437s
2: solved... in 0.039s
1: solved... in 0.453s
2: solved... in 0.04s
1: solved... in 0.431s
2: solved... in 0.037s
1: solved... in 0.457s
2: solved... in 0.033s
1: solved... in 0.434s
2: solved... in 0.038s
1: solved... in 0.437s
2: solved... in 0.036s
1: solved... in 0.445s
2: solved... in 0.036s
1: solved... in 0.44s
2: solved... in 0.037s
1: solved... in 0.439s
2: solved... in 0.037s
1: solved... in 0.435s
2: solved... in 0.037s
1: solved... in 0.443s
2: solved... in 0.037s
1: solved... in 0.456s
2: solved... in 0.041s
1: solved... in 0.432s
2: solved... in 0.037s
1: solved... in 0.452s
2: solved... in 0.037s
1: solved... in 0.437s
2: solved... in 0.038s
1: solved... in 0.432s
2: solved... in 0.038s
1: solved... in 0.456s
2: solved... in 0.038s
1: solved... in 0.451s
2: solved... in 0.038s
1: solved... in 0.445s
2: solved... in 0.039s
1: solved... in 0.451s
2: solved... in 0.04s
1: solved... in 0.464s
2: solved... in 0.053s
1: solved... in 0.433s
2: solved... in 0.041s
1: solved... in 0.45s
2: solved... in 0.041s
1: solved... in 0.447s
2: solved... in 0.035s
1: solved... in 0.434s
2: solved... in 0.038s
1: solved... in 0.44s
2: solved... in 0.04s
1: solved... in 0.438s
2: solved... in 0.042s
1: solved... in 0.434s
2: solved... in 0.04s
1: solved... in 0.438s
2: solved... in 0.04s
1: solved... in 0.44s
2: solved... in 0.04s
1: solved... in 0.44s
2: solved... in 0.042s
1: solved... in 0.435s
2: solved... in 0.042s
1: solved... in 0.439s
2: solved... in 0.043s
1: solved... in 0.438s
2: solved... in 0.041s
1: solved... in 0.43s
2: solved... in 0.041s
1: solved... in 0.443s
2: solved... in 0.041s
1: solved... in 0.433s
2: solved... in 0.042s
1: solved... in 0.445s
2: solved... in 0.043s
1: solved... in 0.455s
2: solved... in 0.042s
1: solved... in 0.437s
2: solved... in 0.043s
1: solved... in 0.433s
2: solved... in 0.042s
1: solved... in 0.445s
2: solved... in 0.042s
1: solved... in 0.449s
2: solved... in 0.046s
1: solved... in 0.462s
2: solved... in 0.045s
1: solved... in 0.439s
2: solved... in 0.046s
1: solved... in 0.431s
2: solved... in 0.043s
1: solved... in 0.441s
2: solved... in 0.037s
1: solved... in 0.436s
2: solved... in 0.038s
1: solved... in 0.434s
2: solved... in 0.043s
1: solved... in 0.429s
2: solved... in 0.045s
1: solved... in 0.442s
2: solved... in 0.044s
1: solved... in 0.44s
2: solved... in 0.047s
1: solved... in 0.434s
2: solved... in 0.045s
1: solved... in 0.442s
2: solved... in 0.045s
1: solved... in 0.44s
2: solved... in 0.044s
1: solved... in 0.432s
2: solved... in 0.04s
1: solved... in 0.441s
2: solved... in 0.04s
1: solved... in 0.44s
2: solved... in 0.04s
1: solved... in 0.439s
2: solved... in 0.046s
1: solved... in 0.447s
2: solved... in 0.038s
1: solved... in 0.433s
2: solved... in 0.039s
1: solved... in 0.432s
2: solved... in 0.045s
1: solved... in 0.441s
2: solved... in 0.04s
1: solved... in 0.434s
2: solved... in 0.044s
1: solved... in 0.433s
2: solved... in 0.047s
1: solved... in 0.443s
2: solved... in 0.042s
1: solved... in 0.436s
2: solved... in 0.042s
1: solved... in 0.433s
2: solved... in 0.05s
1: solved... in 0.442s
2: solved... in 0.041s
1: solved... in 0.441s
2: solved... in 0.054s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 512/512
Unrolled calls: Set((r773 == rank(h1)), (r824 == rank(cs334)), (r865 == rightHeight(cs341)), (r666 == rightHeight(cs257)), (r749 <=> hasLeftistProperty(cs517)), (r901 == rightHeight(cs230)), (r976 <=> hasLeftistProperty(cs689)), (r984 == rightHeight(cs693)), (r863 == rightHeight(cs615)), (r1149 <=> hasLeftistProperty(cs260)), (r1083 <=> hasLeftistProperty(cs753)), (r1016 <=> hasLeftistProperty(cs714)), (r762 == rightHeight(cs529)), (r945 == rightHeight(cs668)), (r987 <=> hasLeftistProperty(cs696)), (r738 == rank(cs346)), (r1065 == rightHeight(cs342)), (r751 == rightHeight(cs519)), (r969 == rightHeight(cs684)), (r929 == rank(cs313)), (r895 <=> hasLeftistProperty(cs635)), (r855 == rightHeight(cs605)), (r810 == rightHeight(cs576)), (r860 <=> hasLeftistProperty(cs612)), (r792 == rightHeight(cs559)), (r1155 == rightHeight(cs267)), (r784 == rightHeight(cs548)), (r827 == rightHeight(cs334)), (r1142 <=> hasLeftistProperty(cs318)), (r688 == rightHeight(cs460)), (r1111 == rank(cs338)), (r774 == rightHeight(h1)), (r906 == rightHeight(cs643)), (r1024 == rightHeight(cs720)), (r814 <=> hasLeftistProperty(cs582)), (r933 == rightHeight(cs662)), (r1095 == rank(cs424)), (r1050 == rightHeight(cs231)), (r842 == rightHeight(h2)), (r822 == rightHeight(cs588)), (r979 == rightHeight(cs692)), (r840 == rightHeight(cs600)), (r910 <=> hasLeftistProperty(cs648)), (r1006 == rank(cs252)), (r1040 <=> hasLeftistProperty(cs728)), (r992 <=> hasLeftistProperty(cs699)), (r885 == rightHeight(cs417)), (r713 == rank(e260)), (r887 == rightHeight(cs417)), (r851 == rank(e233)), (r912 == rightHeight(cs650)), (r1158 <=> hasLeftistProperty(cs257)), (r1121 == rightHeight(cs345)), (r1004 == rightHeight(cs708)), (r829 == rightHeight(cs591)), (r661 == rightHeight(cs438)), (r660 <=> hasLeftistProperty(cs437)), (r1159 == rightHeight(cs257)), (r996 == rank(cs260)), (r734 <=> hasLeftistProperty(cs505)), (r690 <=> hasLeftistProperty(cs463)), (r673 <=> hasLeftistProperty(cs445)), (r1109 == rank(cs338)), (r689 == rightHeight(cs461)), (r808 == rank(cs333)), (r970 <=> hasLeftistProperty(cs685)), (r813 == rightHeight(cs580)), (r843 <=> hasLeftistProperty(cs601)), (r1074 == rightHeight(cs267)), (r807 == rightHeight(cs333)), (r775 == rank(h1)), (r997 == rightHeight(cs260)), (r760 == rightHeight(cs525)), (r657 == rank(cs257)), (r752 == rank(cs413)), (r776 == rightHeight(h1)), (r1143 == rightHeight(cs318)), (r716 == rank(cs368)), (r667 <=> hasLeftistProperty(cs441)), (r942 == rank(cs363)), (r732 == rank(cs346)), (r918 == rightHeight(cs654)), (r1164 == rightHeight(cs326)), (r1152 == rightHeight(cs260)), (r1144 == rightHeight(cs230)), (r811 == rightHeight(cs577)), (r978 == rightHeight(cs691)), (r854 == rank(cs325)), (r960 <=> hasLeftistProperty(cs679)), (r894 <=> hasLeftistProperty(cs634)), (r724 == rightHeight(cs496)), (r1031 == rightHeight(cs723)), (r920 == rightHeight(cs423)), (r1099 <=> hasLeftistProperty(cs763)), (r869 == rightHeight(cs619)), (r874 <=> hasLeftistProperty(cs620)), (r1090 <=> hasLeftistProperty(cs758)), (r1126 == rank(cs345)), (r913 == rank(cs423)), (r1092 == rightHeight(cs760)), (r1112 == rightHeight(cs338)), (r670 == rightHeight(cs444)), (r1023 <=> hasLeftistProperty(cs719)), (r1098 == rightHeight(cs762)), (r973 == rightHeight(cs688)), (r986 <=> hasLeftistProperty(cs695)), (r1053 == rightHeight(cs735)), (r915 <=> hasLeftistProperty(cs651)), (r1005 == rightHeight(cs709)), (r736 == rightHeight(cs507)), (r826 == rank(cs334)), (r881 <=> hasLeftistProperty(cs625)), (r898 == rank(cs230)), (r662 == rightHeight(cs439)), (r656 == rightHeight(cs435)), (r819 == rightHeight(cs334)), (r900 == rank(cs230)), (r1072 == rightHeight(cs748)), (r759 == rightHeight(cs523)), (r758 == rightHeight(cs522)), (r769 <=> hasLeftistProperty(cs534)), (r1054 <=> hasLeftistProperty(cs736)), (r1068 == rightHeight(cs744)), (r812 == rightHeight(cs579)), (r1064 == rank(cs342)), (r1045 <=> hasLeftistProperty(cs731)), (r911 == rightHeight(cs649)), (r754 == rank(cs413)), (r1067 == rightHeight(cs342)), (r823 == rightHeight(cs589)), (r825 == rightHeight(cs334)), (r879 == rightHeight(cs417)), (r927 == rank(cs313)), (r719 == rightHeight(cs486)), (r1036 == rank(cs398)), (r696 <=> hasLeftistProperty(cs467)), (r699 == rightHeight(cs470)), (r664 == rightHeight(cs257)), (r747 == rightHeight(cs413)), (r847 == rank(h2)), (r802 <=> hasLeftistProperty(cs572)), (r850 == rightHeight(h2)), (r1032 == rightHeight(cs724)), (r1000 == rightHeight(cs703)), (r1047 == rightHeight(cs733)), (r849 == rank(h2)), (r693 == rightHeight(cs466)), (r922 == rightHeight(cs423)), (r1088 == rightHeight(cs424)), (r959 <=> hasLeftistProperty(cs678)), (r684 == rightHeight(cs453)), (r674 <=> hasLeftistProperty(cs446)), (r1062 == rightHeight(cs742)), (r785 == rightHeight(cs549)), (r787 == rightHeight(cs554)), (r875 <=> hasLeftistProperty(cs621)), (r1042 == rightHeight(cs730)), (r1078 == rightHeight(cs752)), (r687 == rightHeight(cs459)), (r1007 == rightHeight(cs252)), (r789 == rightHeight(cs556)), (r1137 <=> hasLeftistProperty(cs364)), (r1102 == rightHeight(cs766)), (r883 == rightHeight(cs627)), (r1073 == rank(cs267)), (r1138 <=> hasLeftistProperty(cs231)), (r744 == rightHeight(cs514)), (r718 == rightHeight(cs485)), (r1051 == rank(cs231)), (r1026 == rank(cs418)), (r967 == rightHeight(cs682)), (r836 == rightHeight(cs596)), (r1025 == rightHeight(cs721)), (r968 == rightHeight(cs683)), (r772 == rightHeight(cs537)), (r908 == rightHeight(cs646)), (r953 <=> hasLeftistProperty(cs674)), (r705 == rightHeight(cs472)), (r848 == rightHeight(h2)), (r709 == rightHeight(cs478)), (r958 == rightHeight(cs427)), (r683 == rightHeight(cs452)), (r861 <=> hasLeftistProperty(cs613)), (r1001 == rightHeight(cs704)), (r698 == rightHeight(cs469)), (r897 == rightHeight(cs637)), (r1084 <=> hasLeftistProperty(cs754)), (r1151 == rightHeight(cs369)), (r730 == rightHeight(cs503)), (r798 == rightHeight(cs570)), (r916 <=> hasLeftistProperty(cs652)), (r943 == rank(cs363)), (r1060 <=> hasLeftistProperty(cs740)), (r1027 == rightHeight(cs418)), (r1052 == rightHeight(cs231)), (r952 == rank(cs330)), (r1123 <=> hasLeftistProperty(cs780)), (r980 == rank(cs414)), (r681 == rightHeight(cs449)), (r1134 <=> hasLeftistProperty(cs331)), (r886 == rank(cs417)), (r672 == rightHeight(cs337)), (r1037 == rank(e279)), (r710 == rightHeight(cs480)), (r974 == rank(cs414)), (r1044 == rightHeight(cs231)), (r1046 <=> hasLeftistProperty(cs732)), (r899 == rightHeight(cs230)), (r844 <=> hasLeftistProperty(cs602)), (r981 == rightHeight(cs414)), (r753 == rightHeight(cs413)), (r1129 == rightHeight(cs345)), (r941 == rank(e256)), (r793 == rightHeight(cs561)), (r989 == rightHeight(cs698)), (r1029 == rightHeight(cs418)), (r872 == rank(cs341)), (r882 == rightHeight(cs626)), (r770 <=> hasLeftistProperty(cs535)), (r985 == rightHeight(cs694)), (r1087 == rank(cs424)), (r1115 == rightHeight(cs774)), (r834 == rightHeight(cs594)), (r857 == rightHeight(cs607)), (r722 == rightHeight(cs494)), (r686 == rightHeight(cs456)), (r1038 == rightHeight(cs726)), (r1156 == rightHeight(cs311)), (r737 == rightHeight(cs508)), (r1103 == rank(cs338)), (r971 <=> hasLeftistProperty(cs686)), (r925 == rightHeight(cs658)), (r1021 == rightHeight(cs418)), (r1056 == rightHeight(cs738)), (r923 == rightHeight(cs656)), (r961 == rightHeight(cs680)), (r663 == rank(cs257)), (r1136 == rightHeight(cs252)), (r1080 == rightHeight(cs267)), (r966 == rightHeight(cs427)), (r1133 <=> hasLeftistProperty(cs252)), (r1147 == rightHeight(cs403)), (r932 == rightHeight(cs661)), (r1106 <=> hasLeftistProperty(cs768)), (r1125 == rightHeight(cs782)), (r1093 == rank(cs424)), (r817 == rightHeight(cs585)), (r1118 == rightHeight(cs777)), (r983 == rightHeight(cs414)), (r800 == rank(cs333)), (r830 == rank(cs317)), (r1049 == rank(cs231)), (r675 == rightHeight(cs447)), (r963 == rank(cs427)), (r794 == rightHeight(cs565)), (r853 == rank(e233)), (r1104 == rightHeight(cs338)), (r884 == rank(cs417)), (r907 == rightHeight(cs645)), (r1048 == rightHeight(cs734)), (r951 == rank(cs330)), (r700 == rank(cs428)), (r1145 <=> hasLeftistProperty(h1)), (r771 == rightHeight(cs536)), (r1114 == rightHeight(cs773)), (r977 <=> hasLeftistProperty(cs690)), (r727 == rightHeight(cs499)), (r669 == rightHeight(cs443)), (r821 <=> hasLeftistProperty(cs587)), (r955 == rightHeight(cs676)), (r1043 == rank(cs231)), (r1015 == rightHeight(cs252)), (r972 == rightHeight(cs687)), (r828 == rightHeight(cs590)), (r1018 == rightHeight(cs716)), (r1058 == rank(cs342)), (r1130 == rightHeight(cs783)), (r949 == rank(e237)), (r708 == rightHeight(cs477)), (r1096 == rightHeight(cs424)), (r1033 == rightHeight(cs725)), (r870 == rank(cs341)), (r938 == rightHeight(cs664)), (r803 <=> hasLeftistProperty(cs573)), (r783 == rightHeight(cs546)), (r706 == rightHeight(cs474)), (r947 == rightHeight(cs672)), (r780 == rightHeight(cs543)), (r1075 <=> hasLeftistProperty(cs749)), (r1127 == rightHeight(cs345)), (r962 == rightHeight(cs681)), (r797 <=> hasLeftistProperty(cs569)), (r1059 == rightHeight(cs342)), (r654 <=> hasLeftistProperty(cs433)), (r1022 <=> hasLeftistProperty(cs718)), (r679 == rank(cs337)), (r1131 == rightHeight(cs784)), (r723 == rightHeight(cs495)), (r731 == rightHeight(cs504)), (r677 == rank(cs337)), (r837 <=> hasLeftistProperty(cs597)), (r1113 == rightHeight(cs771)), (r1009 <=> hasLeftistProperty(cs711)), (r685 == rightHeight(cs455)), (r1139 == rightHeight(cs231)), (r765 == rightHeight(cs532)), (r838 <=> hasLeftistProperty(cs598)), (r919 == rank(cs423)), (r889 <=> hasLeftistProperty(cs631)), (r1128 == rank(cs345)), (r779 == rightHeight(cs541)), (r891 == rightHeight(cs633)), (r856 == rightHeight(cs606)), (r914 == rightHeight(cs423)), (r703 == rightHeight(cs428)), (r1132 == rightHeight(cs786)), (r876 == rightHeight(cs622)), (r1108 == rightHeight(cs770)), (r990 == rank(cs260)), (r741 == rightHeight(cs346)), (r816 == rightHeight(cs584)), (r691 <=> hasLeftistProperty(cs464)), (r781 == rightHeight(cs544)), (r739 == rightHeight(cs346)), (r890 == rightHeight(cs632)), (r740 == rank(cs346)), (r934 == rank(e283)), (r1117 <=> hasLeftistProperty(cs776)), (r790 == rightHeight(cs557)), (r975 == rightHeight(cs414)), (r939 == rightHeight(cs665)), (r791 == rightHeight(cs558)), (r711 == rightHeight(cs481)), (r1097 == rightHeight(cs761)), (r1110 == rightHeight(cs338)), (r841 == rank(h2)), (r680 == rightHeight(cs337)), (r1120 == rank(cs345)), (r936 == rank(cs402)), (r707 == rightHeight(cs475)), (r815 <=> hasLeftistProperty(cs583)), (r924 == rightHeight(cs657)), (r717 == rightHeight(cs483)), (r746 == rank(cs413)), (r720 == rightHeight(cs487)), (r931 == rightHeight(cs660)), (r928 == rank(e223)), (r859 == rightHeight(cs609)), (r1148 == rightHeight(h1)), (r917 == rightHeight(cs653)), (r873 == rightHeight(cs341)), (r954 <=> hasLeftistProperty(cs675)), (r728 <=> hasLeftistProperty(cs501)), (r1089 <=> hasLeftistProperty(cs757)), (r1003 <=> hasLeftistProperty(cs707)), (r1157 <=> hasLeftistProperty(cs396)), (r1162 <=> hasLeftistProperty(h2)), (r745 == rightHeight(cs515)), (r1119 == rightHeight(cs778)), (r964 == rightHeight(cs427)), (r655 == rightHeight(cs434)), (r921 == rank(cs423)), (r786 == rightHeight(cs551)), (r1077 == rightHeight(cs751)), (r902 == rightHeight(cs638)), (r998 == rank(cs260)), (r767 == rank(h1)), (r833 == rank(cs317)), (r658 == rightHeight(cs257)), (r1086 == rightHeight(cs756)), (r743 <=> hasLeftistProperty(cs513)), (r965 == rank(cs427)), (r761 == rightHeight(cs526)), (r991 == rightHeight(cs260)), (r801 == rightHeight(cs333)), (r1071 == rightHeight(cs747)), (r763 <=> hasLeftistProperty(cs530)), (r892 == rank(cs230)), (r866 <=> hasLeftistProperty(cs616)), (r1163 == rightHeight(h2)), (r896 == rightHeight(cs636)), (r671 == rank(cs337)), (r946 == rightHeight(cs669)), (r878 == rank(cs417)), (r1082 == rightHeight(cs267)), (r665 == rank(cs257)), (r1066 == rank(cs342)), (r935 == rank(e283)), (r1061 <=> hasLeftistProperty(cs741)), (r1146 <=> hasLeftistProperty(cs403)), (r845 == rightHeight(cs603)), (r1107 == rightHeight(cs769)), (r1011 == rightHeight(cs713)), (r877 == rightHeight(cs623)), (r796 <=> hasLeftistProperty(cs568)), (r757 == rightHeight(cs521)), (r721 == rightHeight(cs488)), (r862 == rightHeight(cs614)), (r1079 == rank(cs267)), (r867 <=> hasLeftistProperty(cs617)), (r893 == rightHeight(cs230)), (r733 == rightHeight(cs346)), (r909 <=> hasLeftistProperty(cs647)), (r888 <=> hasLeftistProperty(cs630)), (r678 == rightHeight(cs337)), (r1035 == rank(e279)), (r653 <=> hasLeftistProperty(cs432)), (r903 == rightHeight(cs640)), (r905 == rightHeight(cs642)), (r832 == rank(e227)), (r726 == rightHeight(cs498)), (r880 <=> hasLeftistProperty(cs624)), (r694 == rank(cs428)), (r818 == rank(cs334)), (r1122 <=> hasLeftistProperty(cs779)), (r701 == rightHeight(cs428)), (r1091 == rightHeight(cs759)), (r846 == rightHeight(cs604)), (r995 == rightHeight(cs702)), (r748 <=> hasLeftistProperty(cs516)), (r1034 == rank(cs398)), (r1100 <=> hasLeftistProperty(cs764)), (r704 == rightHeight(cs471)), (r1069 <=> hasLeftistProperty(cs745)), (r682 == rightHeight(cs450)), (r1150 <=> hasLeftistProperty(cs369)), (r839 == rightHeight(cs599)), (r1013 == rightHeight(cs252)), (r695 == rightHeight(cs428)), (r659 <=> hasLeftistProperty(cs436)), (r993 <=> hasLeftistProperty(cs700)), (r1124 == rightHeight(cs781)), (r982 == rank(cs414)), (r871 == rightHeight(cs341)), (r835 == rightHeight(cs595)), (r820 <=> hasLeftistProperty(cs586)), (r1140 == rightHeight(cs364)), (r858 == rightHeight(cs608)), (r697 <=> hasLeftistProperty(cs468)), (r1070 <=> hasLeftistProperty(cs746)), (r1020 == rank(cs418)), (r778 == rightHeight(cs539)), (r676 == rightHeight(cs448)), (r1039 <=> hasLeftistProperty(cs727)), (r1116 <=> hasLeftistProperty(cs775)), (r994 == rightHeight(cs701)), (r805 == rightHeight(cs575)), (r1008 <=> hasLeftistProperty(cs710)), (r1141 <=> hasLeftistProperty(cs230)), (r715 == rank(e260)), (r795 == rightHeight(cs566)), (r668 <=> hasLeftistProperty(cs442)), (r725 == rightHeight(cs497)), (r944 == rightHeight(cs667)), (r702 == rank(cs428)), (r766 == rightHeight(cs533)), (r764 <=> hasLeftistProperty(cs531)), (r692 == rightHeight(cs465)), (r831 == rank(e227)), (r750 == rightHeight(cs518)), (r904 == rightHeight(cs641)), (r809 == rightHeight(cs333)), (r714 == rank(cs368)), (r988 == rightHeight(cs697)), (r1057 == rightHeight(cs739)), (r788 == rightHeight(cs555)), (r1154 <=> hasLeftistProperty(cs267)), (r1002 <=> hasLeftistProperty(cs706)), (r712 == rightHeight(cs482)), (r957 == rank(cs427)), (r940 == rank(e256)), (r742 <=> hasLeftistProperty(cs512)), (r1010 == rightHeight(cs712)), (r956 == rightHeight(cs677)), (r1030 == rightHeight(cs722)), (r1041 == rightHeight(cs729)), (r1063 == rightHeight(cs743)), (r1101 == rightHeight(cs765)), (r852 == rank(cs325)), (r1055 <=> hasLeftistProperty(cs737)), (r1012 == rank(cs252)), (r948 == rightHeight(cs673)), (r950 == rank(e237)), (r1017 <=> hasLeftistProperty(cs715)), (r768 == rightHeight(h1)), (r806 == rank(cs333)), (r1085 == rightHeight(cs755)), (r804 == rightHeight(cs574)), (r1076 <=> hasLeftistProperty(cs750)), (r799 == rightHeight(cs571)), (r1153 <=> hasLeftistProperty(cs311)), (r1014 == rank(cs252)), (r735 <=> hasLeftistProperty(cs506)), (r930 == rightHeight(cs659)), (r1019 == rightHeight(cs717)), (r1135 == rightHeight(cs331)), (r864 == rank(cs341)), (r777 == rightHeight(cs538)), (r755 == rightHeight(cs413)), (r1161 <=> hasLeftistProperty(cs326)), (r1094 == rightHeight(cs424)), (r937 == rank(cs402)), (r1028 == rank(cs418)), (r926 == rank(e223)), (r1081 == rank(cs267)), (r782 == rightHeight(cs545)), (r1160 == rightHeight(cs396)), (r729 <=> hasLeftistProperty(cs502)), (r1105 <=> hasLeftistProperty(cs767)), (r868 == rightHeight(cs618)), (r999 == rightHeight(cs260)), (r756 == rightHeight(cs520)))
Unrolling (r659 <=> hasLeftistProperty(cs436))
Unrolling (r757 == rightHeight(cs521))
Inlining (r943 == rank(cs363))
Unrolling (r842 == rightHeight(h2))
Unrolling (r985 == rightHeight(cs694))
Unrolling (r1124 == rightHeight(cs781))
Inlining (r679 == rank(cs337))
Unrolling (r823 == rightHeight(cs589))
Inlining (r1120 == rank(cs345))
Unrolling (r1019 == rightHeight(cs717))
Inlining (r1079 == rank(cs267))
Unrolling (r777 == rightHeight(cs538))
Unrolling (r766 == rightHeight(cs533))
Unrolling (r889 <=> hasLeftistProperty(cs631))
Unrolling (r755 == rightHeight(cs413))
Unrolling (r1074 == rightHeight(cs267))
Unrolling (r1113 == rightHeight(cs771))
Unrolling (r759 == rightHeight(cs523))
Unrolling (r1024 == rightHeight(cs720))
Unrolling (r1098 == rightHeight(cs762))
Unrolling (r666 == rightHeight(cs257))
Inlining (r937 == rank(cs402))
Unrolling (r1162 <=> hasLeftistProperty(h2))
Unrolling (r764 <=> hasLeftistProperty(cs531))
Unrolling (r1096 == rightHeight(cs424))
Unrolling (r871 == rightHeight(cs341))
Unrolling (r846 == rightHeight(cs604))
Unrolling (r747 == rightHeight(cs413))
Unrolling (r769 <=> hasLeftistProperty(cs534))
Unrolling (r890 == rightHeight(cs632))
Unrolling (r865 == rightHeight(cs341))
Unrolling (r712 == rightHeight(cs482))
Unrolling (r868 == rightHeight(cs618))
Unrolling (r948 == rightHeight(cs673))
Unrolling (r1137 <=> hasLeftistProperty(cs364))
Unrolling (r1063 == rightHeight(cs743))
Unrolling (r955 == rightHeight(cs676))
Unrolling (r730 == rightHeight(cs503))
Unrolling (r693 == rightHeight(cs466))
Inlining (r671 == rank(cs337))
Unrolling (r810 == rightHeight(cs576))
Unrolling (r1000 == rightHeight(cs703))
Unrolling (r1042 == rightHeight(cs730))
Unrolling (r984 == rightHeight(cs693))
Unrolling (r783 == rightHeight(cs546))
Unrolling (r873 == rightHeight(cs341))
Unrolling (r1134 <=> hasLeftistProperty(cs331))
Unrolling (r772 == rightHeight(cs537))
Unrolling (r725 == rightHeight(cs497))
Unrolling (r1148 == rightHeight(h1))
Unrolling (r661 == rightHeight(cs438))
Inlining (r677 == rank(cs337))
Unrolling (r819 == rightHeight(cs334))
Unrolling (r1136 == rightHeight(cs252))
Unrolling (r745 == rightHeight(cs515))
Unrolling (r1102 == rightHeight(cs766))
Unrolling (r903 == rightHeight(cs640))
Inlining (r738 == rank(cs346))
Unrolling (r1129 == rightHeight(cs345))
Unrolling (r656 == rightHeight(cs435))
Unrolling (r763 <=> hasLeftistProperty(cs530))
Unrolling (r709 == rightHeight(cs478))
Inlining (r854 == rank(cs325))
Inlining (r746 == rank(cs413))
Inlining (r878 == rank(cs417))
Unrolling (r751 == rightHeight(cs519))
Unrolling (r896 == rightHeight(cs636))
Unrolling (r917 == rightHeight(cs653))
Unrolling (r758 == rightHeight(cs522))
Inlining (r852 == rank(cs325))
Inlining (r1087 == rank(cs424))
Unrolling (r1038 == rightHeight(cs726))
Unrolling (r856 == rightHeight(cs606))
Unrolling (r723 == rightHeight(cs495))
Inlining (r1064 == rank(cs342))
Unrolling (r905 == rightHeight(cs642))
Unrolling (r1075 <=> hasLeftistProperty(cs749))
Inlining (r806 == rank(cs333))
Unrolling (r989 == rightHeight(cs698))
Inlining (r851 == rank(e233))
Unrolling (r1110 == rightHeight(cs338))
Unrolling (r698 == rightHeight(cs469))
Unrolling (r1045 <=> hasLeftistProperty(cs731))
Unrolling (r991 == rightHeight(cs260))
Unrolling (r1130 == rightHeight(cs783))
Unrolling (r894 <=> hasLeftistProperty(cs634))
Unrolling (r1071 == rightHeight(cs747))
Inlining (r663 == rank(cs257))
Unrolling (r850 == rightHeight(h2))
Inlining (r996 == rank(cs260))
Inlining (r1043 == rank(cs231))
Unrolling (r1132 == rightHeight(cs786))
Unrolling (r920 == rightHeight(cs423))
Inlining (r754 == rank(cs413))
Inlining (r1012 == rank(cs252))
Unrolling (r912 == rightHeight(cs650))
Unrolling (r973 == rightHeight(cs688))
Unrolling (r1046 <=> hasLeftistProperty(cs732))
Unrolling (r1041 == rightHeight(cs729))
Unrolling (r731 == rightHeight(cs504))
Inlining (r942 == rank(cs363))
Inlining (r773 == rank(h1))
Unrolling (r906 == rightHeight(cs643))
Unrolling (r1067 == rightHeight(cs342))
Unrolling (r1001 == rightHeight(cs704))
Unrolling (r737 == rightHeight(cs508))
Unrolling (r1077 == rightHeight(cs751))
Unrolling (r1151 == rightHeight(cs369))
Inlining (r952 == rank(cs330))
Inlining (r1126 == rank(cs345))
Unrolling (r664 == rightHeight(cs257))
Unrolling (r918 == rightHeight(cs654))
Unrolling (r837 <=> hasLeftistProperty(cs597))
Inlining (r1095 == rank(cs424))
Unrolling (r680 == rightHeight(cs337))
Unrolling (r893 == rightHeight(cs230))
Inlining (r818 == rank(cs334))
Unrolling (r978 == rightHeight(cs691))
Inlining (r824 == rank(cs334))
Inlining (r898 == rank(cs230))
Inlining (r702 == rank(cs428))
Inlining (r886 == rank(cs417))
Unrolling (r1131 == rightHeight(cs784))
Inlining (r830 == rank(cs317))
Unrolling (r795 == rightHeight(cs566))
Unrolling (r1101 == rightHeight(cs765))
Unrolling (r972 == rightHeight(cs687))
Unrolling (r689 == rightHeight(cs461))
Inlining (r872 == rank(cs341))
Unrolling (r1145 <=> hasLeftistProperty(h1))
Unrolling (r888 <=> hasLeftistProperty(cs630))
Unrolling (r895 <=> hasLeftistProperty(cs635))
Unrolling (r750 == rightHeight(cs518))
Unrolling (r669 == rightHeight(cs443))
Inlining (r1051 == rank(cs231))
Unrolling (r718 == rightHeight(cs485))
Inlining (r913 == rank(cs423))
Inlining (r998 == rank(cs260))
Unrolling (r863 == rightHeight(cs615))
Unrolling (r887 == rightHeight(cs417))
Unrolling (r776 == rightHeight(h1))
Unrolling (r1154 <=> hasLeftistProperty(cs267))
Unrolling (r676 == rightHeight(cs448))
Inlining (r716 == rank(cs368))
Unrolling (r774 == rightHeight(h1))
Inlining (r849 == rank(h2))
Unrolling (r710 == rightHeight(cs480))
Inlining (r1093 == rank(cs424))
Unrolling (r1015 == rightHeight(cs252))
Unrolling (r1056 == rightHeight(cs738))
Unrolling (r962 == rightHeight(cs681))
Unrolling (r678 == rightHeight(cs337))
Unrolling (r845 == rightHeight(cs603))
Unrolling (r779 == rightHeight(cs541))
Unrolling (r1033 == rightHeight(cs725))
Unrolling (r1114 == rightHeight(cs773))
Unrolling (r785 == rightHeight(cs549))
Unrolling (r1121 == rightHeight(cs345))
Inlining (r732 == rank(cs346))
Unrolling (r1076 <=> hasLeftistProperty(cs750))
Inlining (r1073 == rank(cs267))
Inlining (r919 == rank(cs423))
Unrolling (r672 == rightHeight(cs337))
Inlining (r831 == rank(e227))
Unrolling (r995 == rightHeight(cs702))
Unrolling (r1138 <=> hasLeftistProperty(cs231))
Unrolling (r756 == rightHeight(cs520))
Unrolling (r968 == rightHeight(cs683))
Unrolling (r801 == rightHeight(cs333))
Unrolling (r883 == rightHeight(cs627))
Unrolling (r1062 == rightHeight(cs742))
Unrolling (r1005 == rightHeight(cs709))
Unrolling (r681 == rightHeight(cs449))
Unrolling (r869 == rightHeight(cs619))
Unrolling (r914 == rightHeight(cs423))
Unrolling (r701 == rightHeight(cs428))
Unrolling (r1164 == rightHeight(cs326))
Unrolling (r827 == rightHeight(cs334))
Unrolling (r805 == rightHeight(cs575))
Unrolling (r1018 == rightHeight(cs716))
Unrolling (r840 == rightHeight(cs600))
Unrolling (r692 == rightHeight(cs465))
Unrolling (r1004 == rightHeight(cs708))
Unrolling (r1146 <=> hasLeftistProperty(cs403))
Unrolling (r946 == rightHeight(cs669))
Unrolling (r790 == rightHeight(cs557))
Unrolling (r653 <=> hasLeftistProperty(cs432))
Inlining (r1036 == rank(cs398))
Inlining (r832 == rank(e227))
Unrolling (r792 == rightHeight(cs559))
Unrolling (r825 == rightHeight(cs334))
Unrolling (r654 <=> hasLeftistProperty(cs433))
Inlining (r884 == rank(cs417))
Inlining (r847 == rank(h2))
Inlining (r1014 == rank(cs252))
Inlining (r800 == rank(cs333))
Unrolling (r904 == rightHeight(cs641))
Unrolling (r789 == rightHeight(cs556))
Unrolling (r1057 == rightHeight(cs739))
Inlining (r1037 == rank(e279))
Unrolling (r987 <=> hasLeftistProperty(cs696))
Unrolling (r1092 == rightHeight(cs760))
Unrolling (r1008 <=> hasLeftistProperty(cs710))
Unrolling (r809 == rightHeight(cs333))
Inlining (r1109 == rank(cs338))
Unrolling (r1097 == rightHeight(cs761))
Unrolling (r1125 == rightHeight(cs782))
Unrolling (r855 == rightHeight(cs605))
Inlining (r1058 == rank(cs342))
Unrolling (r1155 == rightHeight(cs267))
Unrolling (r1068 == rightHeight(cs744))
Inlining (r951 == rank(cs330))
Inlining (r1028 == rank(cs418))
Inlining (r870 == rank(cs341))
Unrolling (r877 == rightHeight(cs623))
Inlining (r927 == rank(cs313))
Unrolling (r812 == rightHeight(cs579))
Unrolling (r835 == rightHeight(cs595))
Unrolling (r901 == rightHeight(cs230))
Unrolling (r1027 == rightHeight(cs418))
Unrolling (r997 == rightHeight(cs260))
Unrolling (r704 == rightHeight(cs471))
Unrolling (r958 == rightHeight(cs427))
Unrolling (r944 == rightHeight(cs667))
Unrolling (r1065 == rightHeight(cs342))
Unrolling (r979 == rightHeight(cs692))
Inlining (r974 == rank(cs414))
Unrolling (r658 == rightHeight(cs257))
Unrolling (r907 == rightHeight(cs645))
Unrolling (r1135 == rightHeight(cs331))
Unrolling (r882 == rightHeight(cs626))
Inlining (r1034 == rank(cs398))
Unrolling (r1160 == rightHeight(cs396))
Unrolling (r1107 == rightHeight(cs769))
Unrolling (r762 == rightHeight(cs529))
Unrolling (r1048 == rightHeight(cs734))
Unrolling (r1030 == rightHeight(cs722))
Unrolling (r1150 <=> hasLeftistProperty(cs369))
Inlining (r1035 == rank(e279))
Unrolling (r1112 == rightHeight(cs338))
Unrolling (r1156 == rightHeight(cs311))
Unrolling (r925 == rightHeight(cs658))
Unrolling (r1153 <=> hasLeftistProperty(cs311))
Unrolling (r817 == rightHeight(cs585))
Inlining (r740 == rank(cs346))
Unrolling (r786 == rightHeight(cs551))
Inlining (r826 == rank(cs334))
Unrolling (r999 == rightHeight(cs260))
Unrolling (r741 == rightHeight(cs346))
Unrolling (r858 == rightHeight(cs608))
Inlining (r713 == rank(e260))
Unrolling (r736 == rightHeight(cs507))
Inlining (r775 == rank(h1))
Unrolling (r695 == rightHeight(cs428))
Unrolling (r791 == rightHeight(cs558))
Unrolling (r682 == rightHeight(cs450))
Inlining (r965 == rank(cs427))
Unrolling (r859 == rightHeight(cs609))
Inlining (r957 == rank(cs427))
Unrolling (r931 == rightHeight(cs660))
Unrolling (r771 == rightHeight(cs536))
Inlining (r940 == rank(e256))
Inlining (r1066 == rank(cs342))
Inlining (r715 == rank(e260))
Inlining (r935 == rank(e283))
Unrolling (r1078 == rightHeight(cs752))
Unrolling (r670 == rightHeight(cs444))
Unrolling (r1044 == rightHeight(cs231))
Unrolling (r1158 <=> hasLeftistProperty(cs257))
Unrolling (r1002 <=> hasLeftistProperty(cs706))
Unrolling (r699 == rightHeight(cs470))
Inlining (r900 == rank(cs230))
Inlining (r833 == rank(cs317))
Inlining (r934 == rank(e283))
Unrolling (r1139 == rightHeight(cs231))
Inlining (r1049 == rank(cs231))
Unrolling (r1152 == rightHeight(cs260))
Inlining (r752 == rank(cs413))
Unrolling (r720 == rightHeight(cs487))
Unrolling (r708 == rightHeight(cs477))
Unrolling (r683 == rightHeight(cs452))
Unrolling (r722 == rightHeight(cs494))
Unrolling (r1032 == rightHeight(cs724))
Inlining (r990 == rank(cs260))
Unrolling (r1091 == rightHeight(cs759))
Unrolling (r862 == rightHeight(cs614))
Inlining (r941 == rank(e256))
Unrolling (r686 == rightHeight(cs456))
Unrolling (r799 == rightHeight(cs571))
Unrolling (r1159 == rightHeight(cs257))
Unrolling (r794 == rightHeight(cs565))
Inlining (r694 == rank(cs428))
Unrolling (r1127 == rightHeight(cs345))
Unrolling (r753 == rightHeight(cs413))
Unrolling (r938 == rightHeight(cs664))
Unrolling (r687 == rightHeight(cs459))
Unrolling (r1052 == rightHeight(cs231))
Unrolling (r1021 == rightHeight(cs418))
Unrolling (r782 == rightHeight(cs545))
Unrolling (r1108 == rightHeight(cs770))
Unrolling (r816 == rightHeight(cs584))
Unrolling (r662 == rightHeight(cs439))
Unrolling (r993 <=> hasLeftistProperty(cs700))
Inlining (r714 == rank(cs368))
Inlining (r936 == rank(cs402))
Unrolling (r780 == rightHeight(cs543))
Unrolling (r788 == rightHeight(cs555))
Unrolling (r902 == rightHeight(cs638))
Unrolling (r1094 == rightHeight(cs424))
Inlining (r929 == rank(cs313))
Unrolling (r1050 == rightHeight(cs231))
Unrolling (r1072 == rightHeight(cs748))
Unrolling (r1007 == rightHeight(cs252))
Unrolling (r1149 <=> hasLeftistProperty(cs260))
Unrolling (r804 == rightHeight(cs574))
Unrolling (r1069 <=> hasLeftistProperty(cs745))
Unrolling (r897 == rightHeight(cs637))
Inlining (r892 == rank(cs230))
Unrolling (r1011 == rightHeight(cs713))
Unrolling (r1010 == rightHeight(cs712))
Unrolling (r945 == rightHeight(cs668))
Unrolling (r811 == rightHeight(cs577))
Inlining (r767 == rank(h1))
Unrolling (r655 == rightHeight(cs434))
Inlining (r1111 == rank(cs338))
Unrolling (r879 == rightHeight(cs417))
Unrolling (r956 == rightHeight(cs677))
Inlining (r665 == rank(cs257))
Unrolling (r891 == rightHeight(cs633))
Unrolling (r703 == rightHeight(cs428))
Unrolling (r1141 <=> hasLeftistProperty(cs230))
Unrolling (r908 == rightHeight(cs646))
Unrolling (r899 == rightHeight(cs230))
Unrolling (r876 == rightHeight(cs622))
Unrolling (r1059 == rightHeight(cs342))
Inlining (r963 == rank(cs427))
Inlining (r700 == rank(cs428))
Unrolling (r1118 == rightHeight(cs777))
Unrolling (r839 == rightHeight(cs599))
Unrolling (r1070 <=> hasLeftistProperty(cs746))
Unrolling (r1140 == rightHeight(cs364))
Unrolling (r1104 == rightHeight(cs338))
Inlining (r864 == rank(cs341))
Unrolling (r1003 <=> hasLeftistProperty(cs707))
Unrolling (r1143 == rightHeight(cs318))
Unrolling (r765 == rightHeight(cs532))
Inlining (r921 == rank(cs423))
Inlining (r1081 == rank(cs267))
Unrolling (r966 == rightHeight(cs427))
Unrolling (r813 == rightHeight(cs580))
Unrolling (r1163 == rightHeight(h2))
Unrolling (r1080 == rightHeight(cs267))
Unrolling (r1133 <=> hasLeftistProperty(cs252))
Inlining (r949 == rank(e237))
Unrolling (r829 == rightHeight(cs591))
Unrolling (r843 <=> hasLeftistProperty(cs601))
Unrolling (r1040 <=> hasLeftistProperty(cs728))
Unrolling (r1088 == rightHeight(cs424))
Inlining (r1026 == rank(cs418))
Unrolling (r857 == rightHeight(cs607))
Unrolling (r685 == rightHeight(cs455))
Unrolling (r1161 <=> hasLeftistProperty(cs326))
Unrolling (r711 == rightHeight(cs481))
Unrolling (r992 <=> hasLeftistProperty(cs699))
Unrolling (r911 == rightHeight(cs649))
Unrolling (r719 == rightHeight(cs486))
Unrolling (r822 == rightHeight(cs588))
Unrolling (r768 == rightHeight(h1))
Unrolling (r798 == rightHeight(cs570))
Inlining (r980 == rank(cs414))
Inlining (r841 == rank(h2))
Inlining (r926 == rank(e223))
Unrolling (r1142 <=> hasLeftistProperty(cs318))
Unrolling (r983 == rightHeight(cs414))
Unrolling (r885 == rightHeight(cs417))
Unrolling (r733 == rightHeight(cs346))
Unrolling (r1119 == rightHeight(cs778))
Unrolling (r760 == rightHeight(cs525))
Unrolling (r939 == rightHeight(cs665))
Unrolling (r848 == rightHeight(h2))
Unrolling (r1029 == rightHeight(cs418))
Inlining (r982 == rank(cs414))
Unrolling (r988 == rightHeight(cs697))
Unrolling (r1086 == rightHeight(cs756))
Unrolling (r1039 <=> hasLeftistProperty(cs727))
Unrolling (r961 == rightHeight(cs680))
Unrolling (r744 == rightHeight(cs514))
Unrolling (r1144 == rightHeight(cs230))
Inlining (r657 == rank(cs257))
Unrolling (r727 == rightHeight(cs499))
Unrolling (r1082 == rightHeight(cs267))
Unrolling (r1147 == rightHeight(cs403))
Unrolling (r981 == rightHeight(cs414))
Unrolling (r964 == rightHeight(cs427))
Unrolling (r838 <=> hasLeftistProperty(cs598))
Unrolling (r784 == rightHeight(cs548))
Unrolling (r1025 == rightHeight(cs721))
Inlining (r928 == rank(e223))
Unrolling (r1009 <=> hasLeftistProperty(cs711))
Unrolling (r1085 == rightHeight(cs755))
Unrolling (r675 == rightHeight(cs447))
Unrolling (r1047 == rightHeight(cs733))
Unrolling (r706 == rightHeight(cs474))
Unrolling (r721 == rightHeight(cs488))
Unrolling (r969 == rightHeight(cs684))
Unrolling (r705 == rightHeight(cs472))
Inlining (r1006 == rank(cs252))
Unrolling (r994 == rightHeight(cs701))
Inlining (r853 == rank(e233))
Unrolling (r834 == rightHeight(cs594))
Unrolling (r1013 == rightHeight(cs252))
Unrolling (r660 <=> hasLeftistProperty(cs437))
Unrolling (r1157 <=> hasLeftistProperty(cs396))
Unrolling (r932 == rightHeight(cs661))
Inlining (r808 == rank(cs333))
Unrolling (r975 == rightHeight(cs414))
Inlining (r1020 == rank(cs418))
Unrolling (r770 <=> hasLeftistProperty(cs535))
Unrolling (r844 <=> hasLeftistProperty(cs602))
Inlining (r950 == rank(e237))
Unrolling (r922 == rightHeight(cs423))
Unrolling (r807 == rightHeight(cs333))
Unrolling (r1031 == rightHeight(cs723))
Unrolling (r739 == rightHeight(cs346))
Unrolling (r1115 == rightHeight(cs774))
Inlining (r1103 == rank(cs338))
Unrolling (r986 <=> hasLeftistProperty(cs695))
Inlining (r1128 == rank(cs345))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 4.145s
2: solved... in 0.006s
1: solved... in 0.173s
2: solved... in 0.006s
1: solved... in 3.872s
2: solved... in 0.006s
1: solved... in 4.223s
2: solved... in 0.007s
1: solved... in 3.463s
2: solved... in 0.007s
1: solved... in 4.529s
2: solved... in 0.006s
1: solved... in 5.226s
2: solved... in 0.007s
1: solved... in 1.859s
2: solved... in 0.007s
1: solved... in 6.085s
2: solved... in 0.007s
1: solved... in 6.295s
2: solved... in 0.008s
1: solved... in 6.851s
