After Depth Instrumentation: 
object BinaryTrie {
  case class Leaf() extends Tree

  sealed abstract class Tree

  case class Node(nvalue: Int, left: Tree, right: Tree) extends Tree

  sealed abstract class IList

  case class Cons(head: Int, tail: IList) extends IList

  case class Nil() extends IList

  def listSize(l : IList) : Int = {(l match {
    case Nil() =>
      0
    case Cons(x, xs) =>
      (1 + listSize(xs))
  })}

  def delete(inp : IList, t : Tree) : Tree = {(t match {
    case Leaf() =>
      (inp match {
        case Nil() =>
          Leaf()
        case Cons(x, xs) =>
          Leaf()
      })
    case Node(v, l, r) =>
      (inp match {
        case Nil() =>
          t
        case Cons(x, Nil()) =>
          if (((l == Leaf()) && (r == Leaf()))) {
            Leaf()
          } else {
            t
          }
        case Cons(x, xs @ Cons(y, _)) =>
          locally {
            val ch = if ((y > 0)) {
              l
            } else {
              r
            }
            locally {
              val newch = delete(xs, ch)
              if (((newch == Leaf()) && (((y > 0) && (r == Leaf())) || ((y <= 0) && (l == Leaf()))))) {
                Leaf()
              } else {
                if ((y > 0)) {
                  Node(v, newch, r)
                } else {
                  Node(v, l, newch)
                }
              }
            }
            
          }
          
        case _ =>
          t
      })
  })} ensuring(res => true)

  def insert(inp : IList, t : Tree) : Tree = {(t match {
    case Leaf() =>
      (inp match {
        case Nil() =>
          t
        case Cons(x, xs) =>
          locally {
            val newch = insert(xs, Leaf())
            (newch match {
              case Leaf() =>
                Node(x, Leaf(), Leaf())
              case Node(y, _, _) =>
                if ((y > 0)) {
                  Node(x, newch, Leaf())
                } else {
                  Node(y, Leaf(), newch)
                }
            })
          }
          
      })
    case Node(v, l, r) =>
      (inp match {
        case Nil() =>
          t
        case Cons(x, Nil()) =>
          t
        case Cons(x, xs @ Cons(y, _)) =>
          locally {
            val ch = if ((y > 0)) {
              l
            } else {
              r
            }
            if ((y > 0)) {
              Node(v, insert(xs, ch), r)
            } else {
              Node(v, l, insert(xs, ch))
            }
          }
          
        case _ =>
          t
      })
  })} ensuring(res => true)

  def find(inp : IList, t : Tree) : Tree = {(inp match {
    case Nil() =>
      t
    case Cons(x, Nil()) =>
      t
    case Cons(x, xs @ Cons(y, _)) =>
      (t match {
        case Leaf() =>
          t
        case Node(v, l, r) =>
          if ((y > 0)) {
            find(xs, l)
          } else {
            find(xs, r)
          }
      })
    case _ =>
      t
  })} ensuring(res => true)

  def create(inp : IList) : Tree = {insert(inp, Leaf())} ensuring(res => true)

  def height(t : Tree) : Int = {(t match {
    case Leaf() =>
      0
    case Node(x, l, r) =>
      locally {
        val hl = height(l)
        locally {
          val hr = height(r)
          if ((hl > hr)) {
            (hl + 1)
          } else {
            (hr + 1)
          }
        }
        
      }
      
  })}

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}
}

Defined fun: listSize
Defined fun: delete
Defined fun: insert
Defined fun: find
Defined fun: create
Defined fun: height
Defined fun: max
FunMap: Map(find -> find, insert -> insert, max -> max, delete -> delete, height -> height, create -> create, listSize -> listSize)
After Time Instrumentation: 
object BinaryTrie {
  case class Leaf() extends Tree

  sealed abstract class Tree

  case class Node(nvalue: Int, left: Tree, right: Tree) extends Tree

  sealed abstract class IList

  case class Cons(head: Int, tail: IList) extends IList

  case class Nil() extends IList

  def listSize(l : IList) : Int = {(l match {
    case Nil() =>
      0
    case Cons(x, xs) =>
      (1 + listSize(xs))
  })}

  def delete(inp : IList, t : Tree) : (Tree, Int) = {locally {
    val t135 = 1
    if (t.isInstanceOf[Leaf]) {
      locally {
        val (e130: Leaf, t136: Int) = locally {
          val t137 = 1
          if (inp.isInstanceOf[Nil]) {
            (Leaf(), (t137 + 1))
          } else {
            (Leaf(), (t137 + 1))
          }
        }
        
        (e130, (t135 + t136))
      }
      
    } else {
      locally {
        val (e135: Tree, t141: Int) = locally {
          val t142 = 1
          if (inp.isInstanceOf[Nil]) {
            (t, t142)
          } else {
            locally {
              val (e138: Tree, t144: Int) = locally {
                val t145 = 4
                if ((inp.isInstanceOf[Cons] && inp.tail.isInstanceOf[Nil])) {
                  locally {
                    val (e140: Tree, t146: Int) = locally {
                      val t147 = 7
                      if (((t.left == Leaf()) && (t.right == Leaf()))) {
                        (Leaf(), (t147 + 1))
                      } else {
                        (t, t147)
                      }
                    }
                    
                    (e140, (t145 + t146))
                  }
                  
                } else {
                  locally {
                    val (e152: Tree, t158: Int) = locally {
                      val t159 = 4
                      if ((inp.isInstanceOf[Cons] && inp.tail.isInstanceOf[Cons])) {
                        locally {
                          val (e154: Tree, t160: Int) = locally {
                            val (ir2: Tree, it2: Int) = locally {
                              val t162 = 3
                              if ((inp.tail.head > 0)) {
                                (t.left, (t162 + 1))
                              } else {
                                (t.right, (t162 + 1))
                              }
                            }
                            
                            locally {
                              val (r7: Tree, t161: Int) = locally {
                                val (ir3: Tree, it3: Int) = locally {
                                  val (e166: Tree, t174: Int) = delete(inp.tail, ir2)
                                  (e166, (1 + (1 + t174)))
                                }
                                
                                locally {
                                  val (r8: Tree, t171: Int) = locally {
                                    val t176 = 18
                                    if (((ir3 == Leaf()) && (((inp.tail.head > 0) && (t.right == Leaf())) || ((inp.tail.head <= 0) && (t.left == Leaf()))))) {
                                      (Leaf(), (t176 + 1))
                                    } else {
                                      locally {
                                        val (e170: Node, t178: Int) = locally {
                                          val t179 = 3
                                          if ((inp.tail.head > 0)) {
                                            (Node(t.nvalue, ir3, t.right), (t179 + 3))
                                          } else {
                                            (Node(t.nvalue, t.left, ir3), (t179 + 3))
                                          }
                                        }
                                        
                                        (e170, (t176 + t178))
                                      }
                                      
                                    }
                                  }
                                  
                                  (r8, (t171 + (it3 + 1)))
                                }
                                
                              }
                              
                              (r7, (t161 + (it2 + 1)))
                            }
                            
                          }
                          
                          (e154, (t159 + t160))
                        }
                        
                      } else {
                        (t, t159)
                      }
                    }
                    
                    (e152, (t145 + t158))
                  }
                  
                }
              }
              
              (e138, (t142 + t144))
            }
            
          }
        }
        
        (e135, (t135 + t141))
      }
      
    }
  }
  } ensuring(res11 => true)

  def insert(inp : IList, t : Tree) : (Tree, Int) = {locally {
    val t45 = 1
    if (t.isInstanceOf[Leaf]) {
      locally {
        val (e42: Tree, t46: Int) = locally {
          val t47 = 1
          if (inp.isInstanceOf[Nil]) {
            (t, t47)
          } else {
            locally {
              val (e45: Node, t49: Int) = locally {
                val (ir: Tree, it: Int) = locally {
                  val (e48: Tree, t53: Int) = insert(inp.tail, Leaf())
                  (e48, (1 + (1 + (1 + t53))))
                }
                
                locally {
                  val (r5: Node, t50: Int) = locally {
                    val t55 = 1
                    if (ir.isInstanceOf[Leaf]) {
                      (Node(inp.head, Leaf(), Leaf()), (t55 + 4))
                    } else {
                      locally {
                        val (e56: Node, t61: Int) = locally {
                          val t62 = 2
                          if ((ir.nvalue > 0)) {
                            (Node(inp.head, ir, Leaf()), (t62 + 3))
                          } else {
                            (Node(ir.nvalue, Leaf(), ir), (t62 + 3))
                          }
                        }
                        
                        (e56, (t55 + t61))
                      }
                      
                    }
                  }
                  
                  (r5, (t50 + (it + 1)))
                }
                
              }
              
              (e45, (t47 + t49))
            }
            
          }
        }
        
        (e42, (t45 + t46))
      }
      
    } else {
      locally {
        val (e73: Tree, t78: Int) = locally {
          val t79 = 1
          if (inp.isInstanceOf[Nil]) {
            (t, t79)
          } else {
            locally {
              val (e76: Tree, t81: Int) = locally {
                val t82 = 4
                if ((inp.isInstanceOf[Cons] && inp.tail.isInstanceOf[Nil])) {
                  (t, t82)
                } else {
                  locally {
                    val (e79: Tree, t84: Int) = locally {
                      val t85 = 4
                      if ((inp.isInstanceOf[Cons] && inp.tail.isInstanceOf[Cons])) {
                        locally {
                          val (e81: Node, t86: Int) = locally {
                            val (ir1: Tree, it1: Int) = locally {
                              val t88 = 3
                              if ((inp.tail.head > 0)) {
                                (t.left, (t88 + 1))
                              } else {
                                (t.right, (t88 + 1))
                              }
                            }
                            
                            locally {
                              val (r6: Node, t87: Int) = locally {
                                val t97 = 3
                                if ((inp.tail.head > 0)) {
                                  locally {
                                    val (e92: Node, t98: Int) = locally {
                                      val (e94: Tree, t100: Int) = locally {
                                        val (e99: Tree, t105: Int) = insert(inp.tail, ir1)
                                        (e99, (1 + (1 + t105)))
                                      }
                                      
                                      (Node(t.nvalue, e94, t.right), (1 + (t100 + 2)))
                                    }
                                    
                                    (e92, (t97 + t98))
                                  }
                                  
                                } else {
                                  locally {
                                    val (e102: Node, t108: Int) = locally {
                                      val (e105: Tree, t111: Int) = locally {
                                        val (e108: Tree, t114: Int) = insert(inp.tail, ir1)
                                        (e108, (1 + (1 + t114)))
                                      }
                                      
                                      (Node(t.nvalue, t.left, e105), (t111 + 3))
                                    }
                                    
                                    (e102, (t97 + t108))
                                  }
                                  
                                }
                              }
                              
                              (r6, (t87 + (it1 + 1)))
                            }
                            
                          }
                          
                          (e81, (t85 + t86))
                        }
                        
                      } else {
                        (t, t85)
                      }
                    }
                    
                    (e79, (t82 + t84))
                  }
                  
                }
              }
              
              (e76, (t79 + t81))
            }
            
          }
        }
        
        (e73, (t45 + t78))
      }
      
    }
  }
  } ensuring(res10 => true)

  def find(inp : IList, t : Tree) : (Tree, Int) = {locally {
    val t4 = 1
    if (inp.isInstanceOf[Nil]) {
      (t, t4)
    } else {
      locally {
        val (e2: Tree, t6: Int) = locally {
          val t7 = 4
          if ((inp.isInstanceOf[Cons] && inp.tail.isInstanceOf[Nil])) {
            (t, t7)
          } else {
            locally {
              val (e5: Tree, t9: Int) = locally {
                val t10 = 4
                if ((inp.isInstanceOf[Cons] && inp.tail.isInstanceOf[Cons])) {
                  locally {
                    val (e7: Tree, t11: Int) = locally {
                      val t12 = 1
                      if (t.isInstanceOf[Leaf]) {
                        (t, t12)
                      } else {
                        locally {
                          val (e10: Tree, t14: Int) = locally {
                            val t15 = 3
                            if ((inp.tail.head > 0)) {
                              locally {
                                val (e12: Tree, t16: Int) = locally {
                                  val (e15: Tree, t19: Int) = find(inp.tail, t.left)
                                  (e15, (1 + (1 + (1 + t19))))
                                }
                                
                                (e12, (t15 + t16))
                              }
                              
                            } else {
                              locally {
                                val (e18: Tree, t22: Int) = locally {
                                  val (e21: Tree, t25: Int) = find(inp.tail, t.right)
                                  (e21, (1 + (1 + (1 + t25))))
                                }
                                
                                (e18, (t15 + t22))
                              }
                              
                            }
                          }
                          
                          (e10, (t12 + t14))
                        }
                        
                      }
                    }
                    
                    (e7, (t10 + t11))
                  }
                  
                } else {
                  (t, t10)
                }
              }
              
              (e5, (t7 + t9))
            }
            
          }
        }
        
        (e2, (t4 + t6))
      }
      
    }
  }
  } ensuring(res9 => true)

  def create(inp : IList) : (Tree, Int) = {locally {
    val (e227: Tree, t235: Int) = insert(inp, Leaf())
    (e227, (1 + (1 + t235)))
  }
  } ensuring(res12 => true)

  def height(t : Tree) : Int = {(t match {
    case Leaf() =>
      0
    case Node(x, l, r) =>
      locally {
        val hl = height(l)
        locally {
          val hr = height(r)
          if ((hl > hr)) {
            (hl + 1)
          } else {
            (hr + 1)
          }
        }
        
      }
      
  })}

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}
}

New Prog: 
object BinaryTrie {
  case class Leaf() extends Tree

  sealed abstract class Tree

  case class Node(nvalue: Int, left: Tree, right: Tree) extends Tree

  sealed abstract class IList

  case class Cons(head: Int, tail: IList) extends IList

  case class Nil() extends IList

  def listSize(l : IList) : Int = {(l match {
    case Nil() =>
      0
    case Cons(x, xs) =>
      (1 + listSize(xs))
  })}

  def delete(inp : IList, t : Tree) : (Tree, Int) = {if (t.isInstanceOf[Leaf]) {
    locally {
      val (e130: Leaf, t136: Int) = if (inp.isInstanceOf[Nil]) {
        (Leaf(), (1 + 1))
      } else {
        (Leaf(), (1 + 1))
      }
      (e130, (1 + t136))
    }
    
  } else {
    locally {
      val (e135: Tree, t141: Int) = if (inp.isInstanceOf[Nil]) {
        (t, 1)
      } else {
        locally {
          val (e138: Tree, t144: Int) = if ((inp.isInstanceOf[Cons] && inp.tail.isInstanceOf[Nil])) {
            locally {
              val (e140: Tree, t146: Int) = if (((t.left == Leaf()) && (t.right == Leaf()))) {
                (Leaf(), (7 + 1))
              } else {
                (t, 7)
              }
              (e140, (4 + t146))
            }
            
          } else {
            locally {
              val (e152: Tree, t158: Int) = if ((inp.isInstanceOf[Cons] && inp.tail.isInstanceOf[Cons])) {
                locally {
                  val (e154: Tree, t160: Int) = locally {
                    val (ir2: Tree, it2: Int) = if ((inp.tail.head > 0)) {
                      (t.left, (3 + 1))
                    } else {
                      (t.right, (3 + 1))
                    }
                    locally {
                      val (r7: Tree, t161: Int) = locally {
                        val (ir3: Tree, it3: Int) = locally {
                          val (e166: Tree, t174: Int) = delete(inp.tail, ir2)
                          (e166, (1 + (1 + t174)))
                        }
                        
                        locally {
                          val (r8: Tree, t171: Int) = if (((ir3 == Leaf()) && (((inp.tail.head > 0) && (t.right == Leaf())) || ((inp.tail.head <= 0) && (t.left == Leaf()))))) {
                            (Leaf(), (18 + 1))
                          } else {
                            locally {
                              val (e170: Node, t178: Int) = if ((inp.tail.head > 0)) {
                                (Node(t.nvalue, ir3, t.right), (3 + 3))
                              } else {
                                (Node(t.nvalue, t.left, ir3), (3 + 3))
                              }
                              (e170, (18 + t178))
                            }
                            
                          }
                          (r8, (t171 + (it3 + 1)))
                        }
                        
                      }
                      
                      (r7, (t161 + (it2 + 1)))
                    }
                    
                  }
                  
                  (e154, (4 + t160))
                }
                
              } else {
                (t, 4)
              }
              (e152, (4 + t158))
            }
            
          }
          (e138, (1 + t144))
        }
        
      }
      (e135, (1 + t141))
    }
    
  }} ensuring(res11 => true)

  def insert(inp : IList, t : Tree) : (Tree, Int) = {if (t.isInstanceOf[Leaf]) {
    locally {
      val (e42: Tree, t46: Int) = if (inp.isInstanceOf[Nil]) {
        (t, 1)
      } else {
        locally {
          val (e45: Node, t49: Int) = locally {
            val (ir: Tree, it: Int) = locally {
              val (e48: Tree, t53: Int) = insert(inp.tail, Leaf())
              (e48, (1 + (1 + (1 + t53))))
            }
            
            locally {
              val (r5: Node, t50: Int) = if (ir.isInstanceOf[Leaf]) {
                (Node(inp.head, Leaf(), Leaf()), (1 + 4))
              } else {
                locally {
                  val (e56: Node, t61: Int) = if ((ir.nvalue > 0)) {
                    (Node(inp.head, ir, Leaf()), (2 + 3))
                  } else {
                    (Node(ir.nvalue, Leaf(), ir), (2 + 3))
                  }
                  (e56, (1 + t61))
                }
                
              }
              (r5, (t50 + (it + 1)))
            }
            
          }
          
          (e45, (1 + t49))
        }
        
      }
      (e42, (1 + t46))
    }
    
  } else {
    locally {
      val (e73: Tree, t78: Int) = if (inp.isInstanceOf[Nil]) {
        (t, 1)
      } else {
        locally {
          val (e76: Tree, t81: Int) = if ((inp.isInstanceOf[Cons] && inp.tail.isInstanceOf[Nil])) {
            (t, 4)
          } else {
            locally {
              val (e79: Tree, t84: Int) = if ((inp.isInstanceOf[Cons] && inp.tail.isInstanceOf[Cons])) {
                locally {
                  val (e81: Node, t86: Int) = locally {
                    val (ir1: Tree, it1: Int) = if ((inp.tail.head > 0)) {
                      (t.left, (3 + 1))
                    } else {
                      (t.right, (3 + 1))
                    }
                    locally {
                      val (r6: Node, t87: Int) = if ((inp.tail.head > 0)) {
                        locally {
                          val (e92: Node, t98: Int) = locally {
                            val (e94: Tree, t100: Int) = locally {
                              val (e99: Tree, t105: Int) = insert(inp.tail, ir1)
                              (e99, (1 + (1 + t105)))
                            }
                            
                            (Node(t.nvalue, e94, t.right), (1 + (t100 + 2)))
                          }
                          
                          (e92, (3 + t98))
                        }
                        
                      } else {
                        locally {
                          val (e102: Node, t108: Int) = locally {
                            val (e105: Tree, t111: Int) = locally {
                              val (e108: Tree, t114: Int) = insert(inp.tail, ir1)
                              (e108, (1 + (1 + t114)))
                            }
                            
                            (Node(t.nvalue, t.left, e105), (t111 + 3))
                          }
                          
                          (e102, (3 + t108))
                        }
                        
                      }
                      (r6, (t87 + (it1 + 1)))
                    }
                    
                  }
                  
                  (e81, (4 + t86))
                }
                
              } else {
                (t, 4)
              }
              (e79, (4 + t84))
            }
            
          }
          (e76, (1 + t81))
        }
        
      }
      (e73, (1 + t78))
    }
    
  }} ensuring(res10 => true)

  def find(inp : IList, t : Tree) : (Tree, Int) = {if (inp.isInstanceOf[Nil]) {
    (t, 1)
  } else {
    locally {
      val (e2: Tree, t6: Int) = if ((inp.isInstanceOf[Cons] && inp.tail.isInstanceOf[Nil])) {
        (t, 4)
      } else {
        locally {
          val (e5: Tree, t9: Int) = if ((inp.isInstanceOf[Cons] && inp.tail.isInstanceOf[Cons])) {
            locally {
              val (e7: Tree, t11: Int) = if (t.isInstanceOf[Leaf]) {
                (t, 1)
              } else {
                locally {
                  val (e10: Tree, t14: Int) = if ((inp.tail.head > 0)) {
                    locally {
                      val (e12: Tree, t16: Int) = locally {
                        val (e15: Tree, t19: Int) = find(inp.tail, t.left)
                        (e15, (1 + (1 + (1 + t19))))
                      }
                      
                      (e12, (3 + t16))
                    }
                    
                  } else {
                    locally {
                      val (e18: Tree, t22: Int) = locally {
                        val (e21: Tree, t25: Int) = find(inp.tail, t.right)
                        (e21, (1 + (1 + (1 + t25))))
                      }
                      
                      (e18, (3 + t22))
                    }
                    
                  }
                  (e10, (1 + t14))
                }
                
              }
              (e7, (4 + t11))
            }
            
          } else {
            (t, 4)
          }
          (e5, (4 + t9))
        }
        
      }
      (e2, (1 + t6))
    }
    
  }} ensuring(res9 => true)

  def create(inp : IList) : (Tree, Int) = {locally {
    val (e227: Tree, t235: Int) = insert(inp, Leaf())
    (e227, (1 + (1 + t235)))
  }
  } ensuring(res12 => true)

  def height(t : Tree) : Int = {(t match {
    case Leaf() =>
      0
    case Node(x, l, r) =>
      locally {
        val hl = height(l)
        locally {
          val hr = height(r)
          if ((hl > hr)) {
            (hl + 1)
          } else {
            (hr + 1)
          }
        }
        
      }
      
  })}

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}
}

Function: delete template --> (res11._2 ≤ ((a?3 * listSize(inp)) + c?3))
Function: insert template --> (res10._2 ≤ ((a?1 * listSize(inp)) + c?1))
Function: find template --> (res9._2 ≤ ((a? * listSize(inp)) + c?))
Function: create template --> (res12._2 ≤ ((a?2 * listSize(inp)) + c?2))
[[34m Info  [0m] Running Invariant Inference Phase...
[[34m Info  [0m] Analysis Order: List(listSize, height, delete, insert, create, find)
[[34m Info  [0m] - considering function delete...
[[34m Info  [0m] Body: if (t.isInstanceOf[Leaf])
            (let (e130,t136 := if (inp.isInstanceOf[Nil])
              (Leaf(), (1 + 1))
            else
              (Leaf(), (1 + 1))) in
              (e130, (1 + t136)))
          else
            (let (e135,t141 := if (inp.isInstanceOf[Nil])
              (t, 1)
            else
              (let (e138,t144 := if ((inp.isInstanceOf[Cons] ∧ inp.tail.isInstanceOf[Nil]))
                (let (e140,t146 := if (((t.left == Leaf()) ∧ (t.right == Leaf())))
                  (Leaf(), (7 + 1))
                else
                  (t, 7)) in
                  (e140, (4 + t146)))
              else
                (let (e152,t158 := if ((inp.isInstanceOf[Cons] ∧ inp.tail.isInstanceOf[Cons]))
                  (let (e154,t160 := (let (ir2,it2 := if ((inp.tail.head > 0))
                    (t.left, (3 + 1))
                  else
                    (t.right, (3 + 1))) in
                    (let (r7,t161 := (let (ir3,it3 := (let (e166,t174 := delete(inp.tail, ir2)) in
                      (e166, (1 + (1 + t174))))) in
                      (let (r8,t171 := if (((ir3 == Leaf()) ∧ (((inp.tail.head > 0) ∧ (t.right == Leaf())) ∨ ((inp.tail.head ≤ 0) ∧ (t.left == Leaf())))))
                        (Leaf(), (18 + 1))
                      else
                        (let (e170,t178 := if ((inp.tail.head > 0))
                          (Node(t.nvalue, ir3, t.right), (3 + 3))
                        else
                          (Node(t.nvalue, t.left, ir3), (3 + 3))) in
                          (e170, (18 + t178)))) in
                        (r8, (t171 + (it3 + 1)))))) in
                      (r7, (t161 + (it2 + 1)))))) in
                    (e154, (4 + t160)))
                else
                  (t, 4)) in
                  (e152, (4 + t158)))) in
                (e138, (1 + t144)))) in
              (e135, (1 + t141)))
[[34m Info  [0m] Post: true
falttened Body: ((res11 == ifres) && ((ci && (ci == t.isInstanceOf[Leaf]) && (ifres == tp) && (arg == (1 + t136)) && (tp == (e130, arg)) && ((ci1 && (ci1 == inp.isInstanceOf[Nil]) && (ifres1 == tp1) && (cc == Leaf()) && (arg1 == (1 + 1)) && (tp1 == (cc, arg1))) || (!(ci2) && (ci2 == inp.isInstanceOf[Nil]) && (ifres1 == tp2) && (cc1 == Leaf()) && (arg2 == (1 + 1)) && (tp2 == (cc1, arg2)))) && (e130 == ts) && (ts == ifres1._1) && (t136 == ts1) && (ts1 == ifres1._2)) || (!(ci3) && (ci3 == t.isInstanceOf[Leaf]) && (ifres == tp3) && (arg3 == (1 + t141)) && (tp3 == (e135, arg3)) && ((ci4 && (ci4 == inp.isInstanceOf[Nil]) && (ifres2 == tp4) && (arg4 == 1) && (tp4 == (t, arg4))) || (!(ci5) && (ci5 == inp.isInstanceOf[Nil]) && (ifres2 == tp5) && (arg5 == (1 + t144)) && (tp5 == (e138, arg5)) && ((ci6 && (ci6 == inp.isInstanceOf[Cons]) && ci7 && (cs == inp.tail) && (ci7 == cs.isInstanceOf[Nil]) && (ifres3 == tp6) && (arg6 == (4 + t146)) && (tp6 == (e140, arg6)) && (((cs1 == cc2) && (cs1 == t.left) && (cc2 == Leaf()) && (cs2 == cc3) && (cs2 == t.right) && (cc3 == Leaf()) && (ifres4 == tp7) && (cc4 == Leaf()) && (arg7 == (7 + 1)) && (tp7 == (cc4, arg7))) || ((((cs3 != cc5) && (cs3 == t.left) && (cc5 == Leaf())) || ((cs4 != cc6) && (cs4 == t.right) && (cc6 == Leaf()))) && (ifres4 == tp8) && (arg8 == 7) && (tp8 == (t, arg8)))) && (e140 == ts2) && (ts2 == ifres4._1) && (t146 == ts3) && (ts3 == ifres4._2)) || (((!(ci8) && (ci8 == inp.isInstanceOf[Cons])) || (!(ci9) && (cs5 == inp.tail) && (ci9 == cs5.isInstanceOf[Nil]))) && (ifres3 == tp9) && (arg9 == (4 + t158)) && (tp9 == (e152, arg9)) && ((ci10 && (ci10 == inp.isInstanceOf[Cons]) && ci11 && (cs6 == inp.tail) && (ci11 == cs6.isInstanceOf[Cons]) && (ifres5 == tp10) && (arg10 == (4 + t160)) && (tp10 == (e154, arg10)) && (e154 == r7) && (((cs8 > 0) && (cs7 == inp.tail) && (cs8 == cs7.head) && (ifres8 == tp11) && (cs9 == t.left) && (arg11 == (3 + 1)) && (tp11 == (cs9, arg11))) || ((cs11 <= 0) && (cs10 == inp.tail) && (cs11 == cs10.head) && (ifres8 == tp12) && (cs12 == t.right) && (arg12 == (3 + 1)) && (tp12 == (cs12, arg12)))) && (ir3 == e166) && (e166 == ts4) && (ts4 == tres._1) && (t174 == ts5) && (ts5 == tres._2) && (ir2 == ts6) && (ts6 == ifres8._1) && (t161 == (t171 + (it3 + 1))) && (r7 == r8) && (it2 == ts7) && (ts7 == ifres8._2) && (r8 == ts8) && (ts8 == ifres6._1) && (((ir3 == cc7) && (cc7 == Leaf()) && (((cs14 > 0) && (cs13 == inp.tail) && (cs14 == cs13.head) && (cs15 == cc8) && (cs15 == t.right) && (cc8 == Leaf())) || ((cs17 <= 0) && (cs16 == inp.tail) && (cs17 == cs16.head) && (cs18 == cc9) && (cs18 == t.left) && (cc9 == Leaf()))) && (ifres6 == tp13) && (cc10 == Leaf()) && (arg13 == (18 + 1)) && (tp13 == (cc10, arg13))) || ((((ir3 != cc11) && (cc11 == Leaf())) || ((((cs20 <= 0) && (cs19 == inp.tail) && (cs20 == cs19.head)) || ((cs21 != cc12) && (cs21 == t.right) && (cc12 == Leaf()))) && (((cs23 > 0) && (cs22 == inp.tail) && (cs23 == cs22.head)) || ((cs24 != cc13) && (cs24 == t.left) && (cc13 == Leaf()))))) && (ifres6 == tp14) && (arg14 == (18 + t178)) && (tp14 == (e170, arg14)) && (((cs26 > 0) && (cs25 == inp.tail) && (cs26 == cs25.head) && (ifres7 == tp15) && (tp15 == (cc14, arg15)) && (cs28 == t.right) && (arg15 == (3 + 3)) && (cs27 == t.nvalue) && (cc14 == Node(cs27, ir3, cs28))) || ((cs30 <= 0) && (cs29 == inp.tail) && (cs30 == cs29.head) && (ifres7 == tp16) && (cs31 == t.nvalue) && (tp16 == (cc15, arg16)) && (cc15 == Node(cs31, cs32, ir3)) && (arg16 == (3 + 3)) && (cs32 == t.left))) && (e170 == ts9) && (ts9 == ifres7._1) && (t178 == ts10) && (ts10 == ifres7._2))) && (t160 == (t161 + (it2 + 1))) && (it3 == (1 + (1 + t174))) && (t171 == ts11) && (ts11 == ifres6._2) && (tres == r9) && (cs33 == inp.tail) && (r9 == delete(cs33, ir2))) || (((!(ci12) && (ci12 == inp.isInstanceOf[Cons])) || (!(ci13) && (cs34 == inp.tail) && (ci13 == cs34.isInstanceOf[Cons]))) && (ifres5 == tp17) && (arg17 == 4) && (tp17 == (t, arg17)))) && (e152 == ts12) && (ts12 == ifres5._1) && (t158 == ts13) && (ts13 == ifres5._2))) && (e138 == ts14) && (ts14 == ifres3._1) && (t144 == ts15) && (ts15 == ifres3._2))) && (e135 == ts16) && (ts16 == ifres2._1) && (t141 == ts17) && (ts17 == ifres2._2))))
Flattened Post: ((ts18 > ((a?3 * r10) + c?3)) && (ts18 == res11._2) && (r10 == listSize(inp)))
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.131s
2: solved... in 0.149s
1: solved... in 0.025s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.006s
1: solved... in 0.019s
2: solved... in 0.007s
1: solved... in 0.018s
2: solved... in 0.006s
1: solved... in 0.02s
2: solved... in 0.008s
1: solved... in 0.019s
2: solved... in 0.008s
1: solved... in 0.019s
2: solved... in 0.008s
1: solved... in 0.017s
2: solved... in 0.007s
1: solved... in 0.016s
2: solved... in 0.006s
1: solved... in 0.016s
2: solved... in 0.007s
1: solved... in 0.016s
2: solved... in 0.008s
1: solved... in 0.018s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.015s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.02s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.009s
1: solved... in 0.013s
2: solved... in 0.007s
1: solved... in 0.013s
2: solved... in 0.007s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.018s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.008s
1: solved... in 0.012s
2: solved... in 0.008s
1: solved... in 0.012s
2: solved... in 0.008s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.013s
2: solved... in 0.009s
1: solved... in 0.013s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.02s
2: solved... in 0.008s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.008s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.013s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.013s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.013s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.017s
2: solved... in 0.011s
1: solved... in 0.015s
2: solved... in 0.011s
1: solved... in 0.013s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.013s
2: solved... in 0.01s
1: solved... in 0.013s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.013s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.015s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.014s
1: solved... in 0.015s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.013s
2: solved... in 0.011s
1: solved... in 0.013s
2: solved... in 0.011s
1: solved... in 0.013s
2: solved... in 0.012s
1: solved... in 0.013s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.013s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.013s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.012s
1: solved... in 0.012s
2: solved... in 0.013s
1: solved... in 0.012s
2: solved... in 0.012s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 2/2
Unrolled calls: Set((r9 == delete(cs33, ir2)), (r10 == listSize(inp)))
Unrolling (r9 == delete(cs33, ir2))
Creating VC for listSize
[[34m Info  [0m] - Number of new terms enumerated: 2
[[34m Info  [0m] - Template generated for function listSize : (((a?170 * #res) + a?169) ≤ 0)
Unrolling (r10 == listSize(inp))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.029s
2: solved... in 0.006s
1: solved... in 0.021s
2: solved... in 0.006s
1: solved... in 0.023s
2: solved... in 0.006s
1: solved... in 0.026s
2: solved... in 0.006s
1: solved... in 0.027s
2: solved... in 0.007s
1: solved... in 0.026s
2: solved... in 0.006s
1: solved... in 0.021s
2: solved... in 0.006s
1: solved... in 0.021s
2: solved... in 0.006s
1: solved... in 0.021s
2: solved... in 0.006s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.006s
1: solved... in 0.022s
2: solved... in 0.007s
1: solved... in 0.022s
2: solved... in 0.006s
1: solved... in 0.023s
2: solved... in 0.006s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.022s
2: solved... in 0.006s
1: solved... in 0.021s
2: solved... in 0.006s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.022s
2: solved... in 0.007s
1: solved... in 0.02s
2: solved... in 0.007s
1: solved... in 0.02s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.006s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.022s
2: solved... in 0.008s
1: solved... in 0.022s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.022s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.028s
2: solved... in 0.009s
1: solved... in 0.022s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.022s
2: solved... in 0.008s
1: solved... in 0.024s
2: solved... in 0.011s
1: solved... in 0.022s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.02s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.022s
2: solved... in 0.008s
1: solved... in 0.023s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.022s
2: solved... in 0.009s
1: solved... in 0.022s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.02s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.011s
1: solved... in 0.022s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.02s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.02s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.01s
1: solved... in 0.023s
2: solved... in 0.009s
1: solved... in 0.029s
2: solved... in 0.009s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.026s
2: solved... in 0.009s
1: solved... in 0.022s
2: solved... in 0.01s
1: solved... in 0.022s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.013s
1: solved... in 0.021s
2: solved... in 0.01s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.02s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.011s
1: solved... in 0.022s
2: solved... in 0.012s
1: solved... in 0.021s
2: solved... in 0.01s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.01s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.01s
1: solved... in 0.024s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.012s
1: solved... in 0.021s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.013s
1: solved... in 0.021s
2: solved... in 0.011s
1: solved... in 0.023s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.01s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.021s
2: solved... in 0.011s
1: solved... in 0.019s
2: solved... in 0.01s
1: solved... in 0.023s
2: solved... in 0.013s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.019s
2: solved... in 0.013s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.013s
1: solved... in 0.024s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.021s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.012s
1: solved... in 0.021s
2: solved... in 0.011s
1: solved... in 0.023s
2: solved... in 0.011s
1: solved... in 0.024s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.022s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.019s
2: solved... in 0.012s
1: solved... in 0.019s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.013s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.019s
2: solved... in 0.012s
1: solved... in 0.02s
2: solved... in 0.012s
1: solved... in 0.021s
2: solved... in 0.012s
1: solved... in 0.021s
2: solved... in 0.012s
1: solved... in 0.021s
2: solved... in 0.012s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.021s
2: solved... in 0.012s
1: solved... in 0.02s
2: solved... in 0.012s
1: solved... in 0.02s
2: solved... in 0.012s
1: solved... in 0.019s
2: solved... in 0.012s
1: solved... in 0.021s
2: solved... in 0.013s
1: solved... in 0.02s
2: solved... in 0.012s
1: solved... in 0.02s
2: solved... in 0.012s
1: solved... in 0.02s
2: solved... in 0.014s
1: solved... in 0.02s
2: solved... in 0.012s
1: solved... in 0.023s
2: solved... in 0.012s
1: solved... in 0.02s
2: solved... in 0.015s
1: solved... in 0.02s
2: solved... in 0.012s
1: solved... in 0.022s
2: solved... in 0.013s
1: solved... in 0.021s
2: solved... in 0.015s
1: solved... in 0.02s
2: solved... in 0.012s
1: solved... in 0.022s
2: solved... in 0.012s
1: solved... in 0.02s
2: solved... in 0.015s
1: solved... in 0.02s
2: solved... in 0.012s
1: solved... in 0.024s
2: solved... in 0.013s
1: solved... in 0.021s
2: solved... in 0.012s
1: solved... in 0.019s
2: solved... in 0.015s
1: solved... in 0.021s
2: solved... in 0.012s
1: solved... in 0.022s
2: solved... in 0.013s
1: solved... in 0.02s
2: solved... in 0.015s
1: solved... in 0.02s
2: solved... in 0.012s
1: solved... in 0.021s
2: solved... in 0.012s
1: solved... in 0.02s
2: solved... in 0.016s
1: solved... in 0.02s
2: solved... in 0.013s
1: solved... in 0.021s
2: solved... in 0.014s
1: solved... in 0.021s
2: solved... in 0.016s
1: solved... in 0.02s
2: solved... in 0.012s
1: solved... in 0.021s
2: solved... in 0.012s
1: solved... in 0.02s
2: solved... in 0.013s
1: solved... in 0.021s
2: solved... in 0.014s
1: solved... in 0.023s
2: solved... in 0.014s
1: solved... in 0.02s
2: solved... in 0.014s
1: solved... in 0.02s
2: solved... in 0.013s
1: solved... in 0.027s
2: solved... in 0.014s
1: solved... in 0.02s
2: solved... in 0.014s
1: solved... in 0.02s
2: solved... in 0.014s
1: solved... in 0.025s
2: solved... in 0.014s
1: solved... in 0.021s
2: solved... in 0.014s
1: solved... in 0.02s
2: solved... in 0.016s
1: solved... in 0.02s
2: solved... in 0.014s
1: solved... in 0.025s
2: solved... in 0.014s
1: solved... in 0.025s
2: solved... in 0.014s
1: solved... in 0.021s
2: solved... in 0.014s
1: solved... in 0.02s
2: solved... in 0.015s
1: solved... in 0.021s
2: solved... in 0.014s
1: solved... in 0.02s
2: solved... in 0.014s
1: solved... in 0.023s
2: solved... in 0.018s
1: solved... in 0.021s
2: solved... in 0.015s
1: solved... in 0.02s
2: solved... in 0.015s
1: solved... in 0.02s
2: solved... in 0.017s
1: solved... in 0.02s
2: solved... in 0.013s
1: solved... in 0.026s
2: solved... in 0.014s
1: solved... in 0.02s
2: solved... in 0.015s
1: solved... in 0.021s
2: solved... in 0.015s
1: solved... in 0.023s
2: solved... in 0.016s
1: solved... in 0.02s
2: solved... in 0.014s
1: solved... in 0.023s
2: solved... in 0.019s
1: solved... in 0.02s
2: solved... in 0.015s
1: solved... in 0.023s
2: solved... in 0.015s
1: solved... in 0.02s
2: solved... in 0.014s
1: solved... in 0.021s
2: solved... in 0.014s
1: solved... in 0.026s
2: solved... in 0.015s
1: solved... in 0.02s
2: solved... in 0.015s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.015s
1: solved... in 0.021s
2: solved... in 0.014s
1: solved... in 0.023s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.016s
1: solved... in 0.023s
2: solved... in 0.016s
1: solved... in 0.02s
2: solved... in 0.015s
1: solved... in 0.02s
2: solved... in 0.016s
1: solved... in 0.023s
2: solved... in 0.015s
1: solved... in 0.02s
2: solved... in 0.016s
1: solved... in 0.021s
2: solved... in 0.019s
1: solved... in 0.021s
2: solved... in 0.015s
1: solved... in 0.023s
2: solved... in 0.014s
1: solved... in 0.023s
2: solved... in 0.015s
1: solved... in 0.02s
2: solved... in 0.016s
1: solved... in 0.021s
2: solved... in 0.016s
1: solved... in 0.021s
2: solved... in 0.015s
1: solved... in 0.021s
2: solved... in 0.019s
1: solved... in 0.024s
2: solved... in 0.016s
1: solved... in 0.023s
2: solved... in 0.017s
1: solved... in 0.021s
2: solved... in 0.016s
1: solved... in 0.02s
2: solved... in 0.019s
1: solved... in 0.021s
2: solved... in 0.016s
1: solved... in 0.026s
2: solved... in 0.016s
1: solved... in 0.02s
2: solved... in 0.016s
1: solved... in 0.025s
2: solved... in 0.016s
1: solved... in 0.021s
2: solved... in 0.016s
1: solved... in 0.02s
2: solved... in 0.015s
1: solved... in 0.023s
2: solved... in 0.019s
1: solved... in 0.021s
2: solved... in 0.016s
1: solved... in 0.024s
2: solved... in 0.016s
1: solved... in 0.02s
2: solved... in 0.017s
1: solved... in 0.021s
2: solved... in 0.016s
1: solved... in 0.024s
2: solved... in 0.017s
1: solved... in 0.021s
2: solved... in 0.017s
1: solved... in 0.021s
2: solved... in 0.019s
1: solved... in 0.02s
2: solved... in 0.016s
1: solved... in 0.023s
2: solved... in 0.015s
1: solved... in 0.023s
2: solved... in 0.017s
1: solved... in 0.02s
2: solved... in 0.017s
1: solved... in 0.021s
2: solved... in 0.018s
1: solved... in 0.021s
2: solved... in 0.016s
1: solved... in 0.021s
2: solved... in 0.019s
1: solved... in 0.034s
2: solved... in 0.017s
1: solved... in 0.021s
2: solved... in 0.017s
1: solved... in 0.02s
2: solved... in 0.017s
1: solved... in 0.021s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.016s
1: solved... in 0.026s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.017s
1: solved... in 0.021s
2: solved... in 0.016s
1: solved... in 0.023s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.017s
1: solved... in 0.025s
2: solved... in 0.018s
1: solved... in 0.022s
2: solved... in 0.018s
1: solved... in 0.021s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.017s
1: solved... in 0.023s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.016s
1: solved... in 0.026s
2: solved... in 0.018s
1: solved... in 0.021s
2: solved... in 0.019s
1: solved... in 0.02s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.017s
1: solved... in 0.02s
2: solved... in 0.017s
1: solved... in 0.023s
2: solved... in 0.019s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.023s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.023s
2: solved... in 0.018s
1: solved... in 0.022s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.021s
2: solved... in 0.017s
1: solved... in 0.02s
2: solved... in 0.017s
1: solved... in 0.023s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.019s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.021s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.017s
1: solved... in 0.023s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.019s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.021s
2: solved... in 0.017s
1: solved... in 0.024s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.019s
1: solved... in 0.021s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.023s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.019s
1: solved... in 0.021s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.023s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.019s
1: solved... in 0.019s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.017s
1: solved... in 0.024s
2: solved... in 0.019s
1: solved... in 0.02s
2: solved... in 0.019s
1: solved... in 0.02s
2: solved... in 0.019s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.023s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.019s
1: solved... in 0.02s
2: solved... in 0.022s
1: solved... in 0.021s
2: solved... in 0.021s
1: solved... in 0.021s
2: solved... in 0.018s
1: solved... in 0.023s
2: solved... in 0.021s
1: solved... in 0.023s
2: solved... in 0.02s
1: solved... in 0.021s
2: solved... in 0.019s
1: solved... in 0.02s
2: solved... in 0.019s
1: solved... in 0.02s
2: solved... in 0.018s
1: solved... in 0.023s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.02s
1: solved... in 0.021s
2: solved... in 0.02s
1: solved... in 0.021s
2: solved... in 0.019s
1: solved... in 0.024s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.019s
1: solved... in 0.021s
2: solved... in 0.025s
1: solved... in 0.02s
2: solved... in 0.019s
1: solved... in 0.023s
2: solved... in 0.021s
1: solved... in 0.02s
2: solved... in 0.02s
1: solved... in 0.021s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.019s
1: solved... in 0.02s
2: solved... in 0.019s
1: solved... in 0.023s
2: solved... in 0.021s
1: solved... in 0.02s
2: solved... in 0.021s
1: solved... in 0.02s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.019s
1: solved... in 0.023s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.02s
1: solved... in 0.023s
2: solved... in 0.02s
1: solved... in 0.021s
2: solved... in 0.019s
1: solved... in 0.023s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.021s
1: solved... in 0.02s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.021s
1: solved... in 0.02s
2: solved... in 0.019s
1: solved... in 0.023s
2: solved... in 0.022s
1: solved... in 0.021s
2: solved... in 0.021s
1: solved... in 0.021s
2: solved... in 0.021s
1: solved... in 0.02s
2: solved... in 0.021s
1: solved... in 0.02s
2: solved... in 0.02s
1: solved... in 0.023s
2: solved... in 0.023s
1: solved... in 0.02s
2: solved... in 0.021s
1: solved... in 0.02s
2: solved... in 0.022s
1: solved... in 0.021s
2: solved... in 0.021s
1: solved... in 0.021s
2: solved... in 0.019s
1: solved... in 0.023s
2: solved... in 0.021s
1: solved... in 0.02s
2: solved... in 0.026s
1: solved... in 0.02s
2: solved... in 0.022s
1: solved... in 0.02s
2: solved... in 0.02s
1: solved... in 0.02s
2: solved... in 0.02s
1: solved... in 0.023s
2: solved... in 0.023s
1: solved... in 0.02s
2: solved... in 0.021s
1: solved... in 0.02s
2: solved... in 0.022s
1: solved... in 0.02s
2: solved... in 0.021s
1: solved... in 0.02s
2: solved... in 0.02s
1: solved... in 0.023s
2: solved... in 0.021s
1: solved... in 0.02s
2: solved... in 0.022s
1: solved... in 0.02s
2: solved... in 0.022s
1: solved... in 0.02s
2: solved... in 0.021s
1: solved... in 0.022s
2: solved... in 0.02s
1: solved... in 0.023s
2: solved... in 0.022s
1: solved... in 0.021s
2: solved... in 0.022s
1: solved... in 0.02s
2: solved... in 0.022s
1: solved... in 0.02s
2: solved... in 0.022s
1: solved... in 0.02s
2: solved... in 0.02s
1: solved... in 0.024s
2: solved... in 0.023s
1: solved... in 0.02s
2: solved... in 0.022s
1: solved... in 0.02s
2: solved... in 0.022s
1: solved... in 0.02s
2: solved... in 0.024s
1: solved... in 0.021s
2: solved... in 0.02s
1: solved... in 0.023s
2: solved... in 0.022s
1: solved... in 0.02s
2: solved... in 0.022s
1: solved... in 0.02s
2: solved... in 0.022s
1: solved... in 0.021s
2: solved... in 0.024s
1: solved... in 0.02s
2: solved... in 0.021s
1: solved... in 0.023s
2: solved... in 0.022s
1: solved... in 0.02s
2: solved... in 0.023s
1: solved... in 0.02s
2: solved... in 0.023s
1: solved... in 0.02s
2: solved... in 0.022s
1: solved... in 0.02s
2: solved... in 0.021s
1: solved... in 0.023s
2: solved... in 0.023s
1: solved... in 0.02s
2: solved... in 0.023s
1: solved... in 0.02s
2: solved... in 0.022s
1: solved... in 0.02s
2: solved... in 0.022s
1: solved... in 0.02s
2: solved... in 0.021s
1: solved... in 0.02s
2: solved... in 0.021s
1: solved... in 0.021s
2: solved... in 0.021s
1: solved... in 0.024s
2: solved... in 0.024s
1: solved... in 0.029s
2: solved... in 0.022s
1: solved... in 0.022s
2: solved... in 0.021s
1: solved... in 0.022s
2: solved... in 0.022s
1: solved... in 0.022s
2: solved... in 0.029s
1: solved... in 0.022s
2: solved... in 0.022s
1: solved... in 0.022s
2: solved... in 0.022s
1: solved... in 0.022s
2: solved... in 0.022s
1: solved... in 0.029s
2: solved... in 0.026s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 4/4
Unrolled calls: Set((r13 == delete(cs42, ir5)), (r14 == listSize(cs70)), (r15 == listSize(cs71)), (r16 == listSize(cs33)))
Unrolling (r14 == listSize(cs70))
Unrolling (r15 == listSize(cs71))
Unrolling (r16 == listSize(cs33))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.024s
2: solved... in 0.006s
1: solved... in 0.02s
2: solved... in 0.006s
1: solved... in 0.021s
2: solved... in 0.006s
1: solved... in 0.022s
2: solved... in 0.006s
1: solved... in 0.021s
2: solved... in 0.006s
1: solved... in 0.022s
2: solved... in 0.006s
1: solved... in 0.028s
2: solved... in 0.007s
1: solved... in 0.023s
2: solved... in 0.006s
1: solved... in 0.023s
2: solved... in 0.006s
1: solved... in 0.022s
2: solved... in 0.006s
1: solved... in 0.02s
2: solved... in 0.007s
1: solved... in 0.02s
2: solved... in 0.006s
1: solved... in 0.025s
2: solved... in 0.006s
1: solved... in 0.02s
2: solved... in 0.008s
1: solved... in 0.021s
2: solved... in 0.007s
1: solved... in 0.022s
2: solved... in 0.008s
1: solved... in 0.022s
2: solved... in 0.008s
1: solved... in 0.022s
2: solved... in 0.008s
1: solved... in 0.022s
2: solved... in 0.009s
1: solved... in 0.022s
2: solved... in 0.009s
1: solved... in 0.022s
2: solved... in 0.011s
1: solved... in 0.021s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.021s
2: solved... in 0.009s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.02s
2: solved... in 0.01s
1: solved... in 0.02s
2: solved... in 0.009s
1: solved... in 0.025s
2: solved... in 0.011s
1: solved... in 0.021s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.01s
1: solved... in 0.021s
2: solved... in 0.011s
1: solved... in 0.021s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.012s
1: solved... in 0.021s
2: solved... in 0.013s
1: solved... in 0.029s
2: solved... in 0.013s
1: solved... in 0.021s
2: solved... in 0.02s
1: solved... in 0.021s
2: solved... in 0.015s
1: solved... in 0.02s
2: solved... in 0.014s
1: solved... in 0.021s
2: solved... in 0.015s
1: solved... in 0.021s
2: solved... in 0.015s
1: solved... in 0.022s
2: solved... in 0.018s
1: solved... in 0.024s
2: solved... in 0.019s
1: solved... in 0.021s
2: solved... in 0.014s
1: solved... in 0.023s
2: solved... in 0.015s
1: solved... in 0.023s
2: solved... in 0.016s
1: solved... in 0.021s
2: solved... in 0.016s
1: solved... in 0.022s
2: solved... in 0.021s
1: solved... in 0.026s
2: solved... in 0.012s
1: solved... in 0.024s
2: solved... in 0.012s
1: solved... in 0.024s
2: solved... in 0.012s
1: solved... in 0.025s
2: solved... in 0.013s
1: solved... in 0.024s
2: solved... in 0.013s
1: solved... in 0.024s
2: solved... in 0.017s
1: solved... in 0.028s
2: solved... in 0.014s
1: solved... in 0.022s
2: solved... in 0.013s
1: solved... in 0.025s
2: solved... in 0.013s
1: solved... in 0.025s
2: solved... in 0.013s
1: solved... in 0.025s
2: solved... in 0.013s
1: solved... in 0.023s
2: solved... in 0.015s
1: solved... in 0.025s
2: solved... in 0.019s
1: solved... in 0.032s
2: solved... in 0.015s
1: solved... in 0.025s
2: solved... in 0.014s
1: solved... in 0.021s
2: solved... in 0.015s
1: solved... in 0.023s
2: solved... in 0.015s
1: solved... in 0.022s
2: solved... in 0.015s
1: solved... in 0.025s
2: solved... in 0.014s
1: solved... in 0.028s
2: solved... in 0.015s
1: solved... in 0.022s
2: solved... in 0.016s
1: solved... in 0.022s
2: solved... in 0.015s
1: solved... in 0.025s
2: solved... in 0.016s
1: solved... in 0.028s
2: solved... in 0.016s
1: solved... in 0.028s
2: solved... in 0.016s
1: solved... in 0.023s
2: solved... in 0.018s
1: solved... in 0.022s
2: solved... in 0.017s
1: solved... in 0.022s
2: solved... in 0.017s
1: solved... in 0.028s
2: solved... in 0.017s
1: solved... in 0.023s
2: solved... in 0.018s
1: solved... in 0.023s
2: solved... in 0.016s
1: solved... in 0.022s
2: solved... in 0.019s
1: solved... in 0.028s
2: solved... in 0.019s
1: solved... in 0.026s
2: solved... in 0.017s
1: solved... in 0.022s
2: solved... in 0.017s
1: solved... in 0.025s
2: solved... in 0.017s
1: solved... in 0.025s
2: solved... in 0.018s
1: solved... in 0.022s
2: solved... in 0.021s
1: solved... in 0.026s
2: solved... in 0.018s
1: solved... in 0.028s
2: solved... in 0.018s
1: solved... in 0.026s
2: solved... in 0.019s
1: solved... in 0.021s
2: solved... in 0.022s
1: solved... in 0.023s
2: solved... in 0.018s
1: solved... in 0.025s
2: solved... in 0.019s
1: solved... in 0.026s
2: solved... in 0.02s
1: solved... in 0.021s
2: solved... in 0.02s
1: solved... in 0.023s
2: solved... in 0.019s
1: solved... in 0.025s
2: solved... in 0.024s
1: solved... in 0.022s
2: solved... in 0.02s
1: solved... in 0.025s
2: solved... in 0.02s
1: solved... in 0.026s
2: solved... in 0.021s
1: solved... in 0.025s
2: solved... in 0.019s
1: solved... in 0.025s
2: solved... in 0.02s
1: solved... in 0.025s
2: solved... in 0.023s
1: solved... in 0.022s
2: solved... in 0.021s
1: solved... in 0.025s
2: solved... in 0.02s
1: solved... in 0.026s
2: solved... in 0.02s
1: solved... in 0.025s
2: solved... in 0.023s
1: solved... in 0.026s
2: solved... in 0.022s
1: solved... in 0.025s
2: solved... in 0.021s
1: solved... in 0.025s
2: solved... in 0.024s
1: solved... in 0.025s
2: solved... in 0.021s
1: solved... in 0.021s
2: solved... in 0.021s
1: solved... in 0.024s
2: solved... in 0.022s
1: solved... in 0.025s
2: solved... in 0.023s
1: solved... in 0.025s
2: solved... in 0.022s
1: solved... in 0.023s
2: solved... in 0.021s
1: solved... in 0.024s
2: solved... in 0.023s
1: solved... in 0.025s
2: solved... in 0.022s
1: solved... in 0.025s
2: solved... in 0.023s
1: solved... in 0.029s
2: solved... in 0.024s
1: solved... in 0.022s
2: solved... in 0.023s
1: solved... in 0.025s
2: solved... in 0.023s
1: solved... in 0.026s
2: solved... in 0.024s
1: solved... in 0.021s
2: solved... in 0.025s
1: solved... in 0.025s
2: solved... in 0.024s
1: solved... in 0.025s
2: solved... in 0.023s
1: solved... in 0.022s
2: solved... in 0.023s
1: solved... in 0.026s
2: solved... in 0.024s
1: solved... in 0.026s
2: solved... in 0.024s
1: solved... in 0.025s
2: solved... in 0.024s
1: solved... in 0.025s
2: solved... in 0.025s
1: solved... in 0.024s
2: solved... in 0.025s
1: solved... in 0.023s
2: solved... in 0.025s
1: solved... in 0.03s
2: solved... in 0.025s
1: solved... in 0.022s
2: solved... in 0.024s
1: solved... in 0.022s
2: solved... in 0.024s
1: solved... in 0.025s
2: solved... in 0.026s
1: solved... in 0.033s
2: solved... in 0.025s
1: solved... in 0.022s
2: solved... in 0.027s
1: solved... in 0.026s
2: solved... in 0.025s
1: solved... in 0.024s
2: solved... in 0.026s
1: solved... in 0.033s
2: solved... in 0.026s
1: solved... in 0.022s
2: solved... in 0.026s
1: solved... in 0.032s
2: solved... in 0.025s
1: solved... in 0.022s
2: solved... in 0.027s
1: solved... in 0.028s
2: solved... in 0.025s
1: solved... in 0.025s
2: solved... in 0.026s
1: solved... in 0.023s
2: solved... in 0.026s
1: solved... in 0.027s
2: solved... in 0.028s
1: solved... in 0.021s
2: solved... in 0.026s
1: solved... in 0.024s
2: solved... in 0.027s
1: solved... in 0.023s
2: solved... in 0.027s
1: solved... in 0.023s
2: solved... in 0.028s
1: solved... in 0.032s
2: solved... in 0.027s
1: solved... in 0.025s
2: solved... in 0.029s
1: solved... in 0.032s
2: solved... in 0.028s
1: solved... in 0.023s
2: solved... in 0.028s
1: solved... in 0.033s
2: solved... in 0.028s
1: solved... in 0.023s
2: solved... in 0.029s
1: solved... in 0.024s
2: solved... in 0.027s
1: solved... in 0.025s
2: solved... in 0.027s
1: solved... in 0.024s
2: solved... in 0.027s
1: solved... in 0.024s
2: solved... in 0.027s
1: solved... in 0.024s
2: solved... in 0.027s
1: solved... in 0.024s
2: solved... in 0.028s
1: solved... in 0.022s
2: solved... in 0.028s
1: solved... in 0.027s
2: solved... in 0.03s
1: solved... in 0.025s
2: solved... in 0.029s
1: solved... in 0.027s
2: solved... in 0.029s
1: solved... in 0.024s
2: solved... in 0.028s
1: solved... in 0.024s
2: solved... in 0.029s
1: solved... in 0.025s
2: solved... in 0.029s
1: solved... in 0.025s
2: solved... in 0.029s
1: solved... in 0.027s
2: solved... in 0.028s
1: solved... in 0.023s
2: solved... in 0.028s
1: solved... in 0.028s
2: solved... in 0.031s
1: solved... in 0.026s
2: solved... in 0.029s
1: solved... in 0.023s
2: solved... in 0.029s
1: solved... in 0.026s
2: solved... in 0.03s
1: solved... in 0.018s
[[34m Info  [0m] - Found inductive invariant: delete --> ((((1 * res11._2) + (-42 * listSize(inp))) + -123) <= 0)
[[34m Info  [0m] - Found inductive invariant: listSize --> (((-1 * #res) + -2) <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[34m Info  [0m] - Invariant verified
[[34m Info  [0m] - considering function insert...
[[34m Info  [0m] Body: if (t.isInstanceOf[Leaf])
            (let (e42,t46 := if (inp.isInstanceOf[Nil])
              (t, 1)
            else
              (let (e45,t49 := (let (ir,it := (let (e48,t53 := insert(inp.tail, Leaf())) in
                (e48, (1 + (1 + (1 + t53)))))) in
                (let (r5,t50 := if (ir.isInstanceOf[Leaf])
                  (Node(inp.head, Leaf(), Leaf()), (1 + 4))
                else
                  (let (e56,t61 := if ((ir.nvalue > 0))
                    (Node(inp.head, ir, Leaf()), (2 + 3))
                  else
                    (Node(ir.nvalue, Leaf(), ir), (2 + 3))) in
                    (e56, (1 + t61)))) in
                  (r5, (t50 + (it + 1)))))) in
                (e45, (1 + t49)))) in
              (e42, (1 + t46)))
          else
            (let (e73,t78 := if (inp.isInstanceOf[Nil])
              (t, 1)
            else
              (let (e76,t81 := if ((inp.isInstanceOf[Cons] ∧ inp.tail.isInstanceOf[Nil]))
                (t, 4)
              else
                (let (e79,t84 := if ((inp.isInstanceOf[Cons] ∧ inp.tail.isInstanceOf[Cons]))
                  (let (e81,t86 := (let (ir1,it1 := if ((inp.tail.head > 0))
                    (t.left, (3 + 1))
                  else
                    (t.right, (3 + 1))) in
                    (let (r6,t87 := if ((inp.tail.head > 0))
                      (let (e92,t98 := (let (e94,t100 := (let (e99,t105 := insert(inp.tail, ir1)) in
                        (e99, (1 + (1 + t105))))) in
                        (Node(t.nvalue, e94, t.right), (1 + (t100 + 2))))) in
                        (e92, (3 + t98)))
                    else
                      (let (e102,t108 := (let (e105,t111 := (let (e108,t114 := insert(inp.tail, ir1)) in
                        (e108, (1 + (1 + t114))))) in
                        (Node(t.nvalue, t.left, e105), (t111 + 3)))) in
                        (e102, (3 + t108)))) in
                      (r6, (t87 + (it1 + 1)))))) in
                    (e81, (4 + t86)))
                else
                  (t, 4)) in
                  (e79, (4 + t84)))) in
                (e76, (1 + t81)))) in
              (e73, (1 + t78)))
[[34m Info  [0m] Post: true
falttened Body: ((res10 == ifres23) && ((ci38 && (ci38 == t.isInstanceOf[Leaf]) && (ifres23 == tp36) && (arg36 == (1 + t46)) && (tp36 == (e42, arg36)) && ((ci39 && (ci39 == inp.isInstanceOf[Nil]) && (ifres24 == tp37) && (arg37 == 1) && (tp37 == (t, arg37))) || (!(ci40) && (ci40 == inp.isInstanceOf[Nil]) && (ifres24 == tp38) && (arg38 == (1 + t49)) && (tp38 == (e45, arg38)) && (tres2 == r22) && (cs75 == inp.tail) && (cc32 == Leaf()) && (r22 == insert(cs75, cc32)) && (t50 == ts40) && (ts40 == ifres25._2) && ((ci41 && (ci41 == ir.isInstanceOf[Leaf]) && (ifres25 == tp39) && (cs76 == inp.head) && (arg39 == (1 + 4)) && (tp39 == (cc35, arg39)) && (cc34 == Leaf()) && (cc35 == Node(cs76, cc33, cc34)) && (cc33 == Leaf())) || (!(ci42) && (ci42 == ir.isInstanceOf[Leaf]) && (ifres25 == tp40) && (arg40 == (1 + t61)) && (tp40 == (e56, arg40)) && (((cs77 > 0) && (cs77 == ir.nvalue) && (ifres26 == tp41) && (cc36 == Leaf()) && (cc37 == Node(cs78, ir, cc36)) && (tp41 == (cc37, arg41)) && (arg41 == (2 + 3)) && (cs78 == inp.head)) || ((cs79 <= 0) && (cs79 == ir.nvalue) && (ifres26 == tp42) && (cc38 == Leaf()) && (cc39 == Node(cs80, cc38, ir)) && (cs80 == ir.nvalue) && (tp42 == (cc39, arg42)) && (arg42 == (2 + 3)))) && (e56 == ts41) && (ts41 == ifres26._1) && (t61 == ts42) && (ts42 == ifres26._2))) && (it == (1 + (1 + (1 + t53)))) && (e45 == r5) && (t49 == (t50 + (it + 1))) && (r5 == ts43) && (ts43 == ifres25._1) && (t53 == ts44) && (ts44 == tres2._2) && (ir == e48) && (e48 == ts45) && (ts45 == tres2._1))) && (e42 == ts46) && (ts46 == ifres24._1) && (t46 == ts47) && (ts47 == ifres24._2)) || (!(ci43) && (ci43 == t.isInstanceOf[Leaf]) && (ifres23 == tp43) && (arg43 == (1 + t78)) && (tp43 == (e73, arg43)) && ((ci44 && (ci44 == inp.isInstanceOf[Nil]) && (ifres27 == tp44) && (arg44 == 1) && (tp44 == (t, arg44))) || (!(ci45) && (ci45 == inp.isInstanceOf[Nil]) && (ifres27 == tp45) && (arg45 == (1 + t81)) && (tp45 == (e76, arg45)) && ((ci46 && (ci46 == inp.isInstanceOf[Cons]) && ci47 && (cs81 == inp.tail) && (ci47 == cs81.isInstanceOf[Nil]) && (ifres28 == tp46) && (arg46 == 4) && (tp46 == (t, arg46))) || (((!(ci48) && (ci48 == inp.isInstanceOf[Cons])) || (!(ci49) && (cs82 == inp.tail) && (ci49 == cs82.isInstanceOf[Nil]))) && (ifres28 == tp47) && (arg47 == (4 + t84)) && (tp47 == (e79, arg47)) && ((ci50 && (ci50 == inp.isInstanceOf[Cons]) && ci51 && (cs83 == inp.tail) && (ci51 == cs83.isInstanceOf[Cons]) && (ifres29 == tp48) && (arg48 == (4 + t86)) && (tp48 == (e81, arg48)) && (((cs85 > 0) && (cs84 == inp.tail) && (cs85 == cs84.head) && (ifres30 == tp49) && (arg49 == (3 + t98)) && (tp49 == (e92, arg49)) && (t98 == (1 + (t100 + 2))) && (t105 == ts48) && (ts48 == tres3._2) && (e99 == ts49) && (ts49 == tres3._1) && (t100 == (1 + (1 + t105))) && (tres3 == r23) && (cs86 == inp.tail) && (r23 == insert(cs86, ir1)) && (e92 == cc40) && (cs87 == t.nvalue) && (cs88 == t.right) && (cc40 == Node(cs87, e94, cs88)) && (e94 == e99)) || ((cs90 <= 0) && (cs89 == inp.tail) && (cs90 == cs89.head) && (ifres30 == tp50) && (arg50 == (3 + t108)) && (tp50 == (e102, arg50)) && (e102 == cc41) && (cs91 == t.nvalue) && (cs92 == t.left) && (cc41 == Node(cs91, cs92, e105)) && (t108 == (t111 + 3)) && (t111 == (1 + (1 + t114))) && (t114 == ts50) && (ts50 == tres4._2) && (e108 == ts51) && (ts51 == tres4._1) && (tres4 == r24) && (cs93 == inp.tail) && (r24 == insert(cs93, ir1)) && (e105 == e108))) && (it1 == ts52) && (ts52 == ifres31._2) && (e81 == r6) && (r6 == ts53) && (ts53 == ifres30._1) && (((cs95 > 0) && (cs94 == inp.tail) && (cs95 == cs94.head) && (ifres31 == tp51) && (cs96 == t.left) && (arg51 == (3 + 1)) && (tp51 == (cs96, arg51))) || ((cs98 <= 0) && (cs97 == inp.tail) && (cs98 == cs97.head) && (ifres31 == tp52) && (cs99 == t.right) && (arg52 == (3 + 1)) && (tp52 == (cs99, arg52)))) && (t87 == ts54) && (ts54 == ifres30._2) && (t86 == (t87 + (it1 + 1))) && (ir1 == ts55) && (ts55 == ifres31._1)) || (((!(ci52) && (ci52 == inp.isInstanceOf[Cons])) || (!(ci53) && (cs100 == inp.tail) && (ci53 == cs100.isInstanceOf[Cons]))) && (ifres29 == tp53) && (arg53 == 4) && (tp53 == (t, arg53)))) && (e79 == ts56) && (ts56 == ifres29._1) && (t84 == ts57) && (ts57 == ifres29._2))) && (e76 == ts58) && (ts58 == ifres28._1) && (t81 == ts59) && (ts59 == ifres28._2))) && (e73 == ts60) && (ts60 == ifres27._1) && (t78 == ts61) && (ts61 == ifres27._2))))
Flattened Post: ((ts62 > ((a?1 * r25) + c?1)) && (ts62 == res10._2) && (r25 == listSize(inp)))
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.015s
2: solved... in 0.005s
1: solved... in 0.013s
2: solved... in 0.005s
1: solved... in 0.014s
2: solved... in 0.005s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.013s
2: solved... in 0.006s
1: solved... in 0.013s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.013s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.013s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.005s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.012s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.012s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.012s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.01s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.01s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.006s
1: solved... in 0.01s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.012s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.018s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.027s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.012s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.02s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.013s
2: solved... in 0.013s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.012s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 4/4
Unrolled calls: Set((r22 == insert(cs75, cc32)), (r23 == insert(cs86, ir1)), (r24 == insert(cs93, ir1)), (r25 == listSize(inp)))
Unrolling (r22 == insert(cs75, cc32))
Unrolling (r23 == insert(cs86, ir1))
Unrolling (r24 == insert(cs93, ir1))
Creating VC for listSize
Unrolling (r25 == listSize(inp))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.047s
2: solved... in 0.006s
1: solved... in 0.042s
2: solved... in 0.006s
1: solved... in 0.046s
2: solved... in 0.006s
1: solved... in 0.042s
2: solved... in 0.005s
1: solved... in 0.042s
2: solved... in 0.006s
1: solved... in 0.043s
2: solved... in 0.006s
1: solved... in 0.043s
2: solved... in 0.006s
1: solved... in 0.043s
2: solved... in 0.006s
1: solved... in 0.043s
2: solved... in 0.005s
1: solved... in 0.042s
2: solved... in 0.006s
1: solved... in 0.043s
2: solved... in 0.006s
1: solved... in 0.043s
2: solved... in 0.006s
1: solved... in 0.042s
2: solved... in 0.007s
1: solved... in 0.043s
2: solved... in 0.006s
1: solved... in 0.042s
2: solved... in 0.007s
1: solved... in 0.044s
2: solved... in 0.006s
1: solved... in 0.042s
2: solved... in 0.007s
1: solved... in 0.042s
2: solved... in 0.006s
1: solved... in 0.042s
2: solved... in 0.01s
1: solved... in 0.043s
2: solved... in 0.007s
1: solved... in 0.042s
2: solved... in 0.006s
1: solved... in 0.042s
2: solved... in 0.006s
1: solved... in 0.042s
2: solved... in 0.007s
1: solved... in 0.044s
2: solved... in 0.007s
1: solved... in 0.043s
2: solved... in 0.006s
1: solved... in 0.042s
2: solved... in 0.007s
1: solved... in 0.043s
2: solved... in 0.006s
1: solved... in 0.043s
2: solved... in 0.007s
1: solved... in 0.043s
2: solved... in 0.006s
1: solved... in 0.043s
2: solved... in 0.007s
1: solved... in 0.042s
2: solved... in 0.007s
1: solved... in 0.042s
2: solved... in 0.006s
1: solved... in 0.042s
2: solved... in 0.007s
1: solved... in 0.055s
2: solved... in 0.007s
1: solved... in 0.042s
2: solved... in 0.007s
1: solved... in 0.042s
2: solved... in 0.007s
1: solved... in 0.043s
2: solved... in 0.007s
1: solved... in 0.043s
2: solved... in 0.006s
1: solved... in 0.043s
2: solved... in 0.007s
1: solved... in 0.043s
2: solved... in 0.007s
1: solved... in 0.043s
2: solved... in 0.007s
1: solved... in 0.043s
2: solved... in 0.007s
1: solved... in 0.042s
2: solved... in 0.007s
1: solved... in 0.042s
2: solved... in 0.007s
1: solved... in 0.043s
2: solved... in 0.008s
1: solved... in 0.043s
2: solved... in 0.007s
1: solved... in 0.048s
2: solved... in 0.008s
1: solved... in 0.042s
2: solved... in 0.007s
1: solved... in 0.043s
2: solved... in 0.007s
1: solved... in 0.043s
2: solved... in 0.007s
1: solved... in 0.042s
2: solved... in 0.008s
1: solved... in 0.042s
2: solved... in 0.008s
1: solved... in 0.044s
2: solved... in 0.008s
1: solved... in 0.042s
2: solved... in 0.008s
1: solved... in 0.044s
2: solved... in 0.007s
1: solved... in 0.043s
2: solved... in 0.008s
1: solved... in 0.044s
2: solved... in 0.008s
1: solved... in 0.042s
2: solved... in 0.008s
1: solved... in 0.042s
2: solved... in 0.008s
1: solved... in 0.043s
2: solved... in 0.008s
1: solved... in 0.043s
2: solved... in 0.008s
1: solved... in 0.042s
2: solved... in 0.008s
1: solved... in 0.042s
2: solved... in 0.008s
1: solved... in 0.042s
2: solved... in 0.008s
1: solved... in 0.044s
2: solved... in 0.008s
1: solved... in 0.045s
2: solved... in 0.008s
1: solved... in 0.054s
2: solved... in 0.009s
1: solved... in 0.042s
2: solved... in 0.008s
1: solved... in 0.043s
2: solved... in 0.008s
1: solved... in 0.042s
2: solved... in 0.009s
1: solved... in 0.042s
2: solved... in 0.008s
1: solved... in 0.042s
2: solved... in 0.009s
1: solved... in 0.044s
2: solved... in 0.009s
1: solved... in 0.043s
2: solved... in 0.008s
1: solved... in 0.042s
2: solved... in 0.008s
1: solved... in 0.042s
2: solved... in 0.009s
1: solved... in 0.044s
2: solved... in 0.009s
1: solved... in 0.043s
2: solved... in 0.009s
1: solved... in 0.043s
2: solved... in 0.009s
1: solved... in 0.044s
2: solved... in 0.008s
1: solved... in 0.044s
2: solved... in 0.008s
1: solved... in 0.042s
2: solved... in 0.009s
1: solved... in 0.042s
2: solved... in 0.009s
1: solved... in 0.042s
2: solved... in 0.009s
1: solved... in 0.047s
2: solved... in 0.008s
1: solved... in 0.042s
2: solved... in 0.009s
1: solved... in 0.042s
2: solved... in 0.009s
1: solved... in 0.042s
2: solved... in 0.009s
1: solved... in 0.043s
2: solved... in 0.009s
1: solved... in 0.042s
2: solved... in 0.009s
1: solved... in 0.043s
2: solved... in 0.01s
1: solved... in 0.042s
2: solved... in 0.009s
1: solved... in 0.043s
2: solved... in 0.009s
1: solved... in 0.043s
2: solved... in 0.009s
1: solved... in 0.042s
2: solved... in 0.01s
1: solved... in 0.042s
2: solved... in 0.009s
1: solved... in 0.042s
2: solved... in 0.01s
1: solved... in 0.043s
2: solved... in 0.01s
1: solved... in 0.043s
2: solved... in 0.01s
1: solved... in 0.043s
2: solved... in 0.009s
1: solved... in 0.043s
2: solved... in 0.01s
1: solved... in 0.043s
2: solved... in 0.01s
1: solved... in 0.042s
2: solved... in 0.009s
1: solved... in 0.044s
2: solved... in 0.01s
1: solved... in 0.042s
2: solved... in 0.01s
1: solved... in 0.043s
2: solved... in 0.009s
1: solved... in 0.042s
2: solved... in 0.01s
1: solved... in 0.042s
2: solved... in 0.01s
1: solved... in 0.043s
2: solved... in 0.01s
1: solved... in 0.043s
2: solved... in 0.01s
1: solved... in 0.043s
2: solved... in 0.01s
1: solved... in 0.043s
2: solved... in 0.01s
1: solved... in 0.042s
2: solved... in 0.01s
1: solved... in 0.042s
2: solved... in 0.01s
1: solved... in 0.042s
2: solved... in 0.01s
1: solved... in 0.043s
2: solved... in 0.01s
1: solved... in 0.042s
2: solved... in 0.01s
1: solved... in 0.046s
2: solved... in 0.01s
1: solved... in 0.042s
2: solved... in 0.01s
1: solved... in 0.042s
2: solved... in 0.01s
1: solved... in 0.042s
2: solved... in 0.01s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.043s
2: solved... in 0.01s
1: solved... in 0.042s
2: solved... in 0.011s
1: solved... in 0.043s
2: solved... in 0.01s
1: solved... in 0.044s
2: solved... in 0.01s
1: solved... in 0.043s
2: solved... in 0.01s
1: solved... in 0.042s
2: solved... in 0.01s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.044s
2: solved... in 0.01s
1: solved... in 0.042s
2: solved... in 0.011s
1: solved... in 0.043s
2: solved... in 0.01s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.042s
2: solved... in 0.015s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.042s
2: solved... in 0.011s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.042s
2: solved... in 0.01s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.042s
2: solved... in 0.011s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.042s
2: solved... in 0.011s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.044s
2: solved... in 0.011s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.043s
2: solved... in 0.012s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.042s
2: solved... in 0.012s
1: solved... in 0.042s
2: solved... in 0.011s
1: solved... in 0.043s
2: solved... in 0.012s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.043s
2: solved... in 0.011s
1: solved... in 0.044s
2: solved... in 0.012s
1: solved... in 0.042s
2: solved... in 0.011s
1: solved... in 0.042s
2: solved... in 0.012s
1: solved... in 0.042s
2: solved... in 0.012s
1: solved... in 0.043s
2: solved... in 0.012s
1: solved... in 0.042s
2: solved... in 0.012s
1: solved... in 0.043s
2: solved... in 0.012s
1: solved... in 0.042s
2: solved... in 0.013s
1: solved... in 0.044s
2: solved... in 0.012s
1: solved... in 0.043s
2: solved... in 0.012s
1: solved... in 0.043s
2: solved... in 0.012s
1: solved... in 0.043s
2: solved... in 0.012s
1: solved... in 0.043s
2: solved... in 0.012s
1: solved... in 0.043s
2: solved... in 0.012s
1: solved... in 0.043s
2: solved... in 0.012s
1: solved... in 0.042s
2: solved... in 0.012s
1: solved... in 0.047s
2: solved... in 0.013s
1: solved... in 0.042s
2: solved... in 0.012s
1: solved... in 0.042s
2: solved... in 0.012s
1: solved... in 0.042s
2: solved... in 0.013s
1: solved... in 0.047s
2: solved... in 0.012s
1: solved... in 0.042s
2: solved... in 0.012s
1: solved... in 0.042s
2: solved... in 0.012s
1: solved... in 0.043s
2: solved... in 0.012s
1: solved... in 0.05s
2: solved... in 0.012s
1: solved... in 0.043s
2: solved... in 0.014s
1: solved... in 0.043s
2: solved... in 0.013s
1: solved... in 0.042s
2: solved... in 0.013s
1: solved... in 0.05s
2: solved... in 0.013s
1: solved... in 0.043s
2: solved... in 0.012s
1: solved... in 0.043s
2: solved... in 0.013s
1: solved... in 0.043s
2: solved... in 0.013s
1: solved... in 0.048s
2: solved... in 0.013s
1: solved... in 0.043s
2: solved... in 0.012s
1: solved... in 0.042s
2: solved... in 0.013s
1: solved... in 0.043s
2: solved... in 0.012s
1: solved... in 0.048s
2: solved... in 0.013s
1: solved... in 0.042s
2: solved... in 0.013s
1: solved... in 0.043s
2: solved... in 0.013s
1: solved... in 0.043s
2: solved... in 0.015s
1: solved... in 0.046s
2: solved... in 0.014s
1: solved... in 0.042s
2: solved... in 0.013s
1: solved... in 0.042s
2: solved... in 0.013s
1: solved... in 0.043s
2: solved... in 0.016s
1: solved... in 0.045s
2: solved... in 0.014s
1: solved... in 0.044s
2: solved... in 0.013s
1: solved... in 0.043s
2: solved... in 0.014s
1: solved... in 0.043s
2: solved... in 0.016s
1: solved... in 0.048s
2: solved... in 0.014s
1: solved... in 0.046s
2: solved... in 0.014s
1: solved... in 0.046s
2: solved... in 0.014s
1: solved... in 0.042s
2: solved... in 0.014s
1: solved... in 0.047s
2: solved... in 0.016s
1: solved... in 0.043s
2: solved... in 0.015s
1: solved... in 0.046s
2: solved... in 0.015s
1: solved... in 0.043s
2: solved... in 0.015s
1: solved... in 0.047s
2: solved... in 0.015s
1: solved... in 0.053s
2: solved... in 0.015s
1: solved... in 0.047s
2: solved... in 0.014s
1: solved... in 0.042s
2: solved... in 0.015s
1: solved... in 0.046s
2: solved... in 0.015s
1: solved... in 0.043s
2: solved... in 0.016s
1: solved... in 0.047s
2: solved... in 0.015s
1: solved... in 0.047s
2: solved... in 0.015s
1: solved... in 0.047s
2: solved... in 0.015s
1: solved... in 0.042s
2: solved... in 0.015s
1: solved... in 0.047s
2: solved... in 0.014s
1: solved... in 0.047s
2: solved... in 0.015s
1: solved... in 0.047s
2: solved... in 0.014s
1: solved... in 0.042s
2: solved... in 0.015s
1: solved... in 0.046s
2: solved... in 0.018s
1: solved... in 0.045s
2: solved... in 0.015s
1: solved... in 0.046s
2: solved... in 0.015s
1: solved... in 0.042s
2: solved... in 0.015s
1: solved... in 0.046s
2: solved... in 0.016s
1: solved... in 0.043s
2: solved... in 0.014s
1: solved... in 0.045s
2: solved... in 0.015s
1: solved... in 0.042s
2: solved... in 0.015s
1: solved... in 0.046s
2: solved... in 0.015s
1: solved... in 0.042s
2: solved... in 0.015s
1: solved... in 0.046s
2: solved... in 0.016s
1: solved... in 0.042s
2: solved... in 0.015s
1: solved... in 0.046s
2: solved... in 0.016s
1: solved... in 0.042s
2: solved... in 0.016s
1: solved... in 0.046s
2: solved... in 0.015s
1: solved... in 0.042s
2: solved... in 0.015s
1: solved... in 0.05s
2: solved... in 0.016s
1: solved... in 0.043s
2: solved... in 0.016s
1: solved... in 0.047s
2: solved... in 0.015s
1: solved... in 0.042s
2: solved... in 0.015s
1: solved... in 0.051s
2: solved... in 0.016s
1: solved... in 0.042s
2: solved... in 0.016s
1: solved... in 0.046s
2: solved... in 0.015s
1: solved... in 0.043s
2: solved... in 0.018s
1: solved... in 0.049s
2: solved... in 0.015s
1: solved... in 0.042s
2: solved... in 0.016s
1: solved... in 0.046s
2: solved... in 0.016s
1: solved... in 0.042s
2: solved... in 0.018s
1: solved... in 0.048s
2: solved... in 0.017s
1: solved... in 0.042s
2: solved... in 0.016s
1: solved... in 0.055s
2: solved... in 0.016s
1: solved... in 0.047s
2: solved... in 0.017s
1: solved... in 0.042s
2: solved... in 0.016s
1: solved... in 0.047s
2: solved... in 0.017s
1: solved... in 0.042s
2: solved... in 0.016s
1: solved... in 0.046s
2: solved... in 0.017s
1: solved... in 0.042s
2: solved... in 0.016s
1: solved... in 0.046s
2: solved... in 0.016s
1: solved... in 0.042s
2: solved... in 0.015s
1: solved... in 0.05s
2: solved... in 0.017s
1: solved... in 0.042s
2: solved... in 0.016s
1: solved... in 0.046s
2: solved... in 0.017s
1: solved... in 0.042s
2: solved... in 0.021s
1: solved... in 0.05s
2: solved... in 0.017s
1: solved... in 0.042s
2: solved... in 0.017s
1: solved... in 0.046s
2: solved... in 0.018s
1: solved... in 0.042s
2: solved... in 0.018s
1: solved... in 0.047s
2: solved... in 0.017s
1: solved... in 0.042s
2: solved... in 0.018s
1: solved... in 0.046s
2: solved... in 0.019s
1: solved... in 0.042s
2: solved... in 0.018s
1: solved... in 0.047s
2: solved... in 0.017s
1: solved... in 0.042s
2: solved... in 0.017s
1: solved... in 0.046s
2: solved... in 0.017s
1: solved... in 0.044s
2: solved... in 0.017s
1: solved... in 0.048s
2: solved... in 0.018s
1: solved... in 0.044s
2: solved... in 0.018s
1: solved... in 0.049s
2: solved... in 0.026s
1: solved... in 0.048s
2: solved... in 0.017s
1: solved... in 0.046s
2: solved... in 0.018s
1: solved... in 0.042s
2: solved... in 0.019s
1: solved... in 0.046s
2: solved... in 0.019s
1: solved... in 0.043s
2: solved... in 0.017s
1: solved... in 0.046s
2: solved... in 0.018s
1: solved... in 0.042s
2: solved... in 0.018s
1: solved... in 0.046s
2: solved... in 0.026s
1: solved... in 0.043s
2: solved... in 0.026s
1: solved... in 0.043s
2: solved... in 0.017s
1: solved... in 0.046s
2: solved... in 0.017s
1: solved... in 0.052s
2: solved... in 0.018s
1: solved... in 0.042s
2: solved... in 0.018s
1: solved... in 0.046s
2: solved... in 0.018s
1: solved... in 0.042s
2: solved... in 0.021s
1: solved... in 0.049s
2: solved... in 0.028s
1: solved... in 0.046s
2: solved... in 0.018s
1: solved... in 0.042s
2: solved... in 0.018s
1: solved... in 0.043s
2: solved... in 0.019s
1: solved... in 0.046s
2: solved... in 0.018s
1: solved... in 0.043s
2: solved... in 0.019s
1: solved... in 0.046s
2: solved... in 0.018s
1: solved... in 0.044s
2: solved... in 0.019s
1: solved... in 0.046s
2: solved... in 0.019s
1: solved... in 0.043s
2: solved... in 0.018s
1: solved... in 0.046s
2: solved... in 0.019s
1: solved... in 0.051s
2: solved... in 0.019s
1: solved... in 0.046s
2: solved... in 0.019s
1: solved... in 0.042s
2: solved... in 0.019s
1: solved... in 0.046s
2: solved... in 0.041s
1: solved... in 0.046s
2: solved... in 0.02s
1: solved... in 0.042s
2: solved... in 0.02s
1: solved... in 0.042s
2: solved... in 0.019s
1: solved... in 0.046s
2: solved... in 0.019s
1: solved... in 0.043s
2: solved... in 0.019s
1: solved... in 0.046s
2: solved... in 0.02s
1: solved... in 0.042s
2: solved... in 0.019s
1: solved... in 0.047s
2: solved... in 0.019s
1: solved... in 0.042s
2: solved... in 0.019s
1: solved... in 0.045s
2: solved... in 0.019s
1: solved... in 0.043s
2: solved... in 0.02s
1: solved... in 0.047s
2: solved... in 0.019s
1: solved... in 0.043s
2: solved... in 0.019s
1: solved... in 0.046s
2: solved... in 0.02s
1: solved... in 0.042s
2: solved... in 0.019s
1: solved... in 0.047s
2: solved... in 0.02s
1: solved... in 0.043s
2: solved... in 0.02s
1: solved... in 0.046s
2: solved... in 0.02s
1: solved... in 0.042s
2: solved... in 0.019s
1: solved... in 0.046s
2: solved... in 0.02s
1: solved... in 0.042s
2: solved... in 0.021s
1: solved... in 0.046s
2: solved... in 0.021s
1: solved... in 0.043s
2: solved... in 0.02s
1: solved... in 0.049s
2: solved... in 0.021s
1: solved... in 0.042s
2: solved... in 0.02s
1: solved... in 0.046s
2: solved... in 0.021s
1: solved... in 0.043s
2: solved... in 0.02s
1: solved... in 0.046s
2: solved... in 0.021s
1: solved... in 0.042s
2: solved... in 0.02s
1: solved... in 0.047s
2: solved... in 0.02s
1: solved... in 0.043s
2: solved... in 0.02s
1: solved... in 0.046s
2: solved... in 0.038s
1: solved... in 0.045s
2: solved... in 0.02s
1: solved... in 0.043s
2: solved... in 0.02s
1: solved... in 0.042s
2: solved... in 0.02s
1: solved... in 0.046s
2: solved... in 0.02s
1: solved... in 0.043s
2: solved... in 0.027s
1: solved... in 0.047s
2: solved... in 0.021s
1: solved... in 0.042s
2: solved... in 0.021s
1: solved... in 0.045s
2: solved... in 0.02s
1: solved... in 0.05s
2: solved... in 0.021s
1: solved... in 0.046s
2: solved... in 0.021s
1: solved... in 0.042s
2: solved... in 0.02s
1: solved... in 0.051s
2: solved... in 0.022s
1: solved... in 0.043s
2: solved... in 0.021s
1: solved... in 0.046s
2: solved... in 0.022s
1: solved... in 0.042s
2: solved... in 0.021s
1: solved... in 0.046s
2: solved... in 0.021s
1: solved... in 0.043s
2: solved... in 0.021s
1: solved... in 0.046s
2: solved... in 0.022s
1: solved... in 0.042s
2: solved... in 0.021s
1: solved... in 0.046s
2: solved... in 0.022s
1: solved... in 0.043s
2: solved... in 0.021s
1: solved... in 0.046s
2: solved... in 0.021s
1: solved... in 0.043s
2: solved... in 0.021s
1: solved... in 0.047s
2: solved... in 0.021s
1: solved... in 0.043s
2: solved... in 0.021s
1: solved... in 0.047s
2: solved... in 0.022s
1: solved... in 0.042s
2: solved... in 0.021s
1: solved... in 0.047s
2: solved... in 0.022s
1: solved... in 0.042s
2: solved... in 0.021s
1: solved... in 0.048s
2: solved... in 0.022s
1: solved... in 0.042s
2: solved... in 0.021s
1: solved... in 0.046s
2: solved... in 0.022s
1: solved... in 0.042s
2: solved... in 0.021s
1: solved... in 0.046s
2: solved... in 0.022s
1: solved... in 0.042s
2: solved... in 0.022s
1: solved... in 0.046s
2: solved... in 0.022s
1: solved... in 0.042s
2: solved... in 0.021s
1: solved... in 0.047s
2: solved... in 0.023s
1: solved... in 0.043s
2: solved... in 0.022s
1: solved... in 0.046s
2: solved... in 0.024s
1: solved... in 0.042s
2: solved... in 0.022s
1: solved... in 0.046s
2: solved... in 0.026s
1: solved... in 0.042s
2: solved... in 0.022s
1: solved... in 0.046s
2: solved... in 0.023s
1: solved... in 0.042s
2: solved... in 0.024s
1: solved... in 0.046s
2: solved... in 0.023s
1: solved... in 0.042s
2: solved... in 0.022s
1: solved... in 0.046s
2: solved... in 0.023s
1: solved... in 0.042s
2: solved... in 0.023s
1: solved... in 0.047s
2: solved... in 0.045s
1: solved... in 0.042s
2: solved... in 0.046s
1: solved... in 0.042s
2: solved... in 0.023s
1: solved... in 0.046s
2: solved... in 0.023s
1: solved... in 0.046s
2: solved... in 0.024s
1: solved... in 0.043s
2: solved... in 0.023s
1: solved... in 0.046s
2: solved... in 0.025s
1: solved... in 0.044s
2: solved... in 0.023s
1: solved... in 0.046s
2: solved... in 0.025s
1: solved... in 0.042s
2: solved... in 0.022s
1: solved... in 0.046s
2: solved... in 0.024s
1: solved... in 0.043s
2: solved... in 0.023s
1: solved... in 0.046s
2: solved... in 0.023s
1: solved... in 0.043s
2: solved... in 0.023s
1: solved... in 0.046s
2: solved... in 0.023s
1: solved... in 0.043s
2: solved... in 0.023s
1: solved... in 0.046s
2: solved... in 0.025s
1: solved... in 0.042s
2: solved... in 0.023s
1: solved... in 0.047s
2: solved... in 0.024s
1: solved... in 0.043s
2: solved... in 0.023s
1: solved... in 0.046s
2: solved... in 0.025s
1: solved... in 0.043s
2: solved... in 0.025s
1: solved... in 0.046s
2: solved... in 0.024s
1: solved... in 0.043s
2: solved... in 0.024s
1: solved... in 0.046s
2: solved... in 0.025s
1: solved... in 0.043s
2: solved... in 0.024s
1: solved... in 0.047s
2: solved... in 0.025s
1: solved... in 0.043s
2: solved... in 0.025s
1: solved... in 0.046s
2: solved... in 0.025s
1: solved... in 0.044s
2: solved... in 0.024s
1: solved... in 0.046s
2: solved... in 0.026s
1: solved... in 0.042s
2: solved... in 0.025s
1: solved... in 0.051s
2: solved... in 0.026s
1: solved... in 0.043s
2: solved... in 0.024s
1: solved... in 0.047s
2: solved... in 0.026s
1: solved... in 0.042s
2: solved... in 0.024s
1: solved... in 0.047s
2: solved... in 0.024s
1: solved... in 0.043s
2: solved... in 0.025s
1: solved... in 0.046s
2: solved... in 0.026s
1: solved... in 0.043s
2: solved... in 0.025s
1: solved... in 0.047s
2: solved... in 0.026s
1: solved... in 0.043s
2: solved... in 0.025s
1: solved... in 0.046s
2: solved... in 0.027s
1: solved... in 0.043s
2: solved... in 0.025s
1: solved... in 0.046s
2: solved... in 0.026s
1: solved... in 0.042s
2: solved... in 0.025s
1: solved... in 0.047s
2: solved... in 0.028s
1: solved... in 0.044s
2: solved... in 0.025s
1: solved... in 0.046s
2: solved... in 0.027s
1: solved... in 0.042s
2: solved... in 0.025s
1: solved... in 0.046s
2: solved... in 0.027s
1: solved... in 0.043s
2: solved... in 0.025s
1: solved... in 0.046s
2: solved... in 0.027s
1: solved... in 0.043s
2: solved... in 0.026s
1: solved... in 0.048s
2: solved... in 0.027s
1: solved... in 0.042s
2: solved... in 0.025s
1: solved... in 0.046s
2: solved... in 0.027s
1: solved... in 0.042s
2: solved... in 0.025s
1: solved... in 0.046s
2: solved... in 0.027s
1: solved... in 0.042s
2: solved... in 0.026s
1: solved... in 0.046s
2: solved... in 0.027s
1: solved... in 0.044s
2: solved... in 0.025s
1: solved... in 0.047s
2: solved... in 0.027s
1: solved... in 0.042s
2: solved... in 0.025s
1: solved... in 0.047s
2: solved... in 0.028s
1: solved... in 0.043s
2: solved... in 0.026s
1: solved... in 0.046s
2: solved... in 0.028s
1: solved... in 0.043s
2: solved... in 0.026s
1: solved... in 0.047s
2: solved... in 0.028s
1: solved... in 0.043s
2: solved... in 0.026s
1: solved... in 0.046s
2: solved... in 0.028s
1: solved... in 0.042s
2: solved... in 0.027s
1: solved... in 0.047s
2: solved... in 0.028s
1: solved... in 0.042s
2: solved... in 0.026s
1: solved... in 0.046s
2: solved... in 0.028s
1: solved... in 0.042s
2: solved... in 0.026s
1: solved... in 0.046s
2: solved... in 0.028s
1: solved... in 0.043s
2: solved... in 0.026s
1: solved... in 0.047s
2: solved... in 0.029s
1: solved... in 0.043s
2: solved... in 0.026s
1: solved... in 0.047s
2: solved... in 0.028s
1: solved... in 0.043s
2: solved... in 0.027s
1: solved... in 0.046s
2: solved... in 0.029s
1: solved... in 0.043s
2: solved... in 0.027s
1: solved... in 0.046s
2: solved... in 0.028s
1: solved... in 0.052s
2: solved... in 0.027s
1: solved... in 0.048s
2: solved... in 0.029s
1: solved... in 0.042s
2: solved... in 0.027s
1: solved... in 0.046s
2: solved... in 0.028s
1: solved... in 0.046s
2: solved... in 0.027s
1: solved... in 0.046s
2: solved... in 0.029s
1: solved... in 0.042s
2: solved... in 0.027s
1: solved... in 0.047s
2: solved... in 0.029s
1: solved... in 0.044s
2: solved... in 0.028s
1: solved... in 0.046s
2: solved... in 0.029s
1: solved... in 0.042s
2: solved... in 0.027s
1: solved... in 0.047s
2: solved... in 0.029s
1: solved... in 0.042s
2: solved... in 0.028s
1: solved... in 0.046s
2: solved... in 0.029s
1: solved... in 0.043s
2: solved... in 0.027s
1: solved... in 0.048s
2: solved... in 0.03s
1: solved... in 0.043s
2: solved... in 0.028s
1: solved... in 0.046s
2: solved... in 0.029s
1: solved... in 0.051s
2: solved... in 0.029s
1: solved... in 0.047s
2: solved... in 0.029s
1: solved... in 0.042s
2: solved... in 0.028s
1: solved... in 0.046s
2: solved... in 0.03s
1: solved... in 0.044s
2: solved... in 0.028s
1: solved... in 0.046s
2: solved... in 0.03s
1: solved... in 0.042s
2: solved... in 0.028s
1: solved... in 0.047s
2: solved... in 0.031s
1: solved... in 0.043s
2: solved... in 0.028s
1: solved... in 0.051s
2: solved... in 0.03s
1: solved... in 0.042s
2: solved... in 0.028s
1: solved... in 0.047s
2: solved... in 0.031s
1: solved... in 0.042s
2: solved... in 0.029s
1: solved... in 0.046s
2: solved... in 0.03s
1: solved... in 0.042s
2: solved... in 0.029s
1: solved... in 0.047s
2: solved... in 0.03s
1: solved... in 0.043s
2: solved... in 0.031s
1: solved... in 0.046s
2: solved... in 0.031s
1: solved... in 0.044s
2: solved... in 0.028s
1: solved... in 0.046s
2: solved... in 0.031s
1: solved... in 0.042s
2: solved... in 0.029s
1: solved... in 0.046s
2: solved... in 0.032s
1: solved... in 0.043s
2: solved... in 0.028s
1: solved... in 0.046s
2: solved... in 0.032s
1: solved... in 0.042s
2: solved... in 0.029s
1: solved... in 0.047s
2: solved... in 0.031s
1: solved... in 0.048s
2: solved... in 0.029s
1: solved... in 0.046s
2: solved... in 0.031s
1: solved... in 0.045s
2: solved... in 0.029s
1: solved... in 0.046s
2: solved... in 0.031s
1: solved... in 0.045s
2: solved... in 0.029s
1: solved... in 0.046s
2: solved... in 0.106s
1: solved... in 0.048s
2: solved... in 0.032s
1: solved... in 0.043s
2: solved... in 0.032s
1: solved... in 0.042s
2: solved... in 0.03s
1: solved... in 0.05s
2: solved... in 0.031s
1: solved... in 0.042s
2: solved... in 0.029s
1: solved... in 0.046s
2: solved... in 0.031s
1: solved... in 0.042s
2: solved... in 0.03s
1: solved... in 0.048s
2: solved... in 0.031s
1: solved... in 0.042s
2: solved... in 0.029s
1: solved... in 0.046s
2: solved... in 0.031s
1: solved... in 0.043s
2: solved... in 0.03s
1: solved... in 0.045s
2: solved... in 0.032s
1: solved... in 0.043s
2: solved... in 0.03s
1: solved... in 0.046s
2: solved... in 0.043s
1: solved... in 0.043s
2: solved... in 0.03s
1: solved... in 0.046s
2: solved... in 0.032s
1: solved... in 0.042s
2: solved... in 0.029s
1: solved... in 0.049s
2: solved... in 0.031s
1: solved... in 0.043s
2: solved... in 0.03s
1: solved... in 0.046s
2: solved... in 0.032s
1: solved... in 0.042s
2: solved... in 0.031s
1: solved... in 0.048s
2: solved... in 0.032s
1: solved... in 0.043s
2: solved... in 0.03s
1: solved... in 0.046s
2: solved... in 0.032s
1: solved... in 0.047s
2: solved... in 0.03s
1: solved... in 0.046s
2: solved... in 0.033s
1: solved... in 0.042s
2: solved... in 0.03s
1: solved... in 0.046s
2: solved... in 0.033s
1: solved... in 0.042s
2: solved... in 0.03s
1: solved... in 0.046s
2: solved... in 0.032s
1: solved... in 0.043s
2: solved... in 0.031s
1: solved... in 0.046s
2: solved... in 0.032s
1: solved... in 0.042s
2: solved... in 0.03s
1: solved... in 0.048s
2: solved... in 0.033s
1: solved... in 0.042s
2: solved... in 0.031s
1: solved... in 0.047s
2: solved... in 0.034s
1: solved... in 0.042s
2: solved... in 0.031s
1: solved... in 0.046s
2: solved... in 0.034s
1: solved... in 0.042s
2: solved... in 0.03s
1: solved... in 0.046s
2: solved... in 0.034s
1: solved... in 0.042s
2: solved... in 0.031s
1: solved... in 0.046s
2: solved... in 0.031s
1: solved... in 0.042s
2: solved... in 0.031s
1: solved... in 0.041s
2: solved... in 0.032s
1: solved... in 0.05s
2: solved... in 0.032s
1: solved... in 0.051s
2: solved... in 0.039s
1: solved... in 0.051s
2: solved... in 0.031s
1: solved... in 0.047s
2: solved... in 0.032s
1: solved... in 0.047s
2: solved... in 0.032s
1: solved... in 0.041s
2: solved... in 0.033s
1: solved... in 0.047s
2: solved... in 0.032s
1: solved... in 0.045s
2: solved... in 0.033s
1: solved... in 0.045s
2: solved... in 0.033s
1: solved... in 0.041s
2: solved... in 0.033s
1: solved... in 0.041s
2: solved... in 0.033s
1: solved... in 0.067s
2: solved... in 0.033s
1: solved... in 0.041s
2: solved... in 0.033s
1: solved... in 0.043s
2: solved... in 0.032s
1: solved... in 0.067s
2: solved... in 0.033s
1: solved... in 0.045s
2: solved... in 0.034s
1: solved... in 0.065s
2: solved... in 0.033s
1: solved... in 0.046s
2: solved... in 0.034s
1: solved... in 0.066s
2: solved... in 0.034s
1: solved... in 0.046s
2: solved... in 0.034s
1: solved... in 0.045s
2: solved... in 0.035s
1: solved... in 0.067s
2: solved... in 0.034s
1: solved... in 0.066s
2: solved... in 0.033s
1: solved... in 0.066s
2: solved... in 0.035s
1: solved... in 0.066s
2: solved... in 0.035s
1: solved... in 0.066s
2: solved... in 0.034s
1: solved... in 0.066s
2: solved... in 0.036s
1: solved... in 0.066s
2: solved... in 0.043s
1: solved... in 0.066s
2: solved... in 0.035s
1: solved... in 0.046s
2: solved... in 0.036s
1: solved... in 0.066s
2: solved... in 0.035s
1: solved... in 0.066s
2: solved... in 0.037s
1: solved... in 0.066s
2: solved... in 0.038s
1: solved... in 0.066s
2: solved... in 0.037s
1: solved... in 0.066s
2: solved... in 0.034s
1: solved... in 0.045s
2: solved... in 0.038s
1: solved... in 0.066s
2: solved... in 0.035s
1: solved... in 0.045s
2: solved... in 0.038s
1: solved... in 0.065s
2: solved... in 0.037s
1: solved... in 0.046s
2: solved... in 0.038s
1: solved... in 0.066s
2: solved... in 0.037s
1: solved... in 0.045s
2: solved... in 0.038s
1: solved... in 0.066s
2: solved... in 0.036s
1: solved... in 0.045s
2: solved... in 0.038s
1: solved... in 0.066s
2: solved... in 0.04s
1: solved... in 0.047s
2: solved... in 0.039s
1: solved... in 0.066s
2: solved... in 0.036s
1: solved... in 0.045s
2: solved... in 0.038s
1: solved... in 0.068s
2: solved... in 0.037s
1: solved... in 0.046s
2: solved... in 0.038s
1: solved... in 0.066s
2: solved... in 0.035s
1: solved... in 0.047s
2: solved... in 0.039s
1: solved... in 0.065s
2: solved... in 0.039s
1: solved... in 0.046s
2: solved... in 0.039s
1: solved... in 0.067s
2: solved... in 0.039s
1: solved... in 0.046s
2: solved... in 0.039s
1: solved... in 0.065s
2: solved... in 0.037s
1: solved... in 0.046s
2: solved... in 0.04s
1: solved... in 0.066s
2: solved... in 0.038s
1: solved... in 0.046s
2: solved... in 0.039s
1: solved... in 0.066s
2: solved... in 0.037s
1: solved... in 0.045s
2: solved... in 0.04s
1: solved... in 0.067s
2: solved... in 0.04s
1: solved... in 0.046s
2: solved... in 0.041s
1: solved... in 0.066s
2: solved... in 0.039s
1: solved... in 0.045s
2: solved... in 0.041s
1: solved... in 0.066s
2: solved... in 0.039s
1: solved... in 0.048s
2: solved... in 0.04s
1: solved... in 0.068s
2: solved... in 0.038s
1: solved... in 0.048s
2: solved... in 0.043s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 14/14
Unrolled calls: Set((r43 == listSize(cs75)), (r38 == insert(cs158, cc69)), (r28 == insert(cs106, cc49)), (r29 == insert(cs112, ir7)), (r34 == insert(cs146, ir9)), (r33 == insert(cs127, cc52)), (r35 == insert(cs151, ir9)), (r40 == insert(cs171, ir11)), (r30 == insert(cs119, ir7)), (r42 == listSize(cs180)), (r39 == insert(cs164, ir11)), (r44 == listSize(cs86)), (r41 == listSize(cs179)), (r45 == listSize(cs93)))
Unrolling (r41 == listSize(cs179))
Unrolling (r42 == listSize(cs180))
Unrolling (r43 == listSize(cs75))
Unrolling (r45 == listSize(cs93))
Unrolling (r44 == listSize(cs86))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.048s
2: solved... in 0.006s
1: solved... in 0.045s
2: solved... in 0.006s
1: solved... in 0.045s
2: solved... in 0.006s
1: solved... in 0.045s
2: solved... in 0.006s
1: solved... in 0.047s
2: solved... in 0.006s
1: solved... in 0.049s
2: solved... in 0.007s
1: solved... in 0.062s
2: solved... in 0.006s
1: solved... in 0.048s
2: solved... in 0.007s
1: solved... in 0.049s
2: solved... in 0.006s
1: solved... in 0.048s
2: solved... in 0.007s
1: solved... in 0.048s
2: solved... in 0.006s
1: solved... in 0.049s
2: solved... in 0.007s
1: solved... in 0.049s
2: solved... in 0.007s
1: solved... in 0.049s
2: solved... in 0.007s
1: solved... in 0.047s
2: solved... in 0.007s
1: solved... in 0.048s
2: solved... in 0.007s
1: solved... in 0.045s
2: solved... in 0.007s
1: solved... in 0.045s
2: solved... in 0.008s
1: solved... in 0.047s
2: solved... in 0.008s
1: solved... in 0.044s
2: solved... in 0.008s
1: solved... in 0.048s
2: solved... in 0.008s
1: solved... in 0.046s
2: solved... in 0.008s
1: solved... in 0.048s
2: solved... in 0.008s
1: solved... in 0.049s
2: solved... in 0.008s
1: solved... in 0.045s
2: solved... in 0.008s
1: solved... in 0.048s
2: solved... in 0.009s
1: solved... in 0.045s
2: solved... in 0.009s
1: solved... in 0.048s
2: solved... in 0.009s
1: solved... in 0.048s
2: solved... in 0.01s
1: solved... in 0.048s
2: solved... in 0.009s
1: solved... in 0.048s
2: solved... in 0.01s
1: solved... in 0.048s
2: solved... in 0.009s
1: solved... in 0.045s
2: solved... in 0.01s
1: solved... in 0.049s
2: solved... in 0.01s
1: solved... in 0.044s
2: solved... in 0.01s
1: solved... in 0.044s
2: solved... in 0.01s
1: solved... in 0.046s
2: solved... in 0.011s
1: solved... in 0.029s
[[34m Info  [0m] - Found inductive invariant: insert --> ((((1 * res10._2) + (-23 * listSize(inp))) + -2) <= 0)
[[34m Info  [0m] - Found inductive invariant: listSize --> (((0 * #res) + 0) <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[34m Info  [0m] - Invariant verified
[[34m Info  [0m] - considering function create...
[[34m Info  [0m] Body: (let (e227,t235 := insert(inp, Leaf())) in
            (e227, (1 + (1 + t235))))
[[34m Info  [0m] Post: true
falttened Body: ((res12 == tp108) && (arg108 == (1 + (1 + t235))) && (tp108 == (e227, arg108)) && (tres14 == r61) && (cc72 == Leaf()) && (r61 == insert(inp, cc72)) && (e227 == ts142) && (ts142 == tres14._1) && (t235 == ts143) && (ts143 == tres14._2))
Flattened Post: ((ts144 > ((a?2 * r62) + c?2)) && (ts144 == res12._2) && (r62 == listSize(inp)))
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.004s
2: solved... in 0.005s
1: solved... in 0.004s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.004s
2: solved... in 0.005s
1: solved... in 0.004s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.004s
2: solved... in 0.005s
1: solved... in 0.004s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.004s
2: solved... in 0.005s
1: solved... in 0.004s
2: solved... in 0.005s
1: solved... in 0.004s
2: solved... in 0.005s
1: solved... in 0.004s
2: solved... in 0.005s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.005s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.006s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.03s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.01s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.004s
2: solved... in 0.013s
1: solved... in 0.004s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.004s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.004s
2: solved... in 0.013s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.004s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.004s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.004s
2: solved... in 0.014s
1: solved... in 0.004s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.004s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.004s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.013s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 2/2
Unrolled calls: Set((r61 == insert(inp, cc72)), (r62 == listSize(inp)))
Creating VC for insert
Unrolling (r61 == insert(inp, cc72))
Creating VC for listSize
Unrolling (r62 == listSize(inp))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.022s
2: solved... in 0.005s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 10/10
Unrolled calls: Set((r68 == listSize(inp)), (r71 == insert(cs212, cc83)), (r74 == listSize(cs238)), (r75 == listSize(cs239)), (r73 == insert(cs228, ir15)), (r66 == insert(cs203, ir13)), (r76 == listSize(inp)), (r67 == insert(cs208, ir13)), (r65 == insert(cs186, cc73)), (r72 == insert(cs225, ir15)))
Unrolling (r68 == listSize(inp))
Unrolling (r65 == insert(cs186, cc73))
Unrolling (r67 == insert(cs208, ir13))
Unrolling (r76 == listSize(inp))
Unrolling (r66 == insert(cs203, ir13))
Unrolling (r72 == insert(cs225, ir15))
Unrolling (r75 == listSize(cs239))
Unrolling (r73 == insert(cs228, ir15))
Unrolling (r71 == insert(cs212, cc83))
Unrolling (r74 == listSize(cs238))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.126s
2: solved... in 0.006s
1: solved... in 0.135s
2: solved... in 0.006s
1: solved... in 0.111s
2: solved... in 0.004s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 28/28
Unrolled calls: Set((r103 == insert(cs364, ir25)), (r113 == listSize(cs203)), (r85 == insert(cs272, cc110)), (r93 == insert(cs316, ir21)), (r107 == insert(cs373, cc143)), (r99 == listSize(cs346)), (r77 == listSize(cs240)), (r116 == listSize(cs212)), (r87 == insert(cs291, ir19)), (r110 == listSize(cs399)), (r86 == insert(cs284, ir19)), (r114 == listSize(cs225)), (r102 == insert(cs352, cc140)), (r104 == insert(cs369, ir25)), (r111 == listSize(cs186)), (r112 == listSize(cs208)), (r82 == insert(cs259, ir17)), (r88 == listSize(cs293)), (r91 == insert(cs299, cc120)), (r96 == insert(cs325, cc130)), (r115 == listSize(cs228)), (r81 == insert(cs254, ir17)), (r80 == insert(cs246, cc100)), (r98 == insert(cs338, ir23)), (r109 == insert(cs389, ir27)), (r92 == insert(cs311, ir21)), (r108 == insert(cs384, ir27)), (r97 == insert(cs331, ir23)))
Unrolling (r88 == listSize(cs293))
Unrolling (r112 == listSize(cs208))
Unrolling (r113 == listSize(cs203))
Unrolling (r111 == listSize(cs186))
Unrolling (r115 == listSize(cs228))
Unrolling (r114 == listSize(cs225))
Unrolling (r77 == listSize(cs240))
Unrolling (r116 == listSize(cs212))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.127s
2: solved... in 0.005s
1: solved... in 0.12s
2: solved... in 0.006s
1: solved... in 0.113s
2: solved... in 0.006s
1: solved... in 0.132s
2: solved... in 0.006s
1: solved... in 0.125s
2: solved... in 0.006s
1: solved... in 0.131s
2: solved... in 0.006s
1: solved... in 0.129s
2: solved... in 0.006s
1: solved... in 0.129s
2: solved... in 0.007s
1: solved... in 0.128s
2: solved... in 0.006s
1: solved... in 0.128s
2: solved... in 0.008s
1: solved... in 0.127s
2: solved... in 0.007s
1: solved... in 0.12s
2: solved... in 0.007s
1: solved... in 0.123s
2: solved... in 0.007s
1: solved... in 0.121s
2: solved... in 0.007s
1: solved... in 0.137s
2: solved... in 0.007s
1: solved... in 0.121s
2: solved... in 0.008s
1: solved... in 0.121s
2: solved... in 0.008s
1: solved... in 0.13s
2: solved... in 0.008s
1: solved... in 0.123s
2: solved... in 0.008s
1: solved... in 0.124s
2: solved... in 0.008s
1: solved... in 0.121s
2: solved... in 0.008s
1: solved... in 0.132s
2: solved... in 0.008s
1: solved... in 0.122s
2: solved... in 0.008s
1: solved... in 0.132s
2: solved... in 0.008s
1: solved... in 0.13s
2: solved... in 0.009s
1: solved... in 0.124s
2: solved... in 0.009s
1: solved... in 0.128s
2: solved... in 0.009s
1: solved... in 0.129s
2: solved... in 0.009s
1: solved... in 0.127s
2: solved... in 0.009s
1: solved... in 0.13s
2: solved... in 0.011s
1: solved... in 0.128s
2: solved... in 0.009s
1: solved... in 0.129s
2: solved... in 0.009s
1: solved... in 0.124s
2: solved... in 0.01s
1: solved... in 0.122s
2: solved... in 0.01s
1: solved... in 0.126s
2: solved... in 0.01s
1: solved... in 0.13s
2: solved... in 0.01s
1: solved... in 0.133s
2: solved... in 0.01s
1: solved... in 0.127s
2: solved... in 0.01s
1: solved... in 0.129s
2: solved... in 0.01s
1: solved... in 0.13s
2: solved... in 0.011s
1: solved... in 0.121s
2: solved... in 0.01s
1: solved... in 0.121s
2: solved... in 0.011s
1: solved... in 0.121s
2: solved... in 0.011s
1: solved... in 0.131s
2: solved... in 0.011s
1: solved... in 0.127s
2: solved... in 0.011s
1: solved... in 0.126s
2: solved... in 0.011s
1: solved... in 0.127s
2: solved... in 0.011s
1: solved... in 0.135s
2: solved... in 0.011s
1: solved... in 0.128s
2: solved... in 0.011s
1: solved... in 0.125s
2: solved... in 0.011s
1: solved... in 0.127s
2: solved... in 0.012s
1: solved... in 0.133s
2: solved... in 0.012s
1: solved... in 0.127s
2: solved... in 0.012s
1: solved... in 0.115s
2: solved... in 0.013s
1: solved... in 0.116s
2: solved... in 0.012s
1: solved... in 0.115s
2: solved... in 0.014s
1: solved... in 0.118s
2: solved... in 0.013s
1: solved... in 0.118s
2: solved... in 0.012s
1: solved... in 0.132s
2: solved... in 0.012s
1: solved... in 0.126s
2: solved... in 0.012s
1: solved... in 0.134s
2: solved... in 0.012s
1: solved... in 0.127s
2: solved... in 0.012s
1: solved... in 0.129s
2: solved... in 0.013s
1: solved... in 0.123s
2: solved... in 0.014s
1: solved... in 0.123s
2: solved... in 0.013s
1: solved... in 0.122s
2: solved... in 0.012s
1: solved... in 0.123s
2: solved... in 0.013s
1: solved... in 0.124s
2: solved... in 0.013s
1: solved... in 0.122s
2: solved... in 0.015s
1: solved... in 0.118s
2: solved... in 0.015s
1: solved... in 0.115s
2: solved... in 0.015s
1: solved... in 0.119s
2: solved... in 0.016s
1: solved... in 0.116s
2: solved... in 0.013s
1: solved... in 0.123s
2: solved... in 0.013s
1: solved... in 0.122s
2: solved... in 0.014s
1: solved... in 0.123s
2: solved... in 0.014s
1: solved... in 0.121s
2: solved... in 0.014s
1: solved... in 0.116s
2: solved... in 0.015s
1: solved... in 0.122s
2: solved... in 0.014s
1: solved... in 0.048s
[[34m Info  [0m] - Found inductive invariant: create --> ((((-23 * listSize(inp)) + (1 * res12._2)) + -4) <= 0)
[[34m Info  [0m] - Found inductive invariant: insert --> ((((1 * res10._2) + (-23 * listSize(inp))) + -2) <= 0)
[[34m Info  [0m] - Found inductive invariant: listSize --> (((-1 * #res) + 0) <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[34m Info  [0m] - Invariant verified
[[34m Info  [0m] - considering function find...
[[34m Info  [0m] Body: if (inp.isInstanceOf[Nil])
            (t, 1)
          else
            (let (e2,t6 := if ((inp.isInstanceOf[Cons] ∧ inp.tail.isInstanceOf[Nil]))
              (t, 4)
            else
              (let (e5,t9 := if ((inp.isInstanceOf[Cons] ∧ inp.tail.isInstanceOf[Cons]))
                (let (e7,t11 := if (t.isInstanceOf[Leaf])
                  (t, 1)
                else
                  (let (e10,t14 := if ((inp.tail.head > 0))
                    (let (e12,t16 := (let (e15,t19 := find(inp.tail, t.left)) in
                      (e15, (1 + (1 + (1 + t19)))))) in
                      (e12, (3 + t16)))
                  else
                    (let (e18,t22 := (let (e21,t25 := find(inp.tail, t.right)) in
                      (e21, (1 + (1 + (1 + t25)))))) in
                      (e18, (3 + t22)))) in
                    (e10, (1 + t14)))) in
                  (e7, (4 + t11)))
              else
                (t, 4)) in
                (e5, (4 + t9)))) in
              (e2, (1 + t6)))
[[34m Info  [0m] Post: true
falttened Body: ((res9 == ifres152) && ((ci272 && (ci272 == inp.isInstanceOf[Nil]) && (ifres152 == tp253) && (arg253 == 1) && (tp253 == (t, arg253))) || (!(ci273) && (ci273 == inp.isInstanceOf[Nil]) && (ifres152 == tp254) && (arg254 == (1 + t6)) && (tp254 == (e2, arg254)) && ((ci274 && (ci274 == inp.isInstanceOf[Cons]) && ci275 && (cs408 == inp.tail) && (ci275 == cs408.isInstanceOf[Nil]) && (ifres153 == tp255) && (arg255 == 4) && (tp255 == (t, arg255))) || (((!(ci276) && (ci276 == inp.isInstanceOf[Cons])) || (!(ci277) && (cs409 == inp.tail) && (ci277 == cs409.isInstanceOf[Nil]))) && (ifres153 == tp256) && (arg256 == (4 + t9)) && (tp256 == (e5, arg256)) && ((ci278 && (ci278 == inp.isInstanceOf[Cons]) && ci279 && (cs410 == inp.tail) && (ci279 == cs410.isInstanceOf[Cons]) && (ifres154 == tp257) && (arg257 == (4 + t11)) && (tp257 == (e7, arg257)) && ((ci280 && (ci280 == t.isInstanceOf[Leaf]) && (ifres155 == tp258) && (arg258 == 1) && (tp258 == (t, arg258))) || (!(ci281) && (ci281 == t.isInstanceOf[Leaf]) && (ifres155 == tp259) && (arg259 == (1 + t14)) && (tp259 == (e10, arg259)) && (((cs412 > 0) && (cs411 == inp.tail) && (cs412 == cs411.head) && (ifres156 == tp260) && (arg260 == (3 + t16)) && (tp260 == (e12, arg260)) && (e12 == e15) && (tres39 == r145) && (cs413 == inp.tail) && (cs414 == t.left) && (r145 == find(cs413, cs414)) && (e15 == ts349) && (ts349 == tres39._1) && (t16 == (1 + (1 + (1 + t19)))) && (t19 == ts350) && (ts350 == tres39._2)) || ((cs416 <= 0) && (cs415 == inp.tail) && (cs416 == cs415.head) && (ifres156 == tp261) && (arg261 == (3 + t22)) && (tp261 == (e18, arg261)) && (t22 == (1 + (1 + (1 + t25)))) && (e18 == e21) && (e21 == ts351) && (ts351 == tres40._1) && (tres40 == r146) && (cs417 == inp.tail) && (cs418 == t.right) && (r146 == find(cs417, cs418)) && (t25 == ts352) && (ts352 == tres40._2))) && (e10 == ts353) && (ts353 == ifres156._1) && (t14 == ts354) && (ts354 == ifres156._2))) && (e7 == ts355) && (ts355 == ifres155._1) && (t11 == ts356) && (ts356 == ifres155._2)) || (((!(ci282) && (ci282 == inp.isInstanceOf[Cons])) || (!(ci283) && (cs419 == inp.tail) && (ci283 == cs419.isInstanceOf[Cons]))) && (ifres154 == tp262) && (arg262 == 4) && (tp262 == (t, arg262)))) && (e5 == ts357) && (ts357 == ifres154._1) && (t9 == ts358) && (ts358 == ifres154._2))) && (e2 == ts359) && (ts359 == ifres153._1) && (t6 == ts360) && (ts360 == ifres153._2))))
Flattened Post: ((ts361 > ((a? * r147) + c?)) && (ts361 == res9._2) && (r147 == listSize(inp)))
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.006s
2: solved... in 0.005s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.005s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.005s
1: solved... in 0.006s
2: solved... in 0.005s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.006s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.014s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.012s
1: solved... in 0.008s
2: solved... in 0.013s
1: solved... in 0.008s
2: solved... in 0.013s
1: solved... in 0.008s
2: solved... in 0.013s
1: solved... in 0.008s
2: solved... in 0.013s
1: solved... in 0.008s
2: solved... in 0.013s
1: solved... in 0.007s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.012s
1: solved... in 0.008s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.012s
1: solved... in 0.008s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.013s
1: solved... in 0.007s
2: solved... in 0.013s
1: solved... in 0.007s
2: solved... in 0.013s
1: solved... in 0.007s
2: solved... in 0.013s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 3/3
Unrolled calls: Set((r145 == find(cs413, cs414)), (r146 == find(cs417, cs418)), (r147 == listSize(inp)))
Unrolling (r145 == find(cs413, cs414))
Unrolling (r146 == find(cs417, cs418))
Creating VC for listSize
Unrolling (r147 == listSize(inp))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.014s
2: solved... in 0.005s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.005s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.005s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.015s
2: solved... in 0.006s
1: solved... in 0.015s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.02s
2: solved... in 0.007s
1: solved... in 0.015s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.016s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.034s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.007s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.03s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.013s
2: solved... in 0.009s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.01s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.015s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.015s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.015s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.015s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.015s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.015s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.011s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.015s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.015s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.012s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.016s
2: solved... in 0.014s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.013s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.012s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.013s
2: solved... in 0.014s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.013s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.013s
2: solved... in 0.015s
1: solved... in 0.015s
2: solved... in 0.015s
1: solved... in 0.016s
2: solved... in 0.016s
1: solved... in 0.015s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.015s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.015s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.014s
1: solved... in 0.013s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.015s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.013s
2: solved... in 0.016s
1: solved... in 0.013s
2: solved... in 0.016s
1: solved... in 0.015s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.013s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.015s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.013s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.013s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.02s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.013s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.016s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.017s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.015s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.023s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.015s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.013s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.018s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.015s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.013s
2: solved... in 0.02s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.015s
2: solved... in 0.019s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.015s
2: solved... in 0.02s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.014s
2: solved... in 0.022s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.013s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.022s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.013s
2: solved... in 0.022s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.013s
2: solved... in 0.022s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.022s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.013s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.022s
1: solved... in 0.014s
2: solved... in 0.02s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.022s
1: solved... in 0.013s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.022s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.015s
2: solved... in 0.023s
1: solved... in 0.015s
2: solved... in 0.024s
1: solved... in 0.015s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.023s
1: solved... in 0.015s
2: solved... in 0.023s
1: solved... in 0.015s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.022s
1: solved... in 0.014s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.022s
1: solved... in 0.013s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.021s
1: solved... in 0.014s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.022s
1: solved... in 0.015s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.022s
1: solved... in 0.014s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.022s
1: solved... in 0.013s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.022s
1: solved... in 0.013s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.013s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.022s
1: solved... in 0.014s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.022s
1: solved... in 0.013s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.015s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.023s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.013s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.015s
2: solved... in 0.024s
1: solved... in 0.021s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.042s
1: solved... in 0.014s
2: solved... in 0.039s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.013s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.015s
2: solved... in 0.026s
1: solved... in 0.013s
2: solved... in 0.025s
1: solved... in 0.013s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.024s
1: solved... in 0.013s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.027s
1: solved... in 0.014s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.027s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.013s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.025s
1: solved... in 0.014s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.027s
1: solved... in 0.014s
2: solved... in 0.026s
1: solved... in 0.013s
2: solved... in 0.046s
1: solved... in 0.014s
2: solved... in 0.027s
1: solved... in 0.014s
2: solved... in 0.027s
1: solved... in 0.014s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.027s
1: solved... in 0.014s
2: solved... in 0.027s
1: solved... in 0.014s
2: solved... in 0.027s
1: solved... in 0.013s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.015s
2: solved... in 0.026s
1: solved... in 0.013s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.026s
1: solved... in 0.022s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.027s
1: solved... in 0.014s
2: solved... in 0.027s
1: solved... in 0.014s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.015s
2: solved... in 0.027s
1: solved... in 0.019s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.026s
1: solved... in 0.014s
2: solved... in 0.027s
1: solved... in 0.014s
2: solved... in 0.026s
1: solved... in 0.013s
2: solved... in 0.027s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.015s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.027s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.027s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.015s
2: solved... in 0.027s
1: solved... in 0.014s
2: solved... in 0.03s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.015s
2: solved... in 0.03s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.013s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.015s
2: solved... in 0.03s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.03s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.013s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.03s
1: solved... in 0.015s
2: solved... in 0.03s
1: solved... in 0.014s
2: solved... in 0.03s
1: solved... in 0.014s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.013s
2: solved... in 0.028s
1: solved... in 0.014s
2: solved... in 0.03s
1: solved... in 0.015s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.03s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.03s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.03s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.03s
1: solved... in 0.015s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.031s
1: solved... in 0.014s
2: solved... in 0.032s
1: solved... in 0.014s
2: solved... in 0.03s
1: solved... in 0.014s
2: solved... in 0.03s
1: solved... in 0.014s
2: solved... in 0.031s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.032s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.031s
1: solved... in 0.014s
2: solved... in 0.03s
1: solved... in 0.013s
2: solved... in 0.03s
1: solved... in 0.014s
2: solved... in 0.029s
1: solved... in 0.014s
2: solved... in 0.03s
1: solved... in 0.014s
2: solved... in 0.03s
1: solved... in 0.016s
2: solved... in 0.031s
1: solved... in 0.016s
2: solved... in 0.03s
1: solved... in 0.016s
2: solved... in 0.03s
1: solved... in 0.016s
2: solved... in 0.031s
1: solved... in 0.016s
2: solved... in 0.031s
1: solved... in 0.016s
2: solved... in 0.03s
1: solved... in 0.015s
2: solved... in 0.03s
1: solved... in 0.015s
2: solved... in 0.033s
1: solved... in 0.016s
2: solved... in 0.031s
1: solved... in 0.016s
2: solved... in 0.031s
1: solved... in 0.015s
2: solved... in 0.031s
1: solved... in 0.016s
2: solved... in 0.031s
1: solved... in 0.016s
2: solved... in 0.036s
1: solved... in 0.015s
2: solved... in 0.031s
1: solved... in 0.016s
2: solved... in 0.032s
1: solved... in 0.016s
2: solved... in 0.032s
1: solved... in 0.016s
2: solved... in 0.031s
1: solved... in 0.016s
2: solved... in 0.032s
1: solved... in 0.015s
2: solved... in 0.033s
1: solved... in 0.016s
2: solved... in 0.034s
1: solved... in 0.015s
2: solved... in 0.032s
1: solved... in 0.014s
2: solved... in 0.033s
1: solved... in 0.014s
2: solved... in 0.033s
1: solved... in 0.014s
2: solved... in 0.032s
1: solved... in 0.015s
2: solved... in 0.032s
1: solved... in 0.014s
2: solved... in 0.033s
1: solved... in 0.016s
2: solved... in 0.033s
1: solved... in 0.015s
2: solved... in 0.033s
1: solved... in 0.018s
2: solved... in 0.033s
1: solved... in 0.016s
2: solved... in 0.034s
1: solved... in 0.016s
2: solved... in 0.034s
1: solved... in 0.014s
2: solved... in 0.034s
1: solved... in 0.016s
2: solved... in 0.034s
1: solved... in 0.015s
2: solved... in 0.034s
1: solved... in 0.015s
2: solved... in 0.033s
1: solved... in 0.015s
2: solved... in 0.034s
1: solved... in 0.015s
2: solved... in 0.035s
1: solved... in 0.015s
2: solved... in 0.037s
1: solved... in 0.016s
2: solved... in 0.034s
1: solved... in 0.016s
2: solved... in 0.034s
1: solved... in 0.013s
2: solved... in 0.034s
1: solved... in 0.016s
2: solved... in 0.034s
1: solved... in 0.015s
2: solved... in 0.034s
1: solved... in 0.016s
2: solved... in 0.036s
1: solved... in 0.016s
2: solved... in 0.035s
1: solved... in 0.016s
2: solved... in 0.035s
1: solved... in 0.015s
2: solved... in 0.035s
1: solved... in 0.015s
2: solved... in 0.035s
1: solved... in 0.014s
2: solved... in 0.035s
1: solved... in 0.014s
2: solved... in 0.036s
1: solved... in 0.016s
2: solved... in 0.038s
1: solved... in 0.015s
2: solved... in 0.037s
1: solved... in 0.015s
2: solved... in 0.035s
1: solved... in 0.015s
2: solved... in 0.035s
1: solved... in 0.015s
2: solved... in 0.036s
1: solved... in 0.015s
2: solved... in 0.038s
1: solved... in 0.016s
2: solved... in 0.038s
1: solved... in 0.015s
2: solved... in 0.04s
1: solved... in 0.015s
2: solved... in 0.037s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 8/8
Unrolled calls: Set((r149 == find(cs429, cs430)), (r154 == listSize(cs413)), (r152 == listSize(cs444)), (r148 == find(cs425, cs426)), (r151 == find(cs441, cs442)), (r153 == listSize(cs445)), (r155 == listSize(cs417)), (r150 == find(cs437, cs438)))
Unrolling (r155 == listSize(cs417))
Unrolling (r152 == listSize(cs444))
Unrolling (r153 == listSize(cs445))
Unrolling (r154 == listSize(cs413))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.015s
2: solved... in 0.005s
1: solved... in 0.016s
2: solved... in 0.006s
1: solved... in 0.015s
2: solved... in 0.005s
1: solved... in 0.017s
2: solved... in 0.005s
1: solved... in 0.015s
2: solved... in 0.006s
1: solved... in 0.017s
2: solved... in 0.006s
1: solved... in 0.016s
2: solved... in 0.006s
1: solved... in 0.017s
2: solved... in 0.006s
1: solved... in 0.016s
2: solved... in 0.006s
1: solved... in 0.016s
2: solved... in 0.007s
1: solved... in 0.019s
2: solved... in 0.006s
1: solved... in 0.016s
2: solved... in 0.006s
1: solved... in 0.016s
2: solved... in 0.007s
1: solved... in 0.016s
2: solved... in 0.006s
1: solved... in 0.016s
2: solved... in 0.006s
1: solved... in 0.016s
2: solved... in 0.006s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.016s
2: solved... in 0.007s
1: solved... in 0.023s
2: solved... in 0.007s
1: solved... in 0.016s
2: solved... in 0.008s
1: solved... in 0.016s
2: solved... in 0.008s
1: solved... in 0.016s
2: solved... in 0.007s
1: solved... in 0.016s
2: solved... in 0.007s
1: solved... in 0.016s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.016s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.008s
1: solved... in 0.016s
2: solved... in 0.009s
1: solved... in 0.015s
2: solved... in 0.009s
1: solved... in 0.015s
2: solved... in 0.008s
1: solved... in 0.016s
2: solved... in 0.008s
1: solved... in 0.016s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.009s
1: solved... in 0.016s
2: solved... in 0.01s
1: solved... in 0.016s
2: solved... in 0.009s
1: solved... in 0.016s
2: solved... in 0.009s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.016s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.016s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.017s
2: solved... in 0.01s
1: solved... in 0.016s
2: solved... in 0.01s
1: solved... in 0.017s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.01s
1: solved... in 0.015s
2: solved... in 0.011s
1: solved... in 0.016s
2: solved... in 0.013s
1: solved... in 0.016s
2: solved... in 0.011s
1: solved... in 0.016s
2: solved... in 0.011s
1: solved... in 0.015s
2: solved... in 0.011s
1: solved... in 0.016s
2: solved... in 0.011s
1: solved... in 0.016s
2: solved... in 0.011s
1: solved... in 0.015s
2: solved... in 0.012s
1: solved... in 0.016s
2: solved... in 0.012s
1: solved... in 0.017s
2: solved... in 0.011s
1: solved... in 0.015s
2: solved... in 0.011s
1: solved... in 0.016s
2: solved... in 0.011s
1: solved... in 0.029s
2: solved... in 0.012s
1: solved... in 0.015s
2: solved... in 0.016s
1: solved... in 0.016s
2: solved... in 0.012s
1: solved... in 0.016s
2: solved... in 0.012s
1: solved... in 0.016s
2: solved... in 0.012s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.014s
1: solved... in 0.017s
2: solved... in 0.013s
1: solved... in 0.016s
2: solved... in 0.015s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.015s
2: solved... in 0.013s
1: solved... in 0.016s
2: solved... in 0.013s
1: solved... in 0.016s
2: solved... in 0.014s
1: solved... in 0.016s
2: solved... in 0.014s
1: solved... in 0.016s
2: solved... in 0.014s
1: solved... in 0.015s
2: solved... in 0.014s
1: solved... in 0.015s
2: solved... in 0.014s
1: solved... in 0.015s
2: solved... in 0.014s
1: solved... in 0.016s
2: solved... in 0.014s
1: solved... in 0.015s
2: solved... in 0.015s
1: solved... in 0.016s
2: solved... in 0.015s
1: solved... in 0.015s
2: solved... in 0.015s
1: solved... in 0.016s
2: solved... in 0.015s
1: solved... in 0.016s
2: solved... in 0.015s
1: solved... in 0.015s
2: solved... in 0.015s
1: solved... in 0.017s
2: solved... in 0.015s
1: solved... in 0.016s
2: solved... in 0.016s
1: solved... in 0.015s
2: solved... in 0.015s
1: solved... in 0.016s
2: solved... in 0.016s
1: solved... in 0.016s
2: solved... in 0.016s
1: solved... in 0.015s
2: solved... in 0.015s
1: solved... in 0.016s
2: solved... in 0.016s
1: solved... in 0.016s
2: solved... in 0.016s
1: solved... in 0.015s
2: solved... in 0.016s
1: solved... in 0.015s
2: solved... in 0.016s
1: solved... in 0.016s
2: solved... in 0.017s
1: solved... in 0.016s
2: solved... in 0.016s
1: solved... in 0.015s
2: solved... in 0.017s
1: solved... in 0.016s
2: solved... in 0.016s
1: solved... in 0.016s
2: solved... in 0.016s
1: solved... in 0.015s
2: solved... in 0.017s
1: solved... in 0.015s
2: solved... in 0.016s
1: solved... in 0.016s
2: solved... in 0.017s
1: solved... in 0.016s
2: solved... in 0.017s
1: solved... in 0.017s
2: solved... in 0.017s
1: solved... in 0.016s
2: solved... in 0.018s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.015s
2: solved... in 0.024s
1: solved... in 0.017s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.017s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.028s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.022s
1: solved... in 0.016s
2: solved... in 0.022s
1: solved... in 0.016s
2: solved... in 0.022s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.022s
1: solved... in 0.015s
2: solved... in 0.022s
1: solved... in 0.016s
2: solved... in 0.022s
1: solved... in 0.016s
2: solved... in 0.022s
1: solved... in 0.016s
2: solved... in 0.021s
1: solved... in 0.016s
2: solved... in 0.022s
1: solved... in 0.017s
2: solved... in 0.022s
1: solved... in 0.016s
2: solved... in 0.021s
1: solved... in 0.016s
2: solved... in 0.021s
1: solved... in 0.016s
2: solved... in 0.032s
1: solved... in 0.016s
2: solved... in 0.021s
1: solved... in 0.016s
2: solved... in 0.022s
1: solved... in 0.016s
2: solved... in 0.021s
1: solved... in 0.015s
2: solved... in 0.021s
1: solved... in 0.016s
2: solved... in 0.021s
1: solved... in 0.016s
2: solved... in 0.021s
1: solved... in 0.016s
2: solved... in 0.028s
1: solved... in 0.016s
2: solved... in 0.021s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.015s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.023s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.022s
1: solved... in 0.015s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.022s
1: solved... in 0.016s
2: solved... in 0.022s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.022s
1: solved... in 0.015s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.015s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.015s
2: solved... in 0.03s
1: solved... in 0.016s
2: solved... in 0.032s
1: solved... in 0.016s
2: solved... in 0.03s
1: solved... in 0.016s
2: solved... in 0.031s
1: solved... in 0.016s
2: solved... in 0.029s
1: solved... in 0.016s
2: solved... in 0.029s
1: solved... in 0.016s
2: solved... in 0.032s
1: solved... in 0.017s
2: solved... in 0.028s
1: solved... in 0.016s
2: solved... in 0.028s
1: solved... in 0.016s
2: solved... in 0.028s
1: solved... in 0.016s
2: solved... in 0.027s
1: solved... in 0.016s
2: solved... in 0.028s
1: solved... in 0.016s
2: solved... in 0.028s
1: solved... in 0.016s
2: solved... in 0.027s
1: solved... in 0.016s
2: solved... in 0.027s
1: solved... in 0.015s
2: solved... in 0.027s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.015s
2: solved... in 0.027s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.027s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.028s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.017s
2: solved... in 0.024s
1: solved... in 0.015s
2: solved... in 0.024s
1: solved... in 0.021s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.022s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.015s
2: solved... in 0.024s
1: solved... in 0.017s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.032s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.015s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.015s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.023s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.015s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.017s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.017s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.015s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.024s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.015s
2: solved... in 0.026s
1: solved... in 0.015s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.028s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.027s
1: solved... in 0.017s
2: solved... in 0.025s
1: solved... in 0.017s
2: solved... in 0.025s
1: solved... in 0.017s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.027s
1: solved... in 0.021s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.018s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.025s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.017s
2: solved... in 0.026s
1: solved... in 0.017s
2: solved... in 0.027s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.017s
2: solved... in 0.027s
1: solved... in 0.016s
2: solved... in 0.026s
1: solved... in 0.017s
2: solved... in 0.027s
1: solved... in 0.016s
2: solved... in 0.027s
1: solved... in 0.016s
2: solved... in 0.027s
1: solved... in 0.016s
2: solved... in 0.027s
1: solved... in 0.016s
2: solved... in 0.027s
1: solved... in 0.016s
2: solved... in 0.031s
1: solved... in 0.016s
2: solved... in 0.028s
1: solved... in 0.016s
2: solved... in 0.031s
1: solved... in 0.017s
2: solved... in 0.029s
1: solved... in 0.017s
2: solved... in 0.029s
1: solved... in 0.017s
2: solved... in 0.031s
1: solved... in 0.017s
2: solved... in 0.029s
1: solved... in 0.016s
2: solved... in 0.03s
1: solved... in 0.016s
2: solved... in 0.03s
1: solved... in 0.017s
2: solved... in 0.029s
1: solved... in 0.016s
2: solved... in 0.03s
1: solved... in 0.017s
2: solved... in 0.03s
1: solved... in 0.017s
2: solved... in 0.033s
1: solved... in 0.017s
2: solved... in 0.033s
1: solved... in 0.016s
2: solved... in 0.03s
1: solved... in 0.016s
2: solved... in 0.03s
1: solved... in 0.016s
2: solved... in 0.03s
1: solved... in 0.016s
2: solved... in 0.03s
1: solved... in 0.016s
2: solved... in 0.033s
1: solved... in 0.016s
2: solved... in 0.031s
1: solved... in 0.016s
2: solved... in 0.03s
1: solved... in 0.017s
2: solved... in 0.031s
1: solved... in 0.017s
2: solved... in 0.031s
1: solved... in 0.016s
2: solved... in 0.032s
1: solved... in 0.016s
2: solved... in 0.035s
1: solved... in 0.016s
2: solved... in 0.033s
1: solved... in 0.016s
2: solved... in 0.03s
1: solved... in 0.017s
2: solved... in 0.032s
1: solved... in 0.016s
2: solved... in 0.031s
1: solved... in 0.016s
2: solved... in 0.034s
1: solved... in 0.016s
2: solved... in 0.032s
1: solved... in 0.017s
2: solved... in 0.033s
1: solved... in 0.017s
2: solved... in 0.033s
1: solved... in 0.016s
2: solved... in 0.033s
1: solved... in 0.016s
2: solved... in 0.034s
1: solved... in 0.017s
2: solved... in 0.034s
1: solved... in 0.016s
2: solved... in 0.034s
1: solved... in 0.016s
2: solved... in 0.033s
1: solved... in 0.016s
2: solved... in 0.034s
1: solved... in 0.016s
2: solved... in 0.033s
1: solved... in 0.016s
2: solved... in 0.037s
1: solved... in 0.019s
2: solved... in 0.035s
1: solved... in 0.016s
2: solved... in 0.034s
1: solved... in 0.017s
2: solved... in 0.034s
1: solved... in 0.016s
2: solved... in 0.034s
1: solved... in 0.016s
2: solved... in 0.036s
1: solved... in 0.016s
2: solved... in 0.034s
1: solved... in 0.016s
2: solved... in 0.034s
1: solved... in 0.016s
2: solved... in 0.035s
1: solved... in 0.017s
2: solved... in 0.037s
1: solved... in 0.016s
2: solved... in 0.04s
1: solved... in 0.016s
2: solved... in 0.037s
1: solved... in 0.017s
2: solved... in 0.037s
1: solved... in 0.016s
2: solved... in 0.035s
1: solved... in 0.016s
2: solved... in 0.035s
1: solved... in 0.016s
2: solved... in 0.038s
1: solved... in 0.017s
2: solved... in 0.037s
1: solved... in 0.016s
2: solved... in 0.036s
1: solved... in 0.017s
2: solved... in 0.035s
1: solved... in 0.017s
2: solved... in 0.036s
1: solved... in 0.016s
2: solved... in 0.041s
1: solved... in 0.017s
2: solved... in 0.038s
1: solved... in 0.016s
2: solved... in 0.038s
1: solved... in 0.016s
2: solved... in 0.038s
1: solved... in 0.017s
2: solved... in 0.038s
1: solved... in 0.016s
2: solved... in 0.043s
1: solved... in 0.017s
2: solved... in 0.038s
1: solved... in 0.017s
2: solved... in 0.038s
1: solved... in 0.016s
2: solved... in 0.038s
1: solved... in 0.017s
2: solved... in 0.039s
1: solved... in 0.016s
2: solved... in 0.043s
1: solved... in 0.022s
2: solved... in 0.039s
1: solved... in 0.016s
2: solved... in 0.038s
1: solved... in 0.016s
2: solved... in 0.038s
1: solved... in 0.016s
2: solved... in 0.039s
1: solved... in 0.016s
2: solved... in 0.041s
1: solved... in 0.016s
2: solved... in 0.038s
1: solved... in 0.017s
2: solved... in 0.039s
1: solved... in 0.017s
2: solved... in 0.039s
1: solved... in 0.016s
2: solved... in 0.039s
1: solved... in 0.017s
2: solved... in 0.042s
1: solved... in 0.016s
2: solved... in 0.04s
1: solved... in 0.016s
2: solved... in 0.04s
1: solved... in 0.02s
2: solved... in 0.041s
1: solved... in 0.016s
2: solved... in 0.042s
1: solved... in 0.016s
2: solved... in 0.042s
1: solved... in 0.016s
2: solved... in 0.039s
1: solved... in 0.016s
2: solved... in 0.041s
1: solved... in 0.016s
2: solved... in 0.043s
1: solved... in 0.016s
2: solved... in 0.043s
1: solved... in 0.017s
2: solved... in 0.043s
1: solved... in 0.017s
2: solved... in 0.045s
1: solved... in 0.016s
2: solved... in 0.043s
1: solved... in 0.016s
2: solved... in 0.057s
1: solved... in 0.016s
2: solved... in 0.049s
1: solved... in 0.017s
2: solved... in 0.047s
1: solved... in 0.016s
2: solved... in 0.05s
1: solved... in 0.016s
2: solved... in 0.051s
1: solved... in 0.016s
2: solved... in 0.051s
1: solved... in 0.017s
2: solved... in 0.056s
1: solved... in 0.016s
2: solved... in 0.054s
1: solved... in 0.016s
2: solved... in 0.044s
1: solved... in 0.017s
2: solved... in 0.046s
1: solved... in 0.016s
2: solved... in 0.047s
1: solved... in 0.016s
2: solved... in 0.045s
1: solved... in 0.016s
2: solved... in 0.047s
1: solved... in 0.016s
2: solved... in 0.049s
1: solved... in 0.017s
2: solved... in 0.049s
1: solved... in 0.016s
2: solved... in 0.05s
1: solved... in 0.017s
2: solved... in 0.05s
1: solved... in 0.016s
2: solved... in 0.049s
1: solved... in 0.016s
2: solved... in 0.055s
1: solved... in 0.016s
2: solved... in 0.055s
1: solved... in 0.016s
2: solved... in 0.046s
1: solved... in 0.016s
2: solved... in 0.049s
1: solved... in 0.016s
2: solved... in 0.05s
1: solved... in 0.017s
2: solved... in 0.05s
1: solved... in 0.017s
2: solved... in 0.055s
1: solved... in 0.017s
2: solved... in 0.053s
1: solved... in 0.018s
2: solved... in 0.049s
1: solved... in 0.016s
2: solved... in 0.051s
1: solved... in 0.017s
2: solved... in 0.052s
1: solved... in 0.017s
2: solved... in 0.052s
1: solved... in 0.016s
2: solved... in 0.051s
1: solved... in 0.017s
2: solved... in 0.056s
1: solved... in 0.016s
2: solved... in 0.052s
1: solved... in 0.016s
2: solved... in 0.054s
1: solved... in 0.016s
2: solved... in 0.049s
1: solved... in 0.016s
2: solved... in 0.049s
1: solved... in 0.016s
2: solved... in 0.05s
1: solved... in 0.016s
2: solved... in 0.051s
1: solved... in 0.016s
2: solved... in 0.05s
1: solved... in 0.016s
2: solved... in 0.05s
1: solved... in 0.016s
2: solved... in 0.051s
1: solved... in 0.017s
2: solved... in 0.051s
1: solved... in 0.017s
2: solved... in 0.053s
1: solved... in 0.017s
2: solved... in 0.053s
1: solved... in 0.016s
2: solved... in 0.054s
1: solved... in 0.014s
[[34m Info  [0m] - Found inductive invariant: find --> ((((-16 * listSize(inp)) + (1 * res9._2)) + -200) <= 0)
[[34m Info  [0m] - Found inductive invariant: listSize --> (((-1 * #res) + -12) <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[34m Info  [0m] - Invariant verified
[[34m Info  [0m] - Dumping statistics
[[34m Info  [0m] . ┌─────────┐
          ╔═╡ Summary ╞═══════════════════════════════════════════════════════════════════════╗
          ║ └─────────┘                                                                       ║
          
          ╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
          ║ total: 0      valid: 0      invalid: 0      unknown 0                       0.000 ║
          ╚═══════════════════════════════════════════════════════════════════════════════════╝
