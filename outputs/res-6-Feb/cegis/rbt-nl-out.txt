After Depth Instrumentation: 
object RedBlackTree {
  case class Red() extends Color

  sealed abstract class Color

  sealed abstract class Tree

  case class Black() extends Color

  case class Empty() extends Tree

  case class Node(color: Color, left: Tree, value: Int, right: Tree) extends Tree

  def ins(x : Int, t : Tree) : Tree = {    require((redNodesHaveBlackChildren(t) && blackBalanced(t)));
(t match {
    case Empty() =>
      Node(Red(), Empty(), x, Empty())
    case Node(c, a, y, b) =>
      if ((x < y)) {
        locally {
          val t1 = ins(x, a)
          balance(c, t1, y, b)
        }
        
      } else {
        if ((x == y)) {
          Node(c, a, y, b)
        } else {
          locally {
            val t1 = ins(x, b)
            balance(c, a, y, t1)
          }
          
        }
      }
  })} ensuring(res => true)

  def makeBlack(n : Tree) : Tree = {(n match {
    case Node(Red(), l, v, r) =>
      Node(Black(), l, v, r)
    case _ =>
      n
  })}

  def balance(co : Color, l : Tree, x : Int, r : Tree) : Tree = {(Node(co, l, x, r) match {
    case Node(Black(), Node(Red(), Node(Red(), a, xV, b), yV, c), zV, d) =>
      Node(Red(), Node(Black(), a, xV, b), yV, Node(Black(), c, zV, d))
    case Node(Black(), Node(Red(), a, xV, Node(Red(), b, yV, c)), zV, d) =>
      Node(Red(), Node(Black(), a, xV, b), yV, Node(Black(), c, zV, d))
    case Node(Black(), a, xV, Node(Red(), Node(Red(), b, yV, c), zV, d)) =>
      Node(Red(), Node(Black(), a, xV, b), yV, Node(Black(), c, zV, d))
    case Node(Black(), a, xV, Node(Red(), b, yV, Node(Red(), c, zV, d))) =>
      Node(Red(), Node(Black(), a, xV, b), yV, Node(Black(), c, zV, d))
    case _ =>
      Node(co, l, x, r)
  })}

  def blackHeight(t : Tree) : Int = {(t match {
    case Empty() =>
      0
    case Node(Black(), l, _, _) =>
      (blackHeight(l) + 1)
    case Node(Red(), l, _, _) =>
      blackHeight(l)
  })}

  def isBlack(t : Tree) : Boolean = {(t match {
    case Empty() =>
      true
    case Node(Black(), _, _, _) =>
      true
    case _ =>
      false
  })}

  def redNodesHaveBlackChildren(t : Tree) : Boolean = {(t match {
    case Empty() =>
      true
    case Node(Black(), l, _, r) =>
      (redNodesHaveBlackChildren(l) && redNodesHaveBlackChildren(r))
    case Node(Red(), l, _, r) =>
      (isBlack(l) && isBlack(r) && redNodesHaveBlackChildren(l) && redNodesHaveBlackChildren(r))
    case _ =>
      false
  })}

  def size(t : Tree) : Int = {    require(blackBalanced(t));
(t match {
    case Empty() =>
      0
    case Node(_, l, v, r) =>
      ((size(l) + 1) + size(r))
  })} ensuring(res => true)

  def add(x : Int, t : Tree) : Tree = {    require((redNodesHaveBlackChildren(t) && blackBalanced(t)));
locally {
    val t1 = ins(x, t)
    makeBlack(t1)
  }
  } ensuring(res => true)

  def blackBalanced(t : Tree) : Boolean = {(t match {
    case Node(_, l, _, r) =>
      (blackBalanced(l) && blackBalanced(r) && (blackHeight(l) == blackHeight(r)))
    case _ =>
      true
  })}

  def redDescHaveBlackChildren(t : Tree) : Boolean = {(t match {
    case Node(_, l, _, r) =>
      (redNodesHaveBlackChildren(l) && redNodesHaveBlackChildren(r))
    case _ =>
      true
  })}

  def twopower(x : Int) : Int = {    require((x >= 0));
if ((x < 1)) {
    1
  } else {
    (2 * twopower((x - 1)))
  }}

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}
}

Defined fun: ins
Defined fun: makeBlack
Defined fun: balance
Defined fun: blackHeight
Defined fun: isBlack
Defined fun: redNodesHaveBlackChildren
Defined fun: size
Defined fun: add
Defined fun: blackBalanced
Defined fun: redDescHaveBlackChildren
Defined fun: twopower
Defined fun: max
FunMap: Map(blackHeight -> blackHeight, blackBalanced -> blackBalanced, redDescHaveBlackChildren -> redDescHaveBlackChildren, isBlack -> isBlack, redNodesHaveBlackChildren -> redNodesHaveBlackChildren, max -> max, size -> size, makeBlack -> makeBlack, ins -> ins, balance -> balance, add -> add, twopower -> twopower)
After Time Instrumentation: 
object RedBlackTree {
  case class Red() extends Color

  sealed abstract class Color

  sealed abstract class Tree

  case class Black() extends Color

  case class Empty() extends Tree

  case class Node(color: Color, left: Tree, value: Int, right: Tree) extends Tree

  def ins(x : Int, t : Tree) : (Tree, Int) = {    require((redNodesHaveBlackChildren(t) && blackBalanced(t)));
locally {
    val t23 = 1
    if (t.isInstanceOf[Empty]) {
      (Node(Red(), Empty(), x, Empty()), (t23 + 4))
    } else {
      locally {
        val (e21: Tree, t29: Int) = locally {
          val t30 = 2
          if ((x < t.value)) {
            locally {
              val (e23: Tree, t31: Int) = locally {
                val (ir: Tree, it: Int) = locally {
                  val (e26: Tree, t35: Int) = ins(x, t.left)
                  (e26, (1 + (1 + t35)))
                }
                
                locally {
                  val (r8: Tree, t32: Int) = locally {
                    val (e32: Tree, t41: Int) = balance(t.color, ir, t.value, t.right)
                    (e32, (1 + (1 + (1 + (1 + t41)))))
                  }
                  
                  (r8, (t32 + (it + 1)))
                }
                
              }
              
              (e23, (t30 + t31))
            }
            
          } else {
            locally {
              val (e36: Tree, t45: Int) = locally {
                val t46 = 2
                if ((x == t.value)) {
                  (Node(t.color, t.left, t.value, t.right), (t46 + 5))
                } else {
                  locally {
                    val (e47: Tree, t56: Int) = locally {
                      val (ir1: Tree, it1: Int) = locally {
                        val (e50: Tree, t60: Int) = ins(x, t.right)
                        (e50, (1 + (1 + t60)))
                      }
                      
                      locally {
                        val (r9: Tree, t57: Int) = locally {
                          val (e56: Tree, t66: Int) = balance(t.color, t.left, t.value, ir1)
                          (e56, (1 + (1 + (1 + (1 + t66)))))
                        }
                        
                        (r9, (t57 + (it1 + 1)))
                      }
                      
                    }
                    
                    (e47, (t46 + t56))
                  }
                  
                }
              }
              
              (e36, (t30 + t45))
            }
            
          }
        }
        
        (e21, (t23 + t29))
      }
      
    }
  }
  } ensuring(res8 => true)

  def makeBlack(n : Tree) : (Tree, Int) = {locally {
    val t8 = 4
    if ((n.isInstanceOf[Node] && n.color.isInstanceOf[Red])) {
      (Node(Black(), n.left, n.value, n.right), (t8 + 5))
    } else {
      (n, t8)
    }
  }
  }

  def balance(co : Color, l : Tree, x : Int, r : Tree) : (Tree, Int) = {locally {
    val ir2 = Node(co, l, x, r)
    locally {
      val (r10: Node, t77: Int) = locally {
        val t82 = 16
        if ((ir2.isInstanceOf[Node] && ir2.color.isInstanceOf[Black] && ir2.left.isInstanceOf[Node] && ir2.left.color.isInstanceOf[Red] && ir2.left.left.isInstanceOf[Node] && ir2.left.left.color.isInstanceOf[Red])) {
          (Node(Red(), Node(Black(), ir2.left.left.left, ir2.left.left.value, ir2.left.left.right), ir2.left.value, Node(Black(), ir2.left.right, ir2.value, ir2.right)), (t82 + 21))
        } else {
          locally {
            val (e100: Node, t111: Int) = locally {
              val t112 = 16
              if ((ir2.isInstanceOf[Node] && ir2.color.isInstanceOf[Black] && ir2.left.isInstanceOf[Node] && ir2.left.color.isInstanceOf[Red] && ir2.left.right.isInstanceOf[Node] && ir2.left.right.color.isInstanceOf[Red])) {
                (Node(Red(), Node(Black(), ir2.left.left, ir2.left.value, ir2.left.right.left), ir2.left.right.value, Node(Black(), ir2.left.right.right, ir2.value, ir2.right)), (t112 + 21))
              } else {
                locally {
                  val (e130: Node, t141: Int) = locally {
                    val t142 = 16
                    if ((ir2.isInstanceOf[Node] && ir2.color.isInstanceOf[Black] && ir2.right.isInstanceOf[Node] && ir2.right.color.isInstanceOf[Red] && ir2.right.left.isInstanceOf[Node] && ir2.right.left.color.isInstanceOf[Red])) {
                      (Node(Red(), Node(Black(), ir2.left, ir2.value, ir2.right.left.left), ir2.right.left.value, Node(Black(), ir2.right.left.right, ir2.right.value, ir2.right.right)), (t142 + 21))
                    } else {
                      locally {
                        val (e160: Node, t171: Int) = locally {
                          val t172 = 16
                          if ((ir2.isInstanceOf[Node] && ir2.color.isInstanceOf[Black] && ir2.right.isInstanceOf[Node] && ir2.right.color.isInstanceOf[Red] && ir2.right.right.isInstanceOf[Node] && ir2.right.right.color.isInstanceOf[Red])) {
                            (Node(Red(), Node(Black(), ir2.left, ir2.value, ir2.right.left), ir2.right.value, Node(Black(), ir2.right.right.left, ir2.right.right.value, ir2.right.right.right)), (t172 + 21))
                          } else {
                            (Node(co, l, x, r), (t172 + 1))
                          }
                        }
                        
                        (e160, (t142 + t171))
                      }
                      
                    }
                  }
                  
                  (e130, (t112 + t141))
                }
                
              }
            }
            
            (e100, (t82 + t111))
          }
          
        }
      }
      
      (r10, (t77 + 2))
    }
    
  }
  }

  def blackHeight(t : Tree) : Int = {(t match {
    case Empty() =>
      0
    case Node(Black(), l, _, _) =>
      (blackHeight(l) + 1)
    case Node(Red(), l, _, _) =>
      blackHeight(l)
  })}

  def isBlack(t : Tree) : Boolean = {(t match {
    case Empty() =>
      true
    case Node(Black(), _, _, _) =>
      true
    case _ =>
      false
  })}

  def redNodesHaveBlackChildren(t : Tree) : Boolean = {(t match {
    case Empty() =>
      true
    case Node(Black(), l, _, r) =>
      (redNodesHaveBlackChildren(l) && redNodesHaveBlackChildren(r))
    case Node(Red(), l, _, r) =>
      (isBlack(l) && isBlack(r) && redNodesHaveBlackChildren(l) && redNodesHaveBlackChildren(r))
    case _ =>
      false
  })}

  def size(t : Tree) : Int = {    require(blackBalanced(t));
(t match {
    case Empty() =>
      0
    case Node(_, l, v, r) =>
      ((size(l) + 1) + size(r))
  })} ensuring(res7 => true)

  def add(x : Int, t : Tree) : (Tree, Int) = {    require((redNodesHaveBlackChildren(t) && blackBalanced(t)));
locally {
    val (ir3: Tree, it3: Int) = locally {
      val (e281: Tree, t293: Int) = ins(x, t)
      (e281, (1 + t293))
    }
    
    locally {
      val (r11: Tree, t290: Int) = locally {
        val (e283: Tree, t295: Int) = makeBlack(ir3)
        (e283, (1 + t295))
      }
      
      (r11, (t290 + (it3 + 1)))
    }
    
  }
  } ensuring(res9 => true)

  def blackBalanced(t : Tree) : Boolean = {(t match {
    case Node(_, l, _, r) =>
      (blackBalanced(l) && blackBalanced(r) && (blackHeight(l) == blackHeight(r)))
    case _ =>
      true
  })}

  def redDescHaveBlackChildren(t : Tree) : Boolean = {(t match {
    case Node(_, l, _, r) =>
      (redNodesHaveBlackChildren(l) && redNodesHaveBlackChildren(r))
    case _ =>
      true
  })}

  def twopower(x : Int) : Int = {    require((x >= 0));
if ((x < 1)) {
    1
  } else {
    (2 * twopower((x - 1)))
  }}

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}
}

New Prog: 
object RedBlackTree {
  case class Red() extends Color

  sealed abstract class Color

  sealed abstract class Tree

  case class Black() extends Color

  case class Empty() extends Tree

  case class Node(color: Color, left: Tree, value: Int, right: Tree) extends Tree

  def ins(x : Int, t : Tree) : (Tree, Int) = {    require((redNodesHaveBlackChildren(t) && blackBalanced(t)));
if (t.isInstanceOf[Empty]) {
    (Node(Red(), Empty(), x, Empty()), (1 + 4))
  } else {
    locally {
      val (e21: Tree, t29: Int) = if ((x < t.value)) {
        locally {
          val (e23: Tree, t31: Int) = locally {
            val (ir: Tree, it: Int) = locally {
              val (e26: Tree, t35: Int) = ins(x, t.left)
              (e26, (1 + (1 + t35)))
            }
            
            locally {
              val (r8: Tree, t32: Int) = locally {
                val (e32: Tree, t41: Int) = balance(t.color, ir, t.value, t.right)
                (e32, (1 + (1 + (1 + (1 + t41)))))
              }
              
              (r8, (t32 + (it + 1)))
            }
            
          }
          
          (e23, (2 + t31))
        }
        
      } else {
        locally {
          val (e36: Tree, t45: Int) = if ((x == t.value)) {
            (Node(t.color, t.left, t.value, t.right), (2 + 5))
          } else {
            locally {
              val (e47: Tree, t56: Int) = locally {
                val (ir1: Tree, it1: Int) = locally {
                  val (e50: Tree, t60: Int) = ins(x, t.right)
                  (e50, (1 + (1 + t60)))
                }
                
                locally {
                  val (r9: Tree, t57: Int) = locally {
                    val (e56: Tree, t66: Int) = balance(t.color, t.left, t.value, ir1)
                    (e56, (1 + (1 + (1 + (1 + t66)))))
                  }
                  
                  (r9, (t57 + (it1 + 1)))
                }
                
              }
              
              (e47, (2 + t56))
            }
            
          }
          (e36, (2 + t45))
        }
        
      }
      (e21, (1 + t29))
    }
    
  }} ensuring(res8 => true)

  def makeBlack(n : Tree) : (Tree, Int) = {if ((n.isInstanceOf[Node] && n.color.isInstanceOf[Red])) {
    (Node(Black(), n.left, n.value, n.right), (4 + 5))
  } else {
    (n, 4)
  }}

  def balance(co : Color, l : Tree, x : Int, r : Tree) : (Tree, Int) = {locally {
    val ir2 = Node(co, l, x, r)
    locally {
      val (r10: Node, t77: Int) = if ((ir2.isInstanceOf[Node] && ir2.color.isInstanceOf[Black] && ir2.left.isInstanceOf[Node] && ir2.left.color.isInstanceOf[Red] && ir2.left.left.isInstanceOf[Node] && ir2.left.left.color.isInstanceOf[Red])) {
        (Node(Red(), Node(Black(), ir2.left.left.left, ir2.left.left.value, ir2.left.left.right), ir2.left.value, Node(Black(), ir2.left.right, ir2.value, ir2.right)), (16 + 21))
      } else {
        locally {
          val (e100: Node, t111: Int) = if ((ir2.isInstanceOf[Node] && ir2.color.isInstanceOf[Black] && ir2.left.isInstanceOf[Node] && ir2.left.color.isInstanceOf[Red] && ir2.left.right.isInstanceOf[Node] && ir2.left.right.color.isInstanceOf[Red])) {
            (Node(Red(), Node(Black(), ir2.left.left, ir2.left.value, ir2.left.right.left), ir2.left.right.value, Node(Black(), ir2.left.right.right, ir2.value, ir2.right)), (16 + 21))
          } else {
            locally {
              val (e130: Node, t141: Int) = if ((ir2.isInstanceOf[Node] && ir2.color.isInstanceOf[Black] && ir2.right.isInstanceOf[Node] && ir2.right.color.isInstanceOf[Red] && ir2.right.left.isInstanceOf[Node] && ir2.right.left.color.isInstanceOf[Red])) {
                (Node(Red(), Node(Black(), ir2.left, ir2.value, ir2.right.left.left), ir2.right.left.value, Node(Black(), ir2.right.left.right, ir2.right.value, ir2.right.right)), (16 + 21))
              } else {
                locally {
                  val (e160: Node, t171: Int) = if ((ir2.isInstanceOf[Node] && ir2.color.isInstanceOf[Black] && ir2.right.isInstanceOf[Node] && ir2.right.color.isInstanceOf[Red] && ir2.right.right.isInstanceOf[Node] && ir2.right.right.color.isInstanceOf[Red])) {
                    (Node(Red(), Node(Black(), ir2.left, ir2.value, ir2.right.left), ir2.right.value, Node(Black(), ir2.right.right.left, ir2.right.right.value, ir2.right.right.right)), (16 + 21))
                  } else {
                    (Node(co, l, x, r), (16 + 1))
                  }
                  (e160, (16 + t171))
                }
                
              }
              (e130, (16 + t141))
            }
            
          }
          (e100, (16 + t111))
        }
        
      }
      (r10, (t77 + 2))
    }
    
  }
  }

  def blackHeight(t : Tree) : Int = {(t match {
    case Empty() =>
      0
    case Node(Black(), l, _, _) =>
      (blackHeight(l) + 1)
    case Node(Red(), l, _, _) =>
      blackHeight(l)
  })}

  def isBlack(t : Tree) : Boolean = {(t match {
    case Empty() =>
      true
    case Node(Black(), _, _, _) =>
      true
    case _ =>
      false
  })}

  def redNodesHaveBlackChildren(t : Tree) : Boolean = {(t match {
    case Empty() =>
      true
    case Node(Black(), l, _, r) =>
      (redNodesHaveBlackChildren(l) && redNodesHaveBlackChildren(r))
    case Node(Red(), l, _, r) =>
      (isBlack(l) && isBlack(r) && redNodesHaveBlackChildren(l) && redNodesHaveBlackChildren(r))
    case _ =>
      false
  })}

  def size(t : Tree) : Int = {    require(blackBalanced(t));
(t match {
    case Empty() =>
      0
    case Node(_, l, v, r) =>
      ((size(l) + 1) + size(r))
  })} ensuring(res7 => true)

  def add(x : Int, t : Tree) : (Tree, Int) = {    require((redNodesHaveBlackChildren(t) && blackBalanced(t)));
locally {
    val (ir3: Tree, it3: Int) = locally {
      val (e281: Tree, t293: Int) = ins(x, t)
      (e281, (1 + t293))
    }
    
    locally {
      val (r11: Tree, t290: Int) = locally {
        val (e283: Tree, t295: Int) = makeBlack(ir3)
        (e283, (1 + t295))
      }
      
      (r11, (t290 + (it3 + 1)))
    }
    
  }
  } ensuring(res9 => true)

  def blackBalanced(t : Tree) : Boolean = {(t match {
    case Node(_, l, _, r) =>
      (blackBalanced(l) && blackBalanced(r) && (blackHeight(l) == blackHeight(r)))
    case _ =>
      true
  })}

  def redDescHaveBlackChildren(t : Tree) : Boolean = {(t match {
    case Node(_, l, _, r) =>
      (redNodesHaveBlackChildren(l) && redNodesHaveBlackChildren(r))
    case _ =>
      true
  })}

  def twopower(x : Int) : Int = {    require((x >= 0));
if ((x < 1)) {
    1
  } else {
    (2 * twopower((x - 1)))
  }}

  def max(x : Int, y : Int) : Int = {if ((x >= y)) {
    x
  } else {
    y
  }}
}

Function: ins template --> (res8._2 ≤ ((a?1 * blackHeight(t)) + b?1))
Function: size template --> (twopower(blackHeight(t)) ≤ ((a? * res7) + b?))
Function: add template --> (res9._2 ≤ ((a?2 * blackHeight(t)) + b?2))
[[34m Info  [0m] Running Invariant Inference Phase...
[[34m Info  [0m] Analysis Order: List(twopower, blackHeight, blackBalanced, size, redNodesHaveBlackChildren, redDescHaveBlackChildren, ins, add)
[[34m Info  [0m] - considering function size...
[[34m Info  [0m] Body: t match {
            case Empty() => 0
            case Node(_, l, v, r) => ((size(l) + 1) + size(r))
          }
[[34m Info  [0m] Post: true
falttened Body: (r12 && (r12 == blackBalanced(t)) && (res7 == ifres) && ((ci && (ci == t.isInstanceOf[Empty]) && (ifres == 0)) || (!(ci1) && (ci1 == t.isInstanceOf[Empty]) && (ifres == ((r13 + 1) + r14)) && (cs == t.left) && (r13 == size(cs)) && (cs1 == t.right) && (r14 == size(cs1)))))
Flattened Post: ((r16 > ((a? * res7) + b?)) && (r15 == blackHeight(t)) && (r16 == twopower(r15)))
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.102s
2: solved... in 0.14s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.009s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.006s
2: solved... in 0.016s
1: solved... in 0.009s
2: solved... in 0.013s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.006s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.004s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.007s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.018s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.008s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.018s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.021s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.009s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.01s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.01s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.011s
1: solved... in 0.006s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.019s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.004s
2: solved... in 0.011s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.004s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.012s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.016s
1: solved... in 0.005s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.016s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.025s
1: solved... in 0.006s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.013s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.009s
2: solved... in 0.019s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.004s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.004s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.015s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.005s
2: solved... in 0.014s
1: solved... in 0.008s
2: solved... in 0.015s
1: solved... in 0.005s
2: solved... in 0.015s
1: solved... in 0.005s
2: solved... in 0.015s
1: solved... in 0.005s
2: solved... in 0.015s
1: solved... in 0.005s
2: solved... in 0.016s
1: solved... in 0.005s
2: solved... in 0.015s
1: solved... in 0.005s
2: solved... in 0.015s
1: solved... in 0.005s
2: solved... in 0.016s
1: solved... in 0.005s
2: solved... in 0.016s
1: solved... in 0.005s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.015s
1: solved... in 0.006s
2: solved... in 0.016s
1: solved... in 0.005s
2: solved... in 0.016s
1: solved... in 0.006s
2: solved... in 0.016s
1: solved... in 0.005s
2: solved... in 0.016s
1: solved... in 0.005s
2: solved... in 0.016s
1: solved... in 0.005s
2: solved... in 0.015s
1: solved... in 0.005s
2: solved... in 0.015s
1: solved... in 0.005s
2: solved... in 0.016s
1: solved... in 0.006s
2: solved... in 0.016s
1: solved... in 0.005s
2: solved... in 0.016s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 5/5
Unrolled calls: Set((r14 == size(cs1)), (r12 <=> blackBalanced(t)), (r16 == twopower(r15)), (r13 == size(cs)), (r15 == blackHeight(t)))
Creating VC for twopower
[[34m Info  [0m] - Number of new terms enumerated: 1
[[34m Info  [0m] - Template generated for function twopower : ((((a?406 * x) + (a?405 * #res)) + a?404) ≤ 0)
Unrolling (r16 == twopower(r15))
Unrolling (r13 == size(cs))
Creating VC for blackBalanced
[[34m Info  [0m] - Number of new terms enumerated: 2
[[34m Info  [0m] - Template generated for function blackBalanced : (a?407 ≤ 0)
Unrolling (r12 <=> blackBalanced(t))
Unrolling (r14 == size(cs1))
Creating VC for blackHeight
[[34m Info  [0m] - Number of new terms enumerated: 2
[[34m Info  [0m] - Template generated for function blackHeight : (((a?409 * #res) + a?408) ≤ 0)
Unrolling (r15 == blackHeight(t))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.015s
2: solved... in 0.008s
1: solved... in 0.013s
2: solved... in 0.006s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.012s
2: solved... in 0.007s
1: solved... in 0.02s
2: solved... in 0.007s
1: solved... in 0.013s
2: solved... in 0.007s
1: solved... in 0.013s
2: solved... in 0.008s
1: solved... in 0.015s
2: solved... in 0.007s
1: solved... in 0.012s
2: solved... in 0.007s
1: solved... in 0.016s
2: solved... in 0.006s
1: solved... in 0.012s
2: solved... in 0.007s
1: solved... in 0.013s
2: solved... in 0.007s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.012s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.007s
1: solved... in 0.013s
2: solved... in 0.007s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.012s
2: solved... in 0.008s
1: solved... in 0.019s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.013s
1: solved... in 0.01s
2: solved... in 0.008s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.009s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.013s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.013s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.011s
2: solved... in 0.01s
1: solved... in 0.01s
2: solved... in 0.012s
1: solved... in 0.019s
2: solved... in 0.013s
1: solved... in 0.01s
2: solved... in 0.013s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.01s
2: solved... in 0.012s
1: solved... in 0.01s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.012s
1: solved... in 0.01s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.013s
1: solved... in 0.01s
2: solved... in 0.014s
1: solved... in 0.011s
2: solved... in 0.011s
1: solved... in 0.01s
2: solved... in 0.013s
1: solved... in 0.01s
2: solved... in 0.012s
1: solved... in 0.011s
2: solved... in 0.015s
1: solved... in 0.012s
2: solved... in 0.019s
1: solved... in 0.01s
2: solved... in 0.019s
1: solved... in 0.012s
2: solved... in 0.016s
1: solved... in 0.01s
2: solved... in 0.015s
1: solved... in 0.01s
2: solved... in 0.015s
1: solved... in 0.011s
2: solved... in 0.013s
1: solved... in 0.012s
2: solved... in 0.013s
1: solved... in 0.013s
2: solved... in 0.014s
1: solved... in 0.011s
2: solved... in 0.017s
1: solved... in 0.011s
2: solved... in 0.013s
1: solved... in 0.01s
2: solved... in 0.016s
1: solved... in 0.011s
2: solved... in 0.013s
1: solved... in 0.01s
2: solved... in 0.013s
1: solved... in 0.01s
2: solved... in 0.016s
1: solved... in 0.01s
2: solved... in 0.018s
1: solved... in 0.012s
2: solved... in 0.018s
1: solved... in 0.012s
2: solved... in 0.019s
1: solved... in 0.01s
2: solved... in 0.021s
1: solved... in 0.013s
2: solved... in 0.016s
1: solved... in 0.01s
2: solved... in 0.014s
1: solved... in 0.01s
2: solved... in 0.013s
1: solved... in 0.01s
2: solved... in 0.019s
1: solved... in 0.011s
2: solved... in 0.015s
1: solved... in 0.01s
2: solved... in 0.014s
1: solved... in 0.009s
2: solved... in 0.02s
1: solved... in 0.01s
2: solved... in 0.015s
1: solved... in 0.012s
2: solved... in 0.021s
1: solved... in 0.01s
2: solved... in 0.022s
1: solved... in 0.011s
2: solved... in 0.019s
1: solved... in 0.011s
2: solved... in 0.016s
1: solved... in 0.011s
2: solved... in 0.017s
1: solved... in 0.009s
2: solved... in 0.02s
1: solved... in 0.01s
2: solved... in 0.019s
1: solved... in 0.01s
2: solved... in 0.02s
1: solved... in 0.01s
2: solved... in 0.02s
1: solved... in 0.01s
2: solved... in 0.019s
1: solved... in 0.01s
2: solved... in 0.022s
1: solved... in 0.009s
2: solved... in 0.021s
1: solved... in 0.011s
2: solved... in 0.02s
1: solved... in 0.011s
2: solved... in 0.022s
1: solved... in 0.01s
2: solved... in 0.023s
1: solved... in 0.01s
2: solved... in 0.024s
1: solved... in 0.011s
2: solved... in 0.023s
1: solved... in 0.01s
2: solved... in 0.025s
1: solved... in 0.011s
2: solved... in 0.023s
1: solved... in 0.011s
2: solved... in 0.016s
1: solved... in 0.009s
2: solved... in 0.022s
1: solved... in 0.01s
2: solved... in 0.02s
1: solved... in 0.01s
2: solved... in 0.016s
1: solved... in 0.009s
2: solved... in 0.015s
1: solved... in 0.01s
2: solved... in 0.023s
1: solved... in 0.01s
2: solved... in 0.023s
1: solved... in 0.01s
2: solved... in 0.021s
1: solved... in 0.01s
2: solved... in 0.017s
1: solved... in 0.011s
2: solved... in 0.022s
1: solved... in 0.01s
2: solved... in 0.022s
1: solved... in 0.011s
2: solved... in 0.023s
1: solved... in 0.01s
2: solved... in 0.02s
1: solved... in 0.01s
2: solved... in 0.031s
1: solved... in 0.011s
2: solved... in 0.026s
1: solved... in 0.011s
2: solved... in 0.023s
1: solved... in 0.01s
2: solved... in 0.019s
1: solved... in 0.01s
2: solved... in 0.018s
1: solved... in 0.01s
2: solved... in 0.022s
1: solved... in 0.009s
2: solved... in 0.018s
1: solved... in 0.01s
2: solved... in 0.02s
1: solved... in 0.01s
2: solved... in 0.019s
1: solved... in 0.015s
2: solved... in 0.034s
1: solved... in 0.011s
2: solved... in 0.025s
1: solved... in 0.011s
2: solved... in 0.021s
1: solved... in 0.01s
2: solved... in 0.021s
1: solved... in 0.011s
2: solved... in 0.029s
1: solved... in 0.01s
2: solved... in 0.024s
1: solved... in 0.01s
2: solved... in 0.025s
1: solved... in 0.01s
2: solved... in 0.021s
1: solved... in 0.01s
2: solved... in 0.021s
1: solved... in 0.01s
2: solved... in 0.025s
1: solved... in 0.01s
2: solved... in 0.023s
1: solved... in 0.011s
2: solved... in 0.028s
1: solved... in 0.011s
2: solved... in 0.022s
1: solved... in 0.011s
2: solved... in 0.026s
1: solved... in 0.01s
2: solved... in 0.021s
1: solved... in 0.009s
2: solved... in 0.03s
1: solved... in 0.011s
2: solved... in 0.021s
1: solved... in 0.009s
2: solved... in 0.024s
1: solved... in 0.01s
2: solved... in 0.023s
1: solved... in 0.011s
2: solved... in 0.027s
1: solved... in 0.01s
2: solved... in 0.02s
1: solved... in 0.01s
2: solved... in 0.02s
1: solved... in 0.01s
2: solved... in 0.023s
1: solved... in 0.01s
2: solved... in 0.024s
1: solved... in 0.009s
2: solved... in 0.032s
1: solved... in 0.01s
2: solved... in 0.025s
1: solved... in 0.011s
2: solved... in 0.036s
1: solved... in 0.011s
2: solved... in 0.028s
1: solved... in 0.011s
2: solved... in 0.033s
1: solved... in 0.01s
2: solved... in 0.029s
1: solved... in 0.01s
2: solved... in 0.036s
1: solved... in 0.01s
2: solved... in 0.038s
1: solved... in 0.01s
2: solved... in 0.023s
1: solved... in 0.01s
2: solved... in 0.023s
1: solved... in 0.01s
2: solved... in 0.031s
1: solved... in 0.009s
2: solved... in 0.035s
1: solved... in 0.01s
2: solved... in 0.031s
1: solved... in 0.011s
2: solved... in 0.026s
1: solved... in 0.011s
2: solved... in 0.032s
1: solved... in 0.01s
2: solved... in 0.035s
1: solved... in 0.01s
2: solved... in 0.022s
1: solved... in 0.013s
2: solved... in 0.022s
1: solved... in 0.009s
2: solved... in 0.028s
1: solved... in 0.01s
2: solved... in 0.029s
1: solved... in 0.011s
2: solved... in 0.027s
1: solved... in 0.01s
2: solved... in 0.027s
1: solved... in 0.011s
2: solved... in 0.026s
1: solved... in 0.01s
2: solved... in 0.035s
1: solved... in 0.009s
2: solved... in 0.027s
1: solved... in 0.01s
2: solved... in 0.033s
1: solved... in 0.01s
2: solved... in 0.027s
1: solved... in 0.011s
2: solved... in 0.039s
1: solved... in 0.01s
2: solved... in 0.03s
1: solved... in 0.01s
2: solved... in 0.027s
1: solved... in 0.011s
2: solved... in 0.035s
1: solved... in 0.01s
2: solved... in 0.027s
1: solved... in 0.01s
2: solved... in 0.028s
1: solved... in 0.011s
2: solved... in 0.026s
1: solved... in 0.011s
2: solved... in 0.026s
1: solved... in 0.009s
2: solved... in 0.035s
1: solved... in 0.01s
2: solved... in 0.033s
1: solved... in 0.011s
2: solved... in 0.026s
1: solved... in 0.009s
2: solved... in 0.024s
1: solved... in 0.01s
2: solved... in 0.027s
1: solved... in 0.01s
2: solved... in 0.051s
1: solved... in 0.011s
2: solved... in 0.029s
1: solved... in 0.011s
2: solved... in 0.034s
1: solved... in 0.011s
2: solved... in 0.03s
1: solved... in 0.011s
2: solved... in 0.03s
1: solved... in 0.011s
2: solved... in 0.038s
1: solved... in 0.01s
2: solved... in 0.03s
1: solved... in 0.009s
2: solved... in 0.03s
1: solved... in 0.011s
2: solved... in 0.03s
1: solved... in 0.01s
2: solved... in 0.031s
1: solved... in 0.009s
2: solved... in 0.03s
1: solved... in 0.01s
2: solved... in 0.043s
1: solved... in 0.01s
2: solved... in 0.047s
1: solved... in 0.011s
2: solved... in 0.071s
1: solved... in 0.011s
2: solved... in 0.034s
1: solved... in 0.009s
2: solved... in 0.026s
1: solved... in 0.01s
2: solved... in 0.027s
1: solved... in 0.01s
2: solved... in 0.03s
1: solved... in 0.011s
2: solved... in 0.033s
1: solved... in 0.009s
2: solved... in 0.029s
1: solved... in 0.012s
2: solved... in 0.046s
1: solved... in 0.01s
2: solved... in 0.03s
1: solved... in 0.01s
2: solved... in 0.031s
1: solved... in 0.01s
2: solved... in 0.034s
1: solved... in 0.012s
2: solved... in 0.031s
1: solved... in 0.009s
2: solved... in 0.031s
1: solved... in 0.011s
2: solved... in 0.043s
1: solved... in 0.01s
2: solved... in 0.033s
1: solved... in 0.01s
2: solved... in 0.052s
1: solved... in 0.01s
2: solved... in 0.034s
1: solved... in 0.009s
2: solved... in 0.035s
1: solved... in 0.011s
2: solved... in 0.031s
1: solved... in 0.01s
2: solved... in 0.031s
1: solved... in 0.009s
2: solved... in 0.037s
1: solved... in 0.011s
2: solved... in 0.031s
1: solved... in 0.011s
2: solved... in 0.033s
1: solved... in 0.01s
2: solved... in 0.033s
1: solved... in 0.009s
2: solved... in 0.034s
1: solved... in 0.011s
2: solved... in 0.04s
1: solved... in 0.012s
2: solved... in 0.039s
1: solved... in 0.01s
2: solved... in 0.034s
1: solved... in 0.011s
2: solved... in 0.036s
1: solved... in 0.011s
2: solved... in 0.035s
1: solved... in 0.01s
2: solved... in 0.043s
1: solved... in 0.011s
2: solved... in 0.047s
1: solved... in 0.011s
2: solved... in 0.038s
1: solved... in 0.01s
2: solved... in 0.034s
1: solved... in 0.01s
2: solved... in 0.126s
1: solved... in 0.011s
2: solved... in 0.036s
1: solved... in 0.011s
2: solved... in 0.037s
1: solved... in 0.009s
2: solved... in 0.038s
1: solved... in 0.011s
2: solved... in 0.037s
1: solved... in 0.011s
2: solved... in 0.036s
1: solved... in 0.01s
2: solved... in 0.057s
1: solved... in 0.009s
2: solved... in 0.045s
1: solved... in 0.01s
2: solved... in 0.036s
1: solved... in 0.011s
2: solved... in 0.059s
1: solved... in 0.012s
2: solved... in 0.061s
1: solved... in 0.011s
2: solved... in 0.051s
1: solved... in 0.01s
2: solved... in 0.039s
1: solved... in 0.01s
2: solved... in 0.039s
1: solved... in 0.01s
2: solved... in 0.032s
1: solved... in 0.01s
2: solved... in 0.032s
1: solved... in 0.01s
2: solved... in 0.038s
1: solved... in 0.011s
2: solved... in 0.051s
1: solved... in 0.012s
2: solved... in 0.041s
1: solved... in 0.01s
2: solved... in 0.038s
1: solved... in 0.01s
2: solved... in 0.042s
1: solved... in 0.011s
2: solved... in 0.056s
1: solved... in 0.01s
2: solved... in 0.041s
1: solved... in 0.011s
2: solved... in 0.039s
1: solved... in 0.01s
2: solved... in 0.043s
1: solved... in 0.01s
2: solved... in 0.039s
1: solved... in 0.014s
2: solved... in 0.042s
1: solved... in 0.011s
2: solved... in 0.043s
1: solved... in 0.011s
2: solved... in 0.039s
1: solved... in 0.01s
2: solved... in 0.043s
1: solved... in 0.012s
2: solved... in 0.04s
1: solved... in 0.01s
2: solved... in 0.04s
1: solved... in 0.009s
2: solved... in 0.04s
1: solved... in 0.011s
2: solved... in 0.058s
1: solved... in 0.012s
2: solved... in 0.044s
1: solved... in 0.015s
2: solved... in 0.042s
1: solved... in 0.01s
2: solved... in 0.038s
1: solved... in 0.009s
2: solved... in 0.046s
1: solved... in 0.011s
2: solved... in 0.057s
1: solved... in 0.011s
2: solved... in 0.049s
1: solved... in 0.011s
2: solved... in 0.044s
1: solved... in 0.011s
2: solved... in 0.067s
1: solved... in 0.011s
2: solved... in 0.045s
1: solved... in 0.011s
2: solved... in 0.07s
1: solved... in 0.01s
2: solved... in 0.052s
1: solved... in 0.013s
2: solved... in 0.069s
1: solved... in 0.01s
2: solved... in 0.055s
1: solved... in 0.011s
2: solved... in 0.064s
1: solved... in 0.011s
2: solved... in 0.039s
1: solved... in 0.009s
2: solved... in 0.039s
1: solved... in 0.01s
2: solved... in 0.053s
1: solved... in 0.01s
2: solved... in 0.073s
1: solved... in 0.011s
2: solved... in 0.036s
1: solved... in 0.01s
2: solved... in 0.034s
1: solved... in 0.01s
2: solved... in 0.051s
1: solved... in 0.011s
2: solved... in 0.062s
1: solved... in 0.011s
2: solved... in 0.062s
1: solved... in 0.009s
2: solved... in 0.064s
1: solved... in 0.01s
2: solved... in 0.066s
1: solved... in 0.011s
2: solved... in 0.04s
1: solved... in 0.011s
2: solved... in 0.051s
1: solved... in 0.01s
2: solved... in 0.047s
1: solved... in 0.009s
2: solved... in 0.063s
1: solved... in 0.011s
2: solved... in 0.039s
1: solved... in 0.009s
2: solved... in 0.055s
1: solved... in 0.01s
2: solved... in 0.056s
1: solved... in 0.01s
2: solved... in 0.072s
1: solved... in 0.011s
2: solved... in 0.073s
1: solved... in 0.011s
2: solved... in 0.064s
1: solved... in 0.01s
2: solved... in 0.049s
1: solved... in 0.01s
2: solved... in 0.053s
1: solved... in 0.01s
2: solved... in 0.049s
1: solved... in 0.01s
2: solved... in 0.039s
1: solved... in 0.009s
2: solved... in 0.061s
1: solved... in 0.01s
2: solved... in 0.043s
1: solved... in 0.01s
2: solved... in 0.079s
1: solved... in 0.01s
2: solved... in 0.059s
1: solved... in 0.01s
2: solved... in 0.049s
1: solved... in 0.011s
2: solved... in 0.049s
1: solved... in 0.01s
2: solved... in 0.044s
1: solved... in 0.009s
2: solved... in 0.052s
1: solved... in 0.011s
2: solved... in 0.05s
1: solved... in 0.012s
2: solved... in 0.051s
1: solved... in 0.012s
2: solved... in 0.05s
1: solved... in 0.012s
2: solved... in 0.091s
1: solved... in 0.012s
2: solved... in 0.054s
1: solved... in 0.012s
2: solved... in 0.052s
1: solved... in 0.011s
2: solved... in 0.049s
1: solved... in 0.011s
2: solved... in 0.054s
1: solved... in 0.012s
2: solved... in 0.05s
1: solved... in 0.011s
2: solved... in 0.077s
1: solved... in 0.012s
2: solved... in 0.056s
1: solved... in 0.009s
2: solved... in 0.055s
1: solved... in 0.009s
2: solved... in 0.053s
1: solved... in 0.011s
2: solved... in 0.05s
1: solved... in 0.011s
2: solved... in 0.049s
1: solved... in 0.01s
2: solved... in 0.073s
1: solved... in 0.01s
2: solved... in 0.08s
1: solved... in 0.011s
2: solved... in 0.051s
1: solved... in 0.012s
2: solved... in 0.058s
1: solved... in 0.012s
2: solved... in 0.052s
1: solved... in 0.012s
2: solved... in 0.063s
1: solved... in 0.011s
2: solved... in 0.084s
1: solved... in 0.012s
2: solved... in 0.057s
1: solved... in 0.012s
2: solved... in 0.055s
1: solved... in 0.009s
2: solved... in 0.046s
1: solved... in 0.009s
2: solved... in 0.092s
1: solved... in 0.012s
2: solved... in 0.069s
1: solved... in 0.011s
2: solved... in 0.045s
1: solved... in 0.009s
2: solved... in 0.045s
1: solved... in 0.009s
2: solved... in 0.078s
1: solved... in 0.012s
2: solved... in 0.063s
1: solved... in 0.009s
2: solved... in 0.071s
1: solved... in 0.011s
2: solved... in 0.07s
1: solved... in 0.012s
2: solved... in 0.074s
1: solved... in 0.012s
2: solved... in 0.083s
1: solved... in 0.012s
2: solved... in 0.087s
1: solved... in 0.011s
2: solved... in 0.06s
1: solved... in 0.012s
2: solved... in 0.057s
1: solved... in 0.011s
2: solved... in 0.058s
1: solved... in 0.011s
2: solved... in 0.054s
1: solved... in 0.012s
2: solved... in 0.053s
1: solved... in 0.012s
2: solved... in 0.049s
1: solved... in 0.01s
2: solved... in 0.067s
1: solved... in 0.012s
2: solved... in 0.061s
1: solved... in 0.01s
2: solved... in 0.055s
1: solved... in 0.009s
2: solved... in 0.059s
1: solved... in 0.009s
2: solved... in 0.06s
1: solved... in 0.01s
2: solved... in 0.051s
1: solved... in 0.009s
2: solved... in 0.064s
1: solved... in 0.01s
2: solved... in 0.068s
1: solved... in 0.01s
2: solved... in 0.087s
1: solved... in 0.01s
2: solved... in 0.048s
1: solved... in 0.009s
2: solved... in 0.104s
1: solved... in 0.009s
2: solved... in 0.07s
1: solved... in 0.009s
2: solved... in 0.074s
1: solved... in 0.01s
2: solved... in 0.065s
1: solved... in 0.009s
2: solved... in 0.067s
1: solved... in 0.009s
2: solved... in 0.081s
1: solved... in 0.009s
2: solved... in 0.069s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 36/36
Unrolled calls: Set((r44 == blackHeight(cs30)), (r36 <=> blackBalanced(cs19)), (r43 == blackHeight(cs27)), (r23 == blackHeight(cs6)), (r49 == twopower(r48)), (r34 == blackHeight(cs17)), (r31 <=> blackBalanced(cs14)), (r25 <=> blackBalanced(cs8)), (r29 == blackHeight(cs12)), (r18 == twopower(arg1)), (r27 == blackHeight(cs10)), (r17 == twopower(arg)), (r47 <=> blackBalanced(cs)), (r40 == blackHeight(cs23)), (r45 == blackHeight(cs33)), (r24 == blackHeight(cs7)), (r32 <=> blackBalanced(cs15)), (r38 == blackHeight(cs21)), (r48 == blackHeight(cs)), (r33 == blackHeight(cs16)), (r30 == blackHeight(cs13)), (r21 <=> blackBalanced(cs4)), (r20 == size(cs3)), (r22 <=> blackBalanced(cs5)), (r42 == size(cs25)), (r46 == blackHeight(cs36)), (r51 == blackHeight(cs1)), (r52 == twopower(r51)), (r37 == blackHeight(cs20)), (r26 <=> blackBalanced(cs9)), (r39 == blackHeight(cs22)), (r50 <=> blackBalanced(cs1)), (r35 <=> blackBalanced(cs18)), (r41 == size(cs24)), (r28 == blackHeight(cs11)), (r19 == size(cs2)))
Unrolling (r46 == blackHeight(cs36))
Unrolling (r30 == blackHeight(cs13))
Unrolling (r24 == blackHeight(cs7))
Unrolling (r21 <=> blackBalanced(cs4))
Unrolling (r44 == blackHeight(cs30))
Unrolling (r32 <=> blackBalanced(cs15))
Unrolling (r34 == blackHeight(cs17))
Unrolling (r52 == twopower(r51))
Unrolling (r23 == blackHeight(cs6))
Unrolling (r49 == twopower(r48))
Unrolling (r33 == blackHeight(cs16))
Unrolling (r40 == blackHeight(cs23))
Unrolling (r43 == blackHeight(cs27))
Unrolling (r18 == twopower(arg1))
Unrolling (r39 == blackHeight(cs22))
Unrolling (r25 <=> blackBalanced(cs8))
Unrolling (r17 == twopower(arg))
Unrolling (r37 == blackHeight(cs20))
Unrolling (r50 <=> blackBalanced(cs1))
Unrolling (r38 == blackHeight(cs21))
Unrolling (r36 <=> blackBalanced(cs19))
Unrolling (r26 <=> blackBalanced(cs9))
Unrolling (r45 == blackHeight(cs33))
Unrolling (r51 == blackHeight(cs1))
Unrolling (r35 <=> blackBalanced(cs18))
Unrolling (r28 == blackHeight(cs11))
Unrolling (r27 == blackHeight(cs10))
Unrolling (r47 <=> blackBalanced(cs))
Unrolling (r22 <=> blackBalanced(cs5))
Unrolling (r48 == blackHeight(cs))
Unrolling (r31 <=> blackBalanced(cs14))
Unrolling (r29 == blackHeight(cs12))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.069s
2: solved... in 0.005s
1: solved... in 0.067s
2: solved... in 0.007s
1: solved... in 0.055s
2: solved... in 0.006s
1: solved... in 0.052s
2: solved... in 0.008s
1: solved... in 0.08s
2: solved... in 0.006s
1: solved... in 0.025s
2: solved... in 0.007s
1: solved... in 0.048s
2: solved... in 0.006s
1: solved... in 0.053s
2: solved... in 0.008s
1: solved... in 0.05s
2: solved... in 0.006s
1: solved... in 0.054s
2: solved... in 0.006s
1: solved... in 0.053s
2: solved... in 0.01s
1: solved... in 0.053s
2: solved... in 0.007s
1: solved... in 0.056s
2: solved... in 0.007s
1: solved... in 0.052s
2: solved... in 0.007s
1: solved... in 0.058s
2: solved... in 0.008s
1: solved... in 0.052s
2: solved... in 0.007s
1: solved... in 0.052s
2: solved... in 0.008s
1: solved... in 0.053s
2: solved... in 0.007s
1: solved... in 0.055s
2: solved... in 0.008s
1: solved... in 0.055s
2: solved... in 0.007s
1: solved... in 0.055s
2: solved... in 0.009s
1: solved... in 0.043s
2: solved... in 0.009s
1: solved... in 0.052s
2: solved... in 0.008s
1: solved... in 0.052s
2: solved... in 0.009s
1: solved... in 0.067s
2: solved... in 0.009s
1: solved... in 0.068s
2: solved... in 0.008s
1: solved... in 0.052s
2: solved... in 0.008s
1: solved... in 0.059s
2: solved... in 0.009s
1: solved... in 0.052s
2: solved... in 0.008s
1: solved... in 0.069s
2: solved... in 0.009s
1: solved... in 0.052s
2: solved... in 0.008s
1: solved... in 0.053s
2: solved... in 0.009s
1: solved... in 0.053s
2: solved... in 0.009s
1: solved... in 0.053s
2: solved... in 0.008s
1: solved... in 0.067s
2: solved... in 0.009s
1: solved... in 0.052s
2: solved... in 0.009s
1: solved... in 0.069s
2: solved... in 0.01s
1: solved... in 0.052s
2: solved... in 0.009s
1: solved... in 0.052s
2: solved... in 0.01s
1: solved... in 0.052s
2: solved... in 0.009s
1: solved... in 0.052s
2: solved... in 0.01s
1: solved... in 0.052s
2: solved... in 0.009s
1: solved... in 0.056s
2: solved... in 0.01s
1: solved... in 0.051s
2: solved... in 0.01s
1: solved... in 0.064s
2: solved... in 0.013s
1: solved... in 0.066s
2: solved... in 0.011s
1: solved... in 0.066s
2: solved... in 0.013s
1: solved... in 0.053s
2: solved... in 0.011s
1: solved... in 0.068s
2: solved... in 0.01s
1: solved... in 0.067s
2: solved... in 0.01s
1: solved... in 0.07s
2: solved... in 0.011s
1: solved... in 0.067s
2: solved... in 0.012s
1: solved... in 0.069s
2: solved... in 0.011s
1: solved... in 0.066s
2: solved... in 0.011s
1: solved... in 0.068s
2: solved... in 0.011s
1: solved... in 0.067s
2: solved... in 0.013s
1: solved... in 0.067s
2: solved... in 0.012s
1: solved... in 0.067s
2: solved... in 0.011s
1: solved... in 0.067s
2: solved... in 0.013s
1: solved... in 0.068s
2: solved... in 0.012s
1: solved... in 0.066s
2: solved... in 0.012s
1: solved... in 0.052s
2: solved... in 0.013s
1: solved... in 0.067s
2: solved... in 0.013s
1: solved... in 0.068s
2: solved... in 0.017s
1: solved... in 0.066s
2: solved... in 0.012s
1: solved... in 0.069s
2: solved... in 0.012s
1: solved... in 0.066s
2: solved... in 0.014s
1: solved... in 0.068s
2: solved... in 0.012s
1: solved... in 0.07s
2: solved... in 0.013s
1: solved... in 0.052s
2: solved... in 0.014s
1: solved... in 0.067s
2: solved... in 0.012s
1: solved... in 0.068s
2: solved... in 0.015s
1: solved... in 0.067s
2: solved... in 0.014s
1: solved... in 0.067s
2: solved... in 0.015s
1: solved... in 0.067s
2: solved... in 0.014s
1: solved... in 0.064s
2: solved... in 0.013s
1: solved... in 0.066s
2: solved... in 0.016s
1: solved... in 0.068s
2: solved... in 0.015s
1: solved... in 0.069s
2: solved... in 0.013s
1: solved... in 0.061s
2: solved... in 0.019s
1: solved... in 0.067s
2: solved... in 0.017s
1: solved... in 0.068s
2: solved... in 0.018s
1: solved... in 0.068s
2: solved... in 0.016s
1: solved... in 0.068s
2: solved... in 0.017s
1: solved... in 0.067s
2: solved... in 0.018s
1: solved... in 0.067s
2: solved... in 0.017s
1: solved... in 0.067s
2: solved... in 0.018s
1: solved... in 0.066s
2: solved... in 0.015s
1: solved... in 0.067s
2: solved... in 0.017s
1: solved... in 0.069s
2: solved... in 0.018s
1: solved... in 0.067s
2: solved... in 0.021s
1: solved... in 0.069s
2: solved... in 0.018s
1: solved... in 0.067s
2: solved... in 0.018s
1: solved... in 0.046s
2: solved... in 0.017s
1: solved... in 0.067s
2: solved... in 0.03s
1: solved... in 0.066s
2: solved... in 0.026s
1: solved... in 0.061s
2: solved... in 0.021s
1: solved... in 0.067s
2: solved... in 0.015s
1: solved... in 0.06s
2: solved... in 0.017s
1: solved... in 0.065s
2: solved... in 0.024s
1: solved... in 0.067s
2: solved... in 0.023s
1: solved... in 0.067s
2: solved... in 0.025s
1: solved... in 0.069s
2: solved... in 0.022s
1: solved... in 0.067s
2: solved... in 0.02s
1: solved... in 0.067s
2: solved... in 0.017s
1: solved... in 0.068s
2: solved... in 0.023s
1: solved... in 0.068s
2: solved... in 0.019s
1: solved... in 0.068s
2: solved... in 0.024s
1: solved... in 0.067s
2: solved... in 0.025s
1: solved... in 0.078s
2: solved... in 0.021s
1: solved... in 0.067s
2: solved... in 0.016s
1: solved... in 0.062s
2: solved... in 0.026s
1: solved... in 0.069s
2: solved... in 0.037s
1: solved... in 0.07s
2: solved... in 0.021s
1: solved... in 0.067s
2: solved... in 0.02s
1: solved... in 0.067s
2: solved... in 0.034s
1: solved... in 0.068s
2: solved... in 0.026s
1: solved... in 0.067s
2: solved... in 0.016s
1: solved... in 0.067s
2: solved... in 0.028s
1: solved... in 0.067s
2: solved... in 0.026s
1: solved... in 0.07s
2: solved... in 0.02s
1: solved... in 0.067s
2: solved... in 0.023s
1: solved... in 0.067s
2: solved... in 0.084s
1: solved... in 0.07s
2: solved... in 0.028s
1: solved... in 0.068s
2: solved... in 0.03s
1: solved... in 0.08s
2: solved... in 0.027s
1: solved... in 0.068s
2: solved... in 0.036s
1: solved... in 0.067s
2: solved... in 0.03s
1: solved... in 0.068s
2: solved... in 0.023s
1: solved... in 0.067s
2: solved... in 0.022s
1: solved... in 0.068s
2: solved... in 0.025s
1: solved... in 0.045s
2: solved... in 0.024s
1: solved... in 0.071s
2: solved... in 0.029s
1: solved... in 0.068s
2: solved... in 0.03s
1: solved... in 0.068s
2: solved... in 0.033s
1: solved... in 0.067s
2: solved... in 0.037s
1: solved... in 0.067s
2: solved... in 0.03s
1: solved... in 0.067s
2: solved... in 0.025s
1: solved... in 0.067s
2: solved... in 0.02s
1: solved... in 0.069s
2: solved... in 0.033s
1: solved... in 0.067s
2: solved... in 0.029s
1: solved... in 0.068s
2: solved... in 0.033s
1: solved... in 0.067s
2: solved... in 0.024s
1: solved... in 0.068s
2: solved... in 0.02s
1: solved... in 0.067s
2: solved... in 0.024s
1: solved... in 0.067s
2: solved... in 0.026s
1: solved... in 0.07s
2: solved... in 0.034s
1: solved... in 0.053s
2: solved... in 0.026s
1: solved... in 0.067s
2: solved... in 0.025s
1: solved... in 0.066s
2: solved... in 0.031s
1: solved... in 0.067s
2: solved... in 0.031s
1: solved... in 0.067s
2: solved... in 0.036s
1: solved... in 0.067s
2: solved... in 0.029s
1: solved... in 0.069s
2: solved... in 0.03s
1: solved... in 0.067s
2: solved... in 0.02s
1: solved... in 0.062s
2: solved... in 0.034s
1: solved... in 0.068s
2: solved... in 0.034s
1: solved... in 0.067s
2: solved... in 0.026s
1: solved... in 0.066s
2: solved... in 0.028s
1: solved... in 0.067s
2: solved... in 0.036s
1: solved... in 0.068s
2: solved... in 0.021s
1: solved... in 0.061s
2: solved... in 0.034s
1: solved... in 0.068s
2: solved... in 0.021s
1: solved... in 0.067s
2: solved... in 0.036s
1: solved... in 0.068s
2: solved... in 0.032s
1: solved... in 0.067s
2: solved... in 0.04s
1: solved... in 0.068s
2: solved... in 0.042s
1: solved... in 0.068s
2: solved... in 0.037s
1: solved... in 0.067s
2: solved... in 0.03s
1: solved... in 0.068s
2: solved... in 0.032s
1: solved... in 0.067s
2: solved... in 0.023s
1: solved... in 0.066s
2: solved... in 0.029s
1: solved... in 0.069s
2: solved... in 0.038s
1: solved... in 0.067s
2: solved... in 0.041s
1: solved... in 0.067s
2: solved... in 0.041s
1: solved... in 0.067s
2: solved... in 0.041s
1: solved... in 0.068s
2: solved... in 0.032s
1: solved... in 0.066s
2: solved... in 0.043s
1: solved... in 0.066s
2: solved... in 0.036s
1: solved... in 0.063s
2: solved... in 0.045s
1: solved... in 0.067s
2: solved... in 0.032s
1: solved... in 0.068s
2: solved... in 0.033s
1: solved... in 0.067s
2: solved... in 0.048s
1: solved... in 0.066s
2: solved... in 0.022s
1: solved... in 0.062s
2: solved... in 0.051s
1: solved... in 0.067s
2: solved... in 0.041s
1: solved... in 0.068s
2: solved... in 0.042s
1: solved... in 0.068s
2: solved... in 0.051s
1: solved... in 0.068s
2: solved... in 0.045s
1: solved... in 0.067s
2: solved... in 0.045s
1: solved... in 0.068s
2: solved... in 0.048s
1: solved... in 0.07s
2: solved... in 0.038s
1: solved... in 0.068s
2: solved... in 0.046s
1: solved... in 0.068s
2: solved... in 0.023s
1: solved... in 0.062s
2: solved... in 0.034s
1: solved... in 0.066s
2: solved... in 0.022s
1: solved... in 0.061s
2: solved... in 0.028s
1: solved... in 0.08s
2: solved... in 0.026s
1: solved... in 0.069s
2: solved... in 0.025s
1: solved... in 0.068s
2: solved... in 0.026s
1: solved... in 0.067s
2: solved... in 0.025s
1: solved... in 0.067s
2: solved... in 0.025s
1: solved... in 0.068s
2: solved... in 0.023s
1: solved... in 0.054s
2: solved... in 0.027s
1: solved... in 0.068s
2: solved... in 0.028s
1: solved... in 0.067s
2: solved... in 0.027s
1: solved... in 0.067s
2: solved... in 0.034s
1: solved... in 0.067s
2: solved... in 0.055s
1: solved... in 0.067s
2: solved... in 0.042s
1: solved... in 0.069s
2: solved... in 0.028s
1: solved... in 0.044s
2: solved... in 0.029s
1: solved... in 0.066s
2: solved... in 0.028s
1: solved... in 0.069s
2: solved... in 0.026s
1: solved... in 0.07s
2: solved... in 0.026s
1: solved... in 0.068s
2: solved... in 0.031s
1: solved... in 0.068s
2: solved... in 0.031s
1: solved... in 0.067s
2: solved... in 0.028s
1: solved... in 0.07s
2: solved... in 0.03s
1: solved... in 0.067s
2: solved... in 0.031s
1: solved... in 0.068s
2: solved... in 0.052s
1: solved... in 0.067s
2: solved... in 0.03s
1: solved... in 0.067s
2: solved... in 0.032s
1: solved... in 0.068s
2: solved... in 0.03s
1: solved... in 0.068s
2: solved... in 0.033s
1: solved... in 0.069s
2: solved... in 0.032s
1: solved... in 0.068s
2: solved... in 0.027s
1: solved... in 0.065s
2: solved... in 0.031s
1: solved... in 0.068s
2: solved... in 0.029s
1: solved... in 0.054s
2: solved... in 0.028s
1: solved... in 0.067s
2: solved... in 0.033s
1: solved... in 0.065s
2: solved... in 0.029s
1: solved... in 0.07s
2: solved... in 0.029s
1: solved... in 0.068s
2: solved... in 0.032s
1: solved... in 0.068s
2: solved... in 0.032s
1: solved... in 0.067s
2: solved... in 0.029s
1: solved... in 0.065s
2: solved... in 0.03s
1: solved... in 0.051s
2: solved... in 0.03s
1: solved... in 0.056s
2: solved... in 0.027s
1: solved... in 0.069s
2: solved... in 0.032s
1: solved... in 0.063s
2: solved... in 0.029s
1: solved... in 0.067s
2: solved... in 0.028s
1: solved... in 0.067s
2: solved... in 0.03s
1: solved... in 0.066s
2: solved... in 0.028s
1: solved... in 0.067s
2: solved... in 0.029s
1: solved... in 0.068s
2: solved... in 0.031s
1: solved... in 0.07s
2: solved... in 0.029s
1: solved... in 0.067s
2: solved... in 0.03s
1: solved... in 0.068s
2: solved... in 0.033s
1: solved... in 0.066s
2: solved... in 0.031s
1: solved... in 0.053s
2: solved... in 0.032s
1: solved... in 0.067s
2: solved... in 0.033s
1: solved... in 0.067s
2: solved... in 0.031s
1: solved... in 0.075s
2: solved... in 0.031s
1: solved... in 0.067s
2: solved... in 0.037s
1: solved... in 0.068s
2: solved... in 0.037s
1: solved... in 0.068s
2: solved... in 0.038s
1: solved... in 0.067s
2: solved... in 0.042s
1: solved... in 0.082s
2: solved... in 0.043s
1: solved... in 0.082s
2: solved... in 0.054s
1: solved... in 0.055s
2: solved... in 0.034s
1: solved... in 0.053s
2: solved... in 0.037s
1: solved... in 0.069s
2: solved... in 0.044s
1: solved... in 0.069s
2: solved... in 0.036s
1: solved... in 0.067s
2: solved... in 0.038s
1: solved... in 0.066s
2: solved... in 0.064s
1: solved... in 0.081s
2: solved... in 0.031s
1: solved... in 0.082s
2: solved... in 0.054s
1: solved... in 0.086s
2: solved... in 0.033s
1: solved... in 0.058s
2: solved... in 0.035s
1: solved... in 0.062s
2: solved... in 0.09s
1: solved... in 0.084s
2: solved... in 0.056s
1: solved... in 0.081s
2: solved... in 0.069s
1: solved... in 0.081s
2: solved... in 0.142s
1: solved... in 0.072s
2: solved... in 0.072s
1: solved... in 0.081s
2: solved... in 0.19s
1: solved... in 0.066s
2: solved... in 0.099s
1: solved... in 0.081s
2: solved... in 0.034s
1: solved... in 0.053s
2: solved... in 0.033s
1: solved... in 0.044s
2: solved... in 0.034s
1: solved... in 0.066s
2: solved... in 0.034s
1: solved... in 0.054s
2: solved... in 0.117s
1: solved... in 0.08s
2: solved... in 0.098s
1: solved... in 0.062s
2: solved... in 0.087s
1: solved... in 0.08s
2: solved... in 0.097s
1: solved... in 0.08s
2: solved... in 0.088s
1: solved... in 0.085s
2: solved... in 0.047s
1: solved... in 0.066s
2: solved... in 0.081s
1: solved... in 0.067s
2: solved... in 0.07s
1: solved... in 0.063s
2: solved... in 0.054s
1: solved... in 0.08s
2: solved... in 0.12s
1: solved... in 0.05s
2: solved... in 0.072s
1: solved... in 0.067s
2: solved... in 0.072s
1: solved... in 0.079s
2: solved... in 0.057s
1: solved... in 0.086s
2: solved... in 0.047s
1: solved... in 0.051s
2: solved... in 0.036s
1: solved... in 0.079s
2: solved... in 0.036s
1: solved... in 0.046s
[[34m Info  [0m] - Found inductive invariant: size --> ((((-9 * res7) + (1 * twopower(blackHeight(t)))) + -1) <= 0)
[[34m Info  [0m] - Found inductive invariant: twopower --> ((((20 * x) + (-6 * #res)) + -16) <= 0)
[[34m Info  [0m] - Found inductive invariant: blackBalanced --> (0 <= 0)
[[34m Info  [0m] - Found inductive invariant: blackHeight --> (((0 * #res) + 0) <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[31m Error [0m] - Unable to prove or disprove invariant, the invariant is probably true
[[34m Info  [0m] - considering function ins...
[[34m Info  [0m] Body: if (t.isInstanceOf[Empty])
            (Node(Red(), Empty(), x, Empty()), (1 + 4))
          else
            (let (e21,t29 := if ((x < t.value))
              (let (e23,t31 := (let (ir,it := (let (e26,t35 := ins(x, t.left)) in
                (e26, (1 + (1 + t35))))) in
                (let (r8,t32 := (let (e32,t41 := balance(t.color, ir, t.value, t.right)) in
                  (e32, (1 + (1 + (1 + (1 + t41))))))) in
                  (r8, (t32 + (it + 1)))))) in
                (e23, (2 + t31)))
            else
              (let (e36,t45 := if ((x == t.value))
                (Node(t.color, t.left, t.value, t.right), (2 + 5))
              else
                (let (e47,t56 := (let (ir1,it1 := (let (e50,t60 := ins(x, t.right)) in
                  (e50, (1 + (1 + t60))))) in
                  (let (r9,t57 := (let (e56,t66 := balance(t.color, t.left, t.value, ir1)) in
                    (e56, (1 + (1 + (1 + (1 + t66))))))) in
                    (r9, (t57 + (it1 + 1)))))) in
                  (e47, (2 + t56)))) in
                (e36, (2 + t45)))) in
              (e21, (1 + t29)))
[[34m Info  [0m] Post: true
falttened Body: (r207 && (r207 == redNodesHaveBlackChildren(t)) && r208 && (r208 == blackBalanced(t)) && (res8 == ifres81) && ((ci230 && (ci230 == t.isInstanceOf[Empty]) && (ifres81 == tp) && (tp == (cc3, arg6)) && (arg6 == (1 + 4)) && (cc2 == Empty()) && (cc == Red()) && (cc1 == Empty()) && (cc3 == Node(cc, cc1, x, cc2))) || (!(ci231) && (ci231 == t.isInstanceOf[Empty]) && (ifres81 == tp1) && (arg7 == (1 + t29)) && (tp1 == (e21, arg7)) && (((x < cs246) && (cs246 == t.value) && (ifres82 == tp2) && (arg8 == (2 + t31)) && (tp2 == (e23, arg8)) && (t41 == ts) && (ts == tres._2) && (t32 == (1 + (1 + (1 + (1 + t41))))) && (e26 == ts1) && (ts1 == tres1._1) && (t31 == (t32 + (it + 1))) && (t35 == ts2) && (ts2 == tres1._2) && (tres1 == r209) && (cs247 == t.left) && (r209 == ins(x, cs247)) && (r8 == e32) && (e23 == r8) && (it == (1 + (1 + t35))) && (tres == r210) && (cs248 == t.color) && (cs249 == t.value) && (cs250 == t.right) && (r210 == balance(cs248, ir, cs249, cs250)) && (e32 == ts3) && (ts3 == tres._1) && (ir == e26)) || ((x >= cs251) && (cs251 == t.value) && (ifres82 == tp3) && (arg9 == (2 + t45)) && (tp3 == (e36, arg9)) && (((x == cs252) && (cs252 == t.value) && (ifres83 == tp4) && (cs254 == t.left) && (cs253 == t.color) && (tp4 == (cc4, arg10)) && (cs256 == t.right) && (arg10 == (2 + 5)) && (cs255 == t.value) && (cc4 == Node(cs253, cs254, cs255, cs256))) || ((((x < cs257) && (cs257 == t.value)) || ((x > cs258) && (cs258 == t.value))) && (ifres83 == tp5) && (arg11 == (2 + t56)) && (tp5 == (e47, arg11)) && (t56 == (t57 + (it1 + 1))) && (tres3 == r211) && (cs259 == t.right) && (r211 == ins(x, cs259)) && (it1 == (1 + (1 + t60))) && (e56 == ts4) && (ts4 == tres2._1) && (tres2 == r212) && (cs260 == t.color) && (cs261 == t.left) && (cs262 == t.value) && (r212 == balance(cs260, cs261, cs262, ir1)) && (t60 == ts5) && (ts5 == tres3._2) && (t57 == (1 + (1 + (1 + (1 + t66))))) && (t66 == ts6) && (ts6 == tres2._2) && (e50 == ts7) && (ts7 == tres3._1) && (ir1 == e50) && (e47 == r9) && (r9 == e56))) && (e36 == ts8) && (ts8 == ifres83._1) && (t45 == ts9) && (ts9 == ifres83._2))) && (e21 == ts10) && (ts10 == ifres82._1) && (t29 == ts11) && (ts11 == ifres82._2))))
Flattened Post: ((ts12 > ((a?1 * r213) + b?1)) && (ts12 == res8._2) && (r213 == blackHeight(t)))
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.014s
2: solved... in 0.006s
1: solved... in 0.01s
2: solved... in 0.005s
1: solved... in 0.01s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.005s
1: solved... in 0.009s
2: solved... in 0.005s
1: solved... in 0.009s
2: solved... in 0.006s
1: solved... in 0.009s
2: solved... in 0.005s
1: solved... in 0.009s
2: solved... in 0.006s
1: solved... in 0.009s
2: solved... in 0.006s
1: solved... in 0.009s
2: solved... in 0.006s
1: solved... in 0.009s
2: solved... in 0.006s
1: solved... in 0.009s
2: solved... in 0.006s
1: solved... in 0.009s
2: solved... in 0.005s
1: solved... in 0.009s
2: solved... in 0.006s
1: solved... in 0.01s
2: solved... in 0.006s
1: solved... in 0.009s
2: solved... in 0.005s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.005s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.009s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.009s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.008s
2: solved... in 0.006s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.009s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.009s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.007s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.011s
2: solved... in 0.008s
1: solved... in 0.014s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.017s
1: solved... in 0.014s
2: solved... in 0.008s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.008s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.016s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.018s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.01s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.009s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.009s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.013s
1: solved... in 0.009s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.009s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.01s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.01s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.012s
1: solved... in 0.007s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.011s
1: solved... in 0.008s
2: solved... in 0.013s
1: solved... in 0.008s
2: solved... in 0.02s
1: solved... in 0.008s
2: solved... in 0.012s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 7/7
Unrolled calls: Set((r210 == balance(cs248, ir, cs249, cs250)), (r208 <=> blackBalanced(t)), (r209 == ins(x, cs247)), (r213 == blackHeight(t)), (r211 == ins(x, cs259)), (r212 == balance(cs260, cs261, cs262, ir1)), (r207 <=> redNodesHaveBlackChildren(t)))
Inlining (r212 == balance(cs260, cs261, cs262, ir1))
Creating VC for redNodesHaveBlackChildren
[[34m Info  [0m] - Number of new terms enumerated: 2
[[34m Info  [0m] - Template generated for function redNodesHaveBlackChildren : (a?5349 ≤ 0)
Unrolling (r207 <=> redNodesHaveBlackChildren(t))
Unrolling (r211 == ins(x, cs259))
Unrolling (r209 == ins(x, cs247))
Inlining (r210 == balance(cs248, ir, cs249, cs250))
Creating VC for blackHeight
Unrolling (r213 == blackHeight(t))
Creating VC for blackBalanced
Unrolling (r208 <=> blackBalanced(t))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.087s
2: solved... in 0.006s
1: solved... in 0.027s
2: solved... in 0.006s
1: solved... in 0.025s
2: solved... in 0.006s
1: solved... in 0.065s
2: solved... in 0.006s
1: solved... in 0.066s
2: solved... in 0.006s
1: solved... in 0.089s
2: solved... in 0.006s
1: solved... in 0.092s
2: solved... in 0.007s
1: solved... in 0.025s
2: solved... in 0.006s
1: solved... in 0.089s
2: solved... in 0.006s
1: solved... in 0.064s
2: solved... in 0.006s
1: solved... in 0.065s
2: solved... in 0.006s
1: solved... in 0.024s
2: solved... in 0.006s
1: solved... in 0.064s
2: solved... in 0.007s
1: solved... in 0.065s
2: solved... in 0.007s
1: solved... in 0.065s
2: solved... in 0.006s
1: solved... in 0.064s
2: solved... in 0.006s
1: solved... in 0.064s
2: solved... in 0.006s
1: solved... in 0.064s
2: solved... in 0.006s
1: solved... in 0.064s
2: solved... in 0.007s
1: solved... in 0.063s
2: solved... in 0.007s
1: solved... in 0.067s
2: solved... in 0.006s
1: solved... in 0.064s
2: solved... in 0.006s
1: solved... in 0.065s
2: solved... in 0.007s
1: solved... in 0.063s
2: solved... in 0.007s
1: solved... in 0.065s
2: solved... in 0.006s
1: solved... in 0.064s
2: solved... in 0.007s
1: solved... in 0.063s
2: solved... in 0.006s
1: solved... in 0.066s
2: solved... in 0.006s
1: solved... in 0.063s
2: solved... in 0.006s
1: solved... in 0.067s
2: solved... in 0.007s
1: solved... in 0.065s
2: solved... in 0.007s
1: solved... in 0.065s
2: solved... in 0.007s
1: solved... in 0.065s
2: solved... in 0.007s
1: solved... in 0.065s
2: solved... in 0.007s
1: solved... in 0.064s
2: solved... in 0.007s
1: solved... in 0.065s
2: solved... in 0.007s
1: solved... in 0.067s
2: solved... in 0.007s
1: solved... in 0.065s
2: solved... in 0.007s
1: solved... in 0.066s
2: solved... in 0.007s
1: solved... in 0.064s
2: solved... in 0.007s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.065s
2: solved... in 0.007s
1: solved... in 0.076s
2: solved... in 0.008s
1: solved... in 0.065s
2: solved... in 0.007s
1: solved... in 0.065s
2: solved... in 0.007s
1: solved... in 0.066s
2: solved... in 0.008s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.065s
2: solved... in 0.007s
1: solved... in 0.064s
2: solved... in 0.008s
1: solved... in 0.063s
2: solved... in 0.008s
1: solved... in 0.066s
2: solved... in 0.008s
1: solved... in 0.064s
2: solved... in 0.008s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.065s
2: solved... in 0.007s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.064s
2: solved... in 0.008s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.064s
2: solved... in 0.008s
1: solved... in 0.068s
2: solved... in 0.008s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.065s
2: solved... in 0.009s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.065s
2: solved... in 0.009s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.064s
2: solved... in 0.009s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.067s
2: solved... in 0.008s
1: solved... in 0.065s
2: solved... in 0.009s
1: solved... in 0.064s
2: solved... in 0.008s
1: solved... in 0.067s
2: solved... in 0.008s
1: solved... in 0.064s
2: solved... in 0.009s
1: solved... in 0.065s
2: solved... in 0.009s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.064s
2: solved... in 0.009s
1: solved... in 0.067s
2: solved... in 0.008s
1: solved... in 0.064s
2: solved... in 0.009s
1: solved... in 0.065s
2: solved... in 0.009s
1: solved... in 0.063s
2: solved... in 0.009s
1: solved... in 0.065s
2: solved... in 0.009s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.074s
2: solved... in 0.009s
1: solved... in 0.066s
2: solved... in 0.009s
1: solved... in 0.065s
2: solved... in 0.009s
1: solved... in 0.065s
2: solved... in 0.008s
1: solved... in 0.064s
2: solved... in 0.009s
1: solved... in 0.065s
2: solved... in 0.01s
1: solved... in 0.065s
2: solved... in 0.009s
1: solved... in 0.064s
2: solved... in 0.009s
1: solved... in 0.063s
2: solved... in 0.01s
1: solved... in 0.065s
2: solved... in 0.009s
1: solved... in 0.065s
2: solved... in 0.009s
1: solved... in 0.063s
2: solved... in 0.01s
1: solved... in 0.066s
2: solved... in 0.01s
1: solved... in 0.065s
2: solved... in 0.01s
1: solved... in 0.065s
2: solved... in 0.009s
1: solved... in 0.064s
2: solved... in 0.009s
1: solved... in 0.064s
2: solved... in 0.009s
1: solved... in 0.063s
2: solved... in 0.009s
1: solved... in 0.064s
2: solved... in 0.01s
1: solved... in 0.066s
2: solved... in 0.01s
1: solved... in 0.064s
2: solved... in 0.01s
1: solved... in 0.07s
2: solved... in 0.01s
1: solved... in 0.063s
2: solved... in 0.01s
1: solved... in 0.066s
2: solved... in 0.01s
1: solved... in 0.065s
2: solved... in 0.01s
1: solved... in 0.063s
2: solved... in 0.01s
1: solved... in 0.063s
2: solved... in 0.01s
1: solved... in 0.081s
2: solved... in 0.01s
1: solved... in 0.065s
2: solved... in 0.01s
1: solved... in 0.064s
2: solved... in 0.009s
1: solved... in 0.066s
2: solved... in 0.01s
1: solved... in 0.063s
2: solved... in 0.01s
1: solved... in 0.065s
2: solved... in 0.01s
1: solved... in 0.068s
2: solved... in 0.01s
1: solved... in 0.063s
2: solved... in 0.01s
1: solved... in 0.065s
2: solved... in 0.01s
1: solved... in 0.064s
2: solved... in 0.011s
1: solved... in 0.063s
2: solved... in 0.01s
1: solved... in 0.065s
2: solved... in 0.011s
1: solved... in 0.066s
2: solved... in 0.01s
1: solved... in 0.063s
2: solved... in 0.01s
1: solved... in 0.067s
2: solved... in 0.01s
1: solved... in 0.064s
2: solved... in 0.01s
1: solved... in 0.064s
2: solved... in 0.01s
1: solved... in 0.064s
2: solved... in 0.01s
1: solved... in 0.064s
2: solved... in 0.011s
1: solved... in 0.064s
2: solved... in 0.01s
1: solved... in 0.064s
2: solved... in 0.011s
1: solved... in 0.066s
2: solved... in 0.01s
1: solved... in 0.064s
2: solved... in 0.011s
1: solved... in 0.065s
2: solved... in 0.011s
1: solved... in 0.065s
2: solved... in 0.01s
1: solved... in 0.063s
2: solved... in 0.011s
1: solved... in 0.063s
2: solved... in 0.011s
1: solved... in 0.065s
2: solved... in 0.011s
1: solved... in 0.064s
2: solved... in 0.011s
1: solved... in 0.064s
2: solved... in 0.012s
1: solved... in 0.065s
2: solved... in 0.011s
1: solved... in 0.063s
2: solved... in 0.011s
1: solved... in 0.068s
2: solved... in 0.011s
1: solved... in 0.064s
2: solved... in 0.011s
1: solved... in 0.063s
2: solved... in 0.011s
1: solved... in 0.063s
2: solved... in 0.011s
1: solved... in 0.065s
2: solved... in 0.011s
1: solved... in 0.066s
2: solved... in 0.011s
1: solved... in 0.064s
2: solved... in 0.012s
1: solved... in 0.064s
2: solved... in 0.011s
1: solved... in 0.063s
2: solved... in 0.011s
1: solved... in 0.065s
2: solved... in 0.011s
1: solved... in 0.064s
2: solved... in 0.011s
1: solved... in 0.064s
2: solved... in 0.012s
1: solved... in 0.064s
2: solved... in 0.011s
1: solved... in 0.064s
2: solved... in 0.011s
1: solved... in 0.064s
2: solved... in 0.012s
1: solved... in 0.065s
2: solved... in 0.012s
1: solved... in 0.064s
2: solved... in 0.012s
1: solved... in 0.063s
2: solved... in 0.012s
1: solved... in 0.066s
2: solved... in 0.012s
1: solved... in 0.065s
2: solved... in 0.012s
1: solved... in 0.063s
2: solved... in 0.012s
1: solved... in 0.063s
2: solved... in 0.012s
1: solved... in 0.064s
2: solved... in 0.012s
1: solved... in 0.064s
2: solved... in 0.013s
1: solved... in 0.064s
2: solved... in 0.012s
1: solved... in 0.065s
2: solved... in 0.012s
1: solved... in 0.063s
2: solved... in 0.011s
1: solved... in 0.066s
2: solved... in 0.012s
1: solved... in 0.065s
2: solved... in 0.012s
1: solved... in 0.063s
2: solved... in 0.012s
1: solved... in 0.07s
2: solved... in 0.012s
1: solved... in 0.065s
2: solved... in 0.012s
1: solved... in 0.064s
2: solved... in 0.012s
1: solved... in 0.064s
2: solved... in 0.013s
1: solved... in 0.065s
2: solved... in 0.012s
1: solved... in 0.064s
2: solved... in 0.012s
1: solved... in 0.066s
2: solved... in 0.012s
1: solved... in 0.064s
2: solved... in 0.012s
1: solved... in 0.066s
2: solved... in 0.012s
1: solved... in 0.064s
2: solved... in 0.012s
1: solved... in 0.064s
2: solved... in 0.012s
1: solved... in 0.065s
2: solved... in 0.012s
1: solved... in 0.064s
2: solved... in 0.013s
1: solved... in 0.065s
2: solved... in 0.013s
1: solved... in 0.063s
2: solved... in 0.012s
1: solved... in 0.066s
2: solved... in 0.012s
1: solved... in 0.064s
2: solved... in 0.012s
1: solved... in 0.065s
2: solved... in 0.013s
1: solved... in 0.063s
2: solved... in 0.013s
1: solved... in 0.065s
2: solved... in 0.013s
1: solved... in 0.064s
2: solved... in 0.013s
1: solved... in 0.064s
2: solved... in 0.013s
1: solved... in 0.064s
2: solved... in 0.013s
1: solved... in 0.064s
2: solved... in 0.014s
1: solved... in 0.066s
2: solved... in 0.013s
1: solved... in 0.071s
2: solved... in 0.014s
1: solved... in 0.073s
2: solved... in 0.013s
1: solved... in 0.064s
2: solved... in 0.013s
1: solved... in 0.064s
2: solved... in 0.014s
1: solved... in 0.065s
2: solved... in 0.013s
1: solved... in 0.063s
2: solved... in 0.013s
1: solved... in 0.063s
2: solved... in 0.013s
1: solved... in 0.064s
2: solved... in 0.014s
1: solved... in 0.065s
2: solved... in 0.014s
1: solved... in 0.089s
2: solved... in 0.014s
1: solved... in 0.065s
2: solved... in 0.013s
1: solved... in 0.089s
2: solved... in 0.014s
1: solved... in 0.066s
2: solved... in 0.013s
1: solved... in 0.089s
2: solved... in 0.014s
1: solved... in 0.066s
2: solved... in 0.013s
1: solved... in 0.089s
2: solved... in 0.014s
1: solved... in 0.063s
2: solved... in 0.014s
1: solved... in 0.089s
2: solved... in 0.015s
1: solved... in 0.065s
2: solved... in 0.014s
1: solved... in 0.088s
2: solved... in 0.014s
1: solved... in 0.064s
2: solved... in 0.014s
1: solved... in 0.089s
2: solved... in 0.015s
1: solved... in 0.064s
2: solved... in 0.014s
1: solved... in 0.088s
2: solved... in 0.015s
1: solved... in 0.064s
2: solved... in 0.015s
1: solved... in 0.089s
2: solved... in 0.015s
1: solved... in 0.064s
2: solved... in 0.014s
1: solved... in 0.09s
2: solved... in 0.015s
1: solved... in 0.064s
2: solved... in 0.015s
1: solved... in 0.092s
2: solved... in 0.015s
1: solved... in 0.065s
2: solved... in 0.014s
1: solved... in 0.09s
2: solved... in 0.014s
1: solved... in 0.064s
2: solved... in 0.014s
1: solved... in 0.09s
2: solved... in 0.015s
1: solved... in 0.063s
2: solved... in 0.015s
1: solved... in 0.088s
2: solved... in 0.015s
1: solved... in 0.064s
2: solved... in 0.015s
1: solved... in 0.089s
2: solved... in 0.015s
1: solved... in 0.064s
2: solved... in 0.015s
1: solved... in 0.088s
2: solved... in 0.016s
1: solved... in 0.065s
2: solved... in 0.015s
1: solved... in 0.088s
2: solved... in 0.015s
1: solved... in 0.065s
2: solved... in 0.015s
1: solved... in 0.089s
2: solved... in 0.016s
1: solved... in 0.072s
2: solved... in 0.015s
1: solved... in 0.089s
2: solved... in 0.016s
1: solved... in 0.065s
2: solved... in 0.015s
1: solved... in 0.09s
2: solved... in 0.016s
1: solved... in 0.066s
2: solved... in 0.015s
1: solved... in 0.089s
2: solved... in 0.016s
1: solved... in 0.066s
2: solved... in 0.015s
1: solved... in 0.089s
2: solved... in 0.016s
1: solved... in 0.066s
2: solved... in 0.016s
1: solved... in 0.089s
2: solved... in 0.017s
1: solved... in 0.064s
2: solved... in 0.016s
1: solved... in 0.089s
2: solved... in 0.025s
1: solved... in 0.064s
2: solved... in 0.016s
1: solved... in 0.089s
2: solved... in 0.016s
1: solved... in 0.064s
2: solved... in 0.016s
1: solved... in 0.089s
2: solved... in 0.016s
1: solved... in 0.072s
2: solved... in 0.017s
1: solved... in 0.133s
2: solved... in 0.027s
1: solved... in 0.102s
2: solved... in 0.025s
1: solved... in 0.146s
2: solved... in 0.017s
1: solved... in 0.063s
2: solved... in 0.016s
1: solved... in 0.088s
2: solved... in 0.017s
1: solved... in 0.065s
2: solved... in 0.017s
1: solved... in 0.089s
2: solved... in 0.017s
1: solved... in 0.064s
2: solved... in 0.017s
1: solved... in 0.09s
2: solved... in 0.017s
1: solved... in 0.064s
2: solved... in 0.016s
1: solved... in 0.091s
2: solved... in 0.017s
1: solved... in 0.064s
2: solved... in 0.017s
1: solved... in 0.091s
2: solved... in 0.018s
1: solved... in 0.064s
2: solved... in 0.017s
1: solved... in 0.091s
2: solved... in 0.017s
1: solved... in 0.064s
2: solved... in 0.016s
1: solved... in 0.089s
2: solved... in 0.018s
1: solved... in 0.065s
2: solved... in 0.017s
1: solved... in 0.089s
2: solved... in 0.017s
1: solved... in 0.064s
2: solved... in 0.018s
1: solved... in 0.089s
2: solved... in 0.018s
1: solved... in 0.064s
2: solved... in 0.017s
1: solved... in 0.089s
2: solved... in 0.017s
1: solved... in 0.065s
2: solved... in 0.017s
1: solved... in 0.089s
2: solved... in 0.018s
1: solved... in 0.065s
2: solved... in 0.017s
1: solved... in 0.088s
2: solved... in 0.019s
1: solved... in 0.066s
2: solved... in 0.017s
1: solved... in 0.089s
2: solved... in 0.019s
1: solved... in 0.068s
2: solved... in 0.017s
1: solved... in 0.088s
2: solved... in 0.017s
1: solved... in 0.067s
2: solved... in 0.017s
1: solved... in 0.089s
2: solved... in 0.02s
1: solved... in 0.067s
2: solved... in 0.018s
1: solved... in 0.089s
2: solved... in 0.018s
1: solved... in 0.067s
2: solved... in 0.018s
1: solved... in 0.088s
2: solved... in 0.018s
1: solved... in 0.064s
2: solved... in 0.018s
1: solved... in 0.089s
2: solved... in 0.018s
1: solved... in 0.065s
2: solved... in 0.018s
1: solved... in 0.088s
2: solved... in 0.019s
1: solved... in 0.065s
2: solved... in 0.018s
1: solved... in 0.089s
2: solved... in 0.018s
1: solved... in 0.064s
2: solved... in 0.018s
1: solved... in 0.088s
2: solved... in 0.019s
1: solved... in 0.064s
2: solved... in 0.02s
1: solved... in 0.088s
2: solved... in 0.019s
1: solved... in 0.064s
2: solved... in 0.018s
1: solved... in 0.09s
2: solved... in 0.019s
1: solved... in 0.064s
2: solved... in 0.02s
1: solved... in 0.098s
2: solved... in 0.019s
1: solved... in 0.065s
2: solved... in 0.018s
1: solved... in 0.09s
2: solved... in 0.019s
1: solved... in 0.064s
2: solved... in 0.018s
1: solved... in 0.091s
2: solved... in 0.019s
1: solved... in 0.064s
2: solved... in 0.018s
1: solved... in 0.091s
2: solved... in 0.019s
1: solved... in 0.065s
2: solved... in 0.018s
1: solved... in 0.091s
2: solved... in 0.019s
1: solved... in 0.064s
2: solved... in 0.019s
1: solved... in 0.09s
2: solved... in 0.02s
1: solved... in 0.064s
2: solved... in 0.019s
1: solved... in 0.088s
2: solved... in 0.02s
1: solved... in 0.064s
2: solved... in 0.019s
1: solved... in 0.088s
2: solved... in 0.02s
1: solved... in 0.064s
2: solved... in 0.02s
1: solved... in 0.088s
2: solved... in 0.02s
1: solved... in 0.065s
2: solved... in 0.019s
1: solved... in 0.089s
2: solved... in 0.02s
1: solved... in 0.064s
2: solved... in 0.019s
1: solved... in 0.088s
2: solved... in 0.02s
1: solved... in 0.065s
2: solved... in 0.02s
1: solved... in 0.09s
2: solved... in 0.02s
1: solved... in 0.066s
2: solved... in 0.019s
1: solved... in 0.089s
2: solved... in 0.021s
1: solved... in 0.065s
2: solved... in 0.02s
1: solved... in 0.088s
2: solved... in 0.022s
1: solved... in 0.066s
2: solved... in 0.022s
1: solved... in 0.088s
2: solved... in 0.022s
1: solved... in 0.066s
2: solved... in 0.02s
1: solved... in 0.089s
2: solved... in 0.02s
1: solved... in 0.067s
2: solved... in 0.02s
1: solved... in 0.089s
2: solved... in 0.021s
1: solved... in 0.071s
2: solved... in 0.02s
1: solved... in 0.088s
2: solved... in 0.021s
1: solved... in 0.068s
2: solved... in 0.02s
1: solved... in 0.088s
2: solved... in 0.021s
1: solved... in 0.064s
2: solved... in 0.02s
1: solved... in 0.089s
2: solved... in 0.021s
1: solved... in 0.065s
2: solved... in 0.02s
1: solved... in 0.088s
2: solved... in 0.021s
1: solved... in 0.064s
2: solved... in 0.021s
1: solved... in 0.089s
2: solved... in 0.021s
1: solved... in 0.064s
2: solved... in 0.02s
1: solved... in 0.09s
2: solved... in 0.021s
1: solved... in 0.064s
2: solved... in 0.021s
1: solved... in 0.088s
2: solved... in 0.022s
1: solved... in 0.064s
2: solved... in 0.022s
1: solved... in 0.089s
2: solved... in 0.021s
1: solved... in 0.065s
2: solved... in 0.021s
1: solved... in 0.089s
2: solved... in 0.022s
1: solved... in 0.065s
2: solved... in 0.021s
1: solved... in 0.09s
2: solved... in 0.022s
1: solved... in 0.064s
2: solved... in 0.023s
1: solved... in 0.09s
2: solved... in 0.022s
1: solved... in 0.064s
2: solved... in 0.021s
1: solved... in 0.091s
2: solved... in 0.023s
1: solved... in 0.086s
2: solved... in 0.022s
1: solved... in 0.091s
2: solved... in 0.022s
1: solved... in 0.065s
2: solved... in 0.021s
1: solved... in 0.092s
2: solved... in 0.022s
1: solved... in 0.064s
2: solved... in 0.021s
1: solved... in 0.091s
2: solved... in 0.022s
1: solved... in 0.066s
2: solved... in 0.022s
1: solved... in 0.096s
2: solved... in 0.022s
1: solved... in 0.068s
2: solved... in 0.023s
1: solved... in 0.095s
2: solved... in 0.026s
1: solved... in 0.065s
2: solved... in 0.021s
1: solved... in 0.094s
2: solved... in 0.023s
1: solved... in 0.067s
2: solved... in 0.022s
1: solved... in 0.094s
2: solved... in 0.026s
1: solved... in 0.064s
2: solved... in 0.022s
1: solved... in 0.091s
2: solved... in 0.024s
1: solved... in 0.067s
2: solved... in 0.022s
1: solved... in 0.095s
2: solved... in 0.023s
1: solved... in 0.067s
2: solved... in 0.026s
1: solved... in 0.094s
2: solved... in 0.026s
1: solved... in 0.064s
2: solved... in 0.022s
1: solved... in 0.094s
2: solved... in 0.023s
1: solved... in 0.067s
2: solved... in 0.022s
1: solved... in 0.095s
2: solved... in 0.023s
1: solved... in 0.068s
2: solved... in 0.026s
1: solved... in 0.096s
2: solved... in 0.026s
1: solved... in 0.065s
2: solved... in 0.023s
1: solved... in 0.091s
2: solved... in 0.024s
1: solved... in 0.067s
2: solved... in 0.023s
1: solved... in 0.096s
2: solved... in 0.024s
1: solved... in 0.068s
2: solved... in 0.026s
1: solved... in 0.095s
2: solved... in 0.026s
1: solved... in 0.065s
2: solved... in 0.023s
1: solved... in 0.095s
2: solved... in 0.024s
1: solved... in 0.066s
2: solved... in 0.023s
1: solved... in 0.095s
2: solved... in 0.024s
1: solved... in 0.069s
2: solved... in 0.026s
1: solved... in 0.096s
2: solved... in 0.028s
1: solved... in 0.064s
2: solved... in 0.024s
1: solved... in 0.094s
2: solved... in 0.024s
1: solved... in 0.067s
2: solved... in 0.023s
1: solved... in 0.095s
2: solved... in 0.025s
1: solved... in 0.069s
2: solved... in 0.025s
1: solved... in 0.095s
2: solved... in 0.027s
1: solved... in 0.065s
2: solved... in 0.024s
1: solved... in 0.094s
2: solved... in 0.025s
1: solved... in 0.067s
2: solved... in 0.023s
1: solved... in 0.094s
2: solved... in 0.025s
1: solved... in 0.068s
2: solved... in 0.024s
1: solved... in 0.093s
2: solved... in 0.027s
1: solved... in 0.064s
2: solved... in 0.024s
1: solved... in 0.102s
2: solved... in 0.026s
1: solved... in 0.07s
2: solved... in 0.025s
1: solved... in 0.093s
2: solved... in 0.025s
1: solved... in 0.067s
2: solved... in 0.025s
1: solved... in 0.093s
2: solved... in 0.025s
1: solved... in 0.068s
2: solved... in 0.028s
1: solved... in 0.093s
2: solved... in 0.029s
1: solved... in 0.066s
2: solved... in 0.024s
1: solved... in 0.091s
2: solved... in 0.025s
1: solved... in 0.068s
2: solved... in 0.025s
1: solved... in 0.093s
2: solved... in 0.025s
1: solved... in 0.064s
2: solved... in 0.036s
1: solved... in 0.09s
2: solved... in 0.026s
1: solved... in 0.065s
2: solved... in 0.024s
1: solved... in 0.09s
2: solved... in 0.026s
1: solved... in 0.066s
2: solved... in 0.025s
1: solved... in 0.09s
2: solved... in 0.026s
1: solved... in 0.088s
2: solved... in 0.029s
1: solved... in 0.065s
2: solved... in 0.025s
1: solved... in 0.065s
2: solved... in 0.032s
1: solved... in 0.097s
2: solved... in 0.026s
1: solved... in 0.065s
2: solved... in 0.026s
1: solved... in 0.09s
2: solved... in 0.026s
1: solved... in 0.064s
2: solved... in 0.026s
1: solved... in 0.09s
2: solved... in 0.026s
1: solved... in 0.064s
2: solved... in 0.026s
1: solved... in 0.09s
2: solved... in 0.026s
1: solved... in 0.064s
2: solved... in 0.027s
1: solved... in 0.091s
2: solved... in 0.026s
1: solved... in 0.064s
2: solved... in 0.026s
1: solved... in 0.091s
2: solved... in 0.026s
1: solved... in 0.065s
2: solved... in 0.027s
1: solved... in 0.09s
2: solved... in 0.027s
1: solved... in 0.064s
2: solved... in 0.025s
1: solved... in 0.091s
2: solved... in 0.027s
1: solved... in 0.064s
2: solved... in 0.026s
1: solved... in 0.091s
2: solved... in 0.027s
1: solved... in 0.065s
2: solved... in 0.026s
1: solved... in 0.091s
2: solved... in 0.026s
1: solved... in 0.065s
2: solved... in 0.026s
1: solved... in 0.091s
2: solved... in 0.028s
1: solved... in 0.064s
2: solved... in 0.026s
1: solved... in 0.091s
2: solved... in 0.027s
1: solved... in 0.064s
2: solved... in 0.026s
1: solved... in 0.092s
2: solved... in 0.028s
1: solved... in 0.066s
2: solved... in 0.027s
1: solved... in 0.098s
2: solved... in 0.027s
1: solved... in 0.065s
2: solved... in 0.026s
1: solved... in 0.092s
2: solved... in 0.028s
1: solved... in 0.065s
2: solved... in 0.026s
1: solved... in 0.092s
2: solved... in 0.028s
1: solved... in 0.064s
2: solved... in 0.027s
1: solved... in 0.092s
2: solved... in 0.027s
1: solved... in 0.064s
2: solved... in 0.027s
1: solved... in 0.091s
2: solved... in 0.028s
1: solved... in 0.064s
2: solved... in 0.026s
1: solved... in 0.092s
2: solved... in 0.028s
1: solved... in 0.065s
2: solved... in 0.026s
1: solved... in 0.091s
2: solved... in 0.028s
1: solved... in 0.065s
2: solved... in 0.027s
1: solved... in 0.092s
2: solved... in 0.029s
1: solved... in 0.066s
2: solved... in 0.027s
1: solved... in 0.092s
2: solved... in 0.028s
1: solved... in 0.065s
2: solved... in 0.027s
1: solved... in 0.092s
2: solved... in 0.028s
1: solved... in 0.064s
2: solved... in 0.027s
1: solved... in 0.091s
2: solved... in 0.028s
1: solved... in 0.066s
2: solved... in 0.027s
1: solved... in 0.091s
2: solved... in 0.029s
1: solved... in 0.065s
2: solved... in 0.027s
1: solved... in 0.092s
2: solved... in 0.029s
1: solved... in 0.064s
2: solved... in 0.027s
1: solved... in 0.092s
2: solved... in 0.028s
1: solved... in 0.065s
2: solved... in 0.028s
1: solved... in 0.091s
2: solved... in 0.029s
1: solved... in 0.064s
2: solved... in 0.028s
1: solved... in 0.098s
2: solved... in 0.029s
1: solved... in 0.064s
2: solved... in 0.029s
1: solved... in 0.093s
2: solved... in 0.029s
1: solved... in 0.065s
2: solved... in 0.028s
1: solved... in 0.091s
2: solved... in 0.029s
1: solved... in 0.064s
2: solved... in 0.028s
1: solved... in 0.091s
2: solved... in 0.029s
1: solved... in 0.065s
2: solved... in 0.029s
1: solved... in 0.092s
2: solved... in 0.03s
1: solved... in 0.065s
2: solved... in 0.028s
1: solved... in 0.092s
2: solved... in 0.029s
1: solved... in 0.065s
2: solved... in 0.029s
1: solved... in 0.09s
2: solved... in 0.029s
1: solved... in 0.064s
2: solved... in 0.028s
1: solved... in 0.091s
2: solved... in 0.03s
1: solved... in 0.065s
2: solved... in 0.028s
1: solved... in 0.091s
2: solved... in 0.03s
1: solved... in 0.064s
2: solved... in 0.029s
1: solved... in 0.096s
2: solved... in 0.029s
1: solved... in 0.065s
2: solved... in 0.03s
1: solved... in 0.092s
2: solved... in 0.031s
1: solved... in 0.066s
2: solved... in 0.028s
1: solved... in 0.092s
2: solved... in 0.03s
1: solved... in 0.065s
2: solved... in 0.03s
1: solved... in 0.091s
2: solved... in 0.03s
1: solved... in 0.065s
2: solved... in 0.03s
1: solved... in 0.091s
2: solved... in 0.031s
1: solved... in 0.066s
2: solved... in 0.029s
1: solved... in 0.091s
2: solved... in 0.031s
1: solved... in 0.064s
2: solved... in 0.03s
1: solved... in 0.091s
2: solved... in 0.031s
1: solved... in 0.064s
2: solved... in 0.03s
1: solved... in 0.092s
2: solved... in 0.031s
1: solved... in 0.065s
2: solved... in 0.029s
1: solved... in 0.092s
2: solved... in 0.031s
1: solved... in 0.064s
2: solved... in 0.03s
1: solved... in 0.092s
2: solved... in 0.031s
1: solved... in 0.065s
2: solved... in 0.03s
1: solved... in 0.094s
2: solved... in 0.03s
1: solved... in 0.065s
2: solved... in 0.03s
1: solved... in 0.092s
2: solved... in 0.031s
1: solved... in 0.065s
2: solved... in 0.03s
1: solved... in 0.091s
2: solved... in 0.031s
1: solved... in 0.065s
2: solved... in 0.03s
1: solved... in 0.095s
2: solved... in 0.031s
1: solved... in 0.064s
2: solved... in 0.03s
1: solved... in 0.094s
2: solved... in 0.031s
1: solved... in 0.065s
2: solved... in 0.03s
1: solved... in 0.092s
2: solved... in 0.031s
1: solved... in 0.065s
2: solved... in 0.031s
1: solved... in 0.095s
2: solved... in 0.032s
1: solved... in 0.064s
2: solved... in 0.03s
1: solved... in 0.094s
2: solved... in 0.031s
1: solved... in 0.065s
2: solved... in 0.03s
1: solved... in 0.095s
2: solved... in 0.031s
1: solved... in 0.065s
2: solved... in 0.031s
1: solved... in 0.095s
2: solved... in 0.032s
1: solved... in 0.065s
2: solved... in 0.031s
1: solved... in 0.093s
2: solved... in 0.031s
1: solved... in 0.065s
2: solved... in 0.031s
1: solved... in 0.094s
2: solved... in 0.032s
1: solved... in 0.065s
2: solved... in 0.034s
1: solved... in 0.095s
2: solved... in 0.033s
1: solved... in 0.069s
2: solved... in 0.036s
1: solved... in 0.094s
2: solved... in 0.035s
1: solved... in 0.066s
2: solved... in 0.032s
1: solved... in 0.091s
2: solved... in 0.033s
1: solved... in 0.065s
2: solved... in 0.032s
1: solved... in 0.092s
2: solved... in 0.033s
1: solved... in 0.068s
2: solved... in 0.031s
1: solved... in 0.093s
2: solved... in 0.033s
1: solved... in 0.068s
2: solved... in 0.033s
1: solved... in 0.093s
2: solved... in 0.036s
1: solved... in 0.068s
2: solved... in 0.034s
1: solved... in 0.094s
2: solved... in 0.034s
1: solved... in 0.068s
2: solved... in 0.035s
1: solved... in 0.092s
2: solved... in 0.036s
1: solved... in 0.065s
2: solved... in 0.032s
1: solved... in 0.091s
2: solved... in 0.036s
1: solved... in 0.066s
2: solved... in 0.033s
1: solved... in 0.09s
2: solved... in 0.032s
1: solved... in 0.092s
2: solved... in 0.033s
1: solved... in 0.065s
2: solved... in 0.033s
1: solved... in 0.07s
2: solved... in 0.033s
1: solved... in 0.092s
2: solved... in 0.033s
1: solved... in 0.071s
2: solved... in 0.032s
1: solved... in 0.094s
2: solved... in 0.034s
1: solved... in 0.07s
2: solved... in 0.035s
1: solved... in 0.094s
2: solved... in 0.035s
1: solved... in 0.069s
2: solved... in 0.066s
1: solved... in 0.092s
2: solved... in 0.063s
1: solved... in 0.091s
2: solved... in 0.034s
1: solved... in 0.092s
2: solved... in 0.034s
1: solved... in 0.09s
2: solved... in 0.034s
1: solved... in 0.092s
2: solved... in 0.036s
1: solved... in 0.093s
2: solved... in 0.037s
1: solved... in 0.096s
2: solved... in 0.038s
1: solved... in 0.092s
2: solved... in 0.038s
1: solved... in 0.093s
2: solved... in 0.035s
1: solved... in 0.092s
2: solved... in 0.036s
1: solved... in 0.092s
2: solved... in 0.035s
1: solved... in 0.092s
2: solved... in 0.036s
1: solved... in 0.091s
2: solved... in 0.035s
1: solved... in 0.091s
2: solved... in 0.036s
1: solved... in 0.092s
2: solved... in 0.036s
1: solved... in 0.093s
2: solved... in 0.036s
1: solved... in 0.092s
2: solved... in 0.035s
1: solved... in 0.092s
2: solved... in 0.037s
1: solved... in 0.092s
2: solved... in 0.044s
1: solved... in 0.093s
2: solved... in 0.039s
1: solved... in 0.106s
2: solved... in 0.039s
1: solved... in 0.095s
2: solved... in 0.037s
1: solved... in 0.095s
2: solved... in 0.036s
1: solved... in 0.093s
2: solved... in 0.037s
1: solved... in 0.092s
2: solved... in 0.038s
1: solved... in 0.092s
2: solved... in 0.037s
1: solved... in 0.094s
2: solved... in 0.038s
1: solved... in 0.089s
2: solved... in 0.041s
1: solved... in 0.094s
2: solved... in 0.041s
1: solved... in 0.092s
2: solved... in 0.04s
1: solved... in 0.092s
2: solved... in 0.04s
1: solved... in 0.092s
2: solved... in 0.038s
1: solved... in 0.092s
2: solved... in 0.038s
1: solved... in 0.092s
2: solved... in 0.037s
1: solved... in 0.092s
2: solved... in 0.038s
1: solved... in 0.094s
2: solved... in 0.038s
1: solved... in 0.09s
2: solved... in 0.04s
1: solved... in 0.096s
2: solved... in 0.041s
1: solved... in 0.093s
2: solved... in 0.04s
1: solved... in 0.093s
2: solved... in 0.037s
1: solved... in 0.092s
2: solved... in 0.038s
1: solved... in 0.093s
2: solved... in 0.04s
1: solved... in 0.099s
2: solved... in 0.041s
1: solved... in 0.092s
2: solved... in 0.038s
1: solved... in 0.092s
2: solved... in 0.039s
1: solved... in 0.09s
2: solved... in 0.039s
1: solved... in 0.092s
2: solved... in 0.039s
1: solved... in 0.09s
2: solved... in 0.04s
1: solved... in 0.091s
2: solved... in 0.039s
1: solved... in 0.09s
2: solved... in 0.041s
1: solved... in 0.088s
2: solved... in 0.038s
1: solved... in 0.09s
2: solved... in 0.039s
1: solved... in 0.089s
2: solved... in 0.039s
1: solved... in 0.089s
2: solved... in 0.04s
1: solved... in 0.09s
2: solved... in 0.041s
1: solved... in 0.092s
2: solved... in 0.038s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 62/62
Unrolled calls: Set((r225 <=> redNodesHaveBlackChildren(cs408)), (r223 <=> isBlack(cs406)), (r241 == ins(x, cs428)), (r271 <=> blackBalanced(cs620)), (r229 <=> redNodesHaveBlackChildren(cs414)), (r234 <=> redNodesHaveBlackChildren(cs421)), (r253 == blackHeight(cs597)), (r263 == blackHeight(cs612)), (r261 <=> blackBalanced(cs610)), (r255 == blackHeight(cs603)), (r259 == blackHeight(cs608)), (r250 == balance(cs458, cs459, cs460, ir8)), (r275 == blackHeight(cs624)), (r269 == blackHeight(cs618)), (r219 <=> isBlack(cs402)), (r215 <=> redNodesHaveBlackChildren(cs396)), (r265 == blackHeight(cs614)), (r222 <=> redNodesHaveBlackChildren(cs405)), (r249 == ins(x, cs457)), (r233 <=> redNodesHaveBlackChildren(cs420)), (r279 <=> redNodesHaveBlackChildren(cs247)), (r267 <=> blackBalanced(cs616)), (r228 <=> redNodesHaveBlackChildren(cs413)), (r258 == blackHeight(cs607)), (r256 <=> blackBalanced(cs605)), (r276 <=> redNodesHaveBlackChildren(cs259)), (r248 == ins(x, cs448)), (r230 <=> redNodesHaveBlackChildren(cs415)), (r273 == blackHeight(cs622)), (r281 == blackHeight(cs247)), (r232 <=> isBlack(cs419)), (r260 <=> blackBalanced(cs609)), (r243 == ins(x, cs440)), (r252 == blackHeight(cs594)), (r280 <=> blackBalanced(cs247)), (r257 <=> blackBalanced(cs606)), (r247 == balance(cs445, ir7, cs446, cs447)), (r226 <=> redNodesHaveBlackChildren(cs409)), (r274 == blackHeight(cs623)), (r268 == blackHeight(cs617)), (r218 <=> redNodesHaveBlackChildren(cs399)), (r224 <=> isBlack(cs407)), (r272 == blackHeight(cs621)), (r244 == balance(cs441, cs442, cs443, ir6)), (r217 <=> redNodesHaveBlackChildren(cs398)), (r277 <=> blackBalanced(cs259)), (r266 <=> blackBalanced(cs615)), (r278 == blackHeight(cs259)), (r237 <=> redNodesHaveBlackChildren(cs424)), (r235 <=> isBlack(cs422)), (r254 == blackHeight(cs600)), (r227 <=> redNodesHaveBlackChildren(cs412)), (r231 <=> isBlack(cs418)), (r262 == blackHeight(cs611)), (r238 <=> redNodesHaveBlackChildren(cs425)), (r221 <=> redNodesHaveBlackChildren(cs404)), (r216 <=> redNodesHaveBlackChildren(cs397)), (r270 <=> blackBalanced(cs619)), (r264 == blackHeight(cs613)), (r242 == balance(cs429, ir5, cs430, cs431)), (r220 <=> isBlack(cs403)), (r236 <=> isBlack(cs423)))
Unrolling (r237 <=> redNodesHaveBlackChildren(cs424))
Inlining (r231 <=> isBlack(cs418))
Inlining (r219 <=> isBlack(cs402))
Unrolling (r274 == blackHeight(cs623))
Inlining (r223 <=> isBlack(cs406))
Unrolling (r267 <=> blackBalanced(cs616))
Unrolling (r260 <=> blackBalanced(cs609))
Unrolling (r273 == blackHeight(cs622))
Unrolling (r279 <=> redNodesHaveBlackChildren(cs247))
Inlining (r232 <=> isBlack(cs419))
Unrolling (r252 == blackHeight(cs594))
Unrolling (r258 == blackHeight(cs607))
Inlining (r220 <=> isBlack(cs403))
Unrolling (r222 <=> redNodesHaveBlackChildren(cs405))
Unrolling (r229 <=> redNodesHaveBlackChildren(cs414))
Inlining (r235 <=> isBlack(cs422))
Unrolling (r262 == blackHeight(cs611))
Unrolling (r234 <=> redNodesHaveBlackChildren(cs421))
Unrolling (r272 == blackHeight(cs621))
Unrolling (r215 <=> redNodesHaveBlackChildren(cs396))
Unrolling (r228 <=> redNodesHaveBlackChildren(cs413))
Unrolling (r276 <=> redNodesHaveBlackChildren(cs259))
Unrolling (r280 <=> blackBalanced(cs247))
Unrolling (r226 <=> redNodesHaveBlackChildren(cs409))
Inlining (r242 == balance(cs429, ir5, cs430, cs431))
Unrolling (r269 == blackHeight(cs618))
Unrolling (r259 == blackHeight(cs608))
Unrolling (r230 <=> redNodesHaveBlackChildren(cs415))
Unrolling (r238 <=> redNodesHaveBlackChildren(cs425))
Unrolling (r278 == blackHeight(cs259))
Unrolling (r263 == blackHeight(cs612))
Inlining (r244 == balance(cs441, cs442, cs443, ir6))
Unrolling (r227 <=> redNodesHaveBlackChildren(cs412))
Unrolling (r270 <=> blackBalanced(cs619))
Unrolling (r264 == blackHeight(cs613))
Unrolling (r253 == blackHeight(cs597))
Unrolling (r268 == blackHeight(cs617))
Unrolling (r266 <=> blackBalanced(cs615))
Unrolling (r218 <=> redNodesHaveBlackChildren(cs399))
Inlining (r250 == balance(cs458, cs459, cs460, ir8))
Unrolling (r265 == blackHeight(cs614))
Unrolling (r277 <=> blackBalanced(cs259))
Inlining (r236 <=> isBlack(cs423))
Unrolling (r217 <=> redNodesHaveBlackChildren(cs398))
Unrolling (r254 == blackHeight(cs600))
Unrolling (r256 <=> blackBalanced(cs605))
Inlining (r247 == balance(cs445, ir7, cs446, cs447))
Unrolling (r255 == blackHeight(cs603))
Unrolling (r233 <=> redNodesHaveBlackChildren(cs420))
Inlining (r224 <=> isBlack(cs407))
Unrolling (r225 <=> redNodesHaveBlackChildren(cs408))
Unrolling (r275 == blackHeight(cs624))
Unrolling (r281 == blackHeight(cs247))
Unrolling (r271 <=> blackBalanced(cs620))
Unrolling (r257 <=> blackBalanced(cs606))
Unrolling (r221 <=> redNodesHaveBlackChildren(cs404))
Unrolling (r261 <=> blackBalanced(cs610))
Unrolling (r216 <=> redNodesHaveBlackChildren(cs397))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 2.041s
2: solved... in 0.005s
1: solved... in 0.589s
2: solved... in 0.006s
1: solved... in 0.09s
2: solved... in 0.006s
1: solved... in 1.667s
2: solved... in 0.006s
1: solved... in 1.67s
2: solved... in 0.006s
1: solved... in 0.767s
2: solved... in 0.007s
1: solved... in 1.299s
2: solved... in 0.006s
1: solved... in 2.316s
2: solved... in 0.007s
1: solved... in 2.6s
2: solved... in 0.007s
1: solved... in 0.099s
2: solved... in 0.007s
1: solved... in 2.692s
2: solved... in 0.007s
1: solved... in 2.233s
2: solved... in 0.007s
1: solved... in 2.221s
2: solved... in 0.007s
1: solved... in 1.085s
2: solved... in 0.007s
1: solved... in 2.229s
2: solved... in 0.007s
1: solved... in 0.921s
2: solved... in 0.007s
1: solved... in 0.991s
2: solved... in 0.007s
1: solved... in 2.162s
2: solved... in 0.007s
1: solved... in 2.226s
2: solved... in 0.008s
1: solved... in 3.155s
2: solved... in 0.009s
1: solved... in 2.264s
2: solved... in 0.009s
1: solved... in 2.257s
2: solved... in 0.008s
1: solved... in 3.232s
2: solved... in 0.009s
1: solved... in 1.372s
2: solved... in 0.009s
1: solved... in 2.011s
2: solved... in 0.009s
1: solved... in 1.196s
2: solved... in 0.009s
1: solved... in 1.202s
2: solved... in 0.009s
1: solved... in 1.201s
2: solved... in 0.01s
1: solved... in 2.179s
2: solved... in 0.009s
1: solved... in 2.007s
2: solved... in 0.01s
1: solved... in 2.065s
2: solved... in 0.009s
1: solved... in 2.318s
2: solved... in 0.01s
1: solved... in 2.018s
2: solved... in 0.01s
1: solved... in 2.338s
2: solved... in 0.01s
1: solved... in 2.097s
2: solved... in 0.01s
1: solved... in 1.812s
2: solved... in 0.01s
1: solved... in 2.097s
2: solved... in 0.012s
1: solved... in 2.315s
2: solved... in 0.011s
1: solved... in 2.449s
2: solved... in 0.011s
1: solved... in 1.822s
2: solved... in 0.012s
1: solved... in 2.0s
2: solved... in 0.013s
1: solved... in 2.103s
2: solved... in 0.011s
1: solved... in 2.394s
2: solved... in 0.011s
1: solved... in 2.239s
2: solved... in 0.012s
1: solved... in 1.967s
2: solved... in 0.011s
1: solved... in 2.045s
2: solved... in 0.011s
1: solved... in 2.049s
2: solved... in 0.012s
1: solved... in 2.238s
2: solved... in 0.012s
1: solved... in 1.218s
2: solved... in 0.015s
1: solved... in 2.395s
2: solved... in 0.013s
1: solved... in 2.145s
2: solved... in 0.013s
1: solved... in 2.179s
2: solved... in 0.013s
1: solved... in 2.049s
2: solved... in 0.013s
1: solved... in 2.29s
2: solved... in 0.013s
1: solved... in 2.318s
2: solved... in 0.014s
1: solved... in 2.273s
2: solved... in 0.013s
1: solved... in 2.312s
2: solved... in 0.016s
1: solved... in 2.327s
2: solved... in 0.015s
1: solved... in 2.165s
2: solved... in 0.014s
1: solved... in 2.112s
2: solved... in 0.014s
1: solved... in 2.281s
2: solved... in 0.014s
1: solved... in 2.063s
2: solved... in 0.014s
1: solved... in 2.34s
2: solved... in 0.015s
1: solved... in 1.985s
2: solved... in 0.015s
1: solved... in 2.236s
2: solved... in 0.015s
1: solved... in 0.53s
[[34m Info  [0m] - Found inductive invariant: ins --> ((((1 * res8._2) + (-178 * blackHeight(t))) + -89) <= 0)
[[34m Info  [0m] - Found inductive invariant: redNodesHaveBlackChildren --> (0 <= 0)
[[34m Info  [0m] - Found inductive invariant: blackHeight --> (((-2 * #res) + -1) <= 0)
[[34m Info  [0m] - Found inductive invariant: blackBalanced --> (0 <= 0)
[[34m Info  [0m] - Verifying Invariants... 
[[34m Info  [0m] - Invariant verified
[[34m Info  [0m] - considering function add...
[[34m Info  [0m] Body: (let (ir3,it3 := (let (e281,t293 := ins(x, t)) in
            (e281, (1 + t293)))) in
            (let (r11,t290 := (let (e283,t295 := makeBlack(ir3)) in
              (e283, (1 + t295)))) in
              (r11, (t290 + (it3 + 1)))))
[[34m Info  [0m] Post: true
falttened Body: (r651 && (r651 == redNodesHaveBlackChildren(t)) && r652 && (r652 == blackBalanced(t)) && (res9 == tp72) && (arg78 == (t290 + (it3 + 1))) && (tp72 == (r11, arg78)) && (t290 == (1 + t295)) && (t293 == ts92) && (ts92 == tres13._2) && (tres13 == r653) && (r653 == ins(x, t)) && (it3 == (1 + t293)) && (e283 == ts93) && (ts93 == tres12._1) && (r11 == e283) && (e281 == ts94) && (ts94 == tres13._1) && (ir3 == e281) && (t295 == ts95) && (ts95 == tres12._2) && (tres12 == r654) && (r654 == makeBlack(ir3)))
Flattened Post: ((ts96 > ((a?2 * r655) + b?2)) && (ts96 == res9._2) && (r655 == blackHeight(t)))
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.006s
2: solved... in 0.005s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 5/5
Unrolled calls: Set((r653 == ins(x, t)), (r652 <=> blackBalanced(t)), (r651 <=> redNodesHaveBlackChildren(t)), (r655 == blackHeight(t)), (r654 == makeBlack(ir3)))
Creating VC for blackBalanced
Unrolling (r652 <=> blackBalanced(t))
Inlining (r654 == makeBlack(ir3))
Creating VC for blackHeight
Unrolling (r655 == blackHeight(t))
Creating VC for ins
Unrolling (r653 == ins(x, t))
Creating VC for redNodesHaveBlackChildren
Unrolling (r651 <=> redNodesHaveBlackChildren(t))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.027s
2: solved... in 0.005s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 62/62
Unrolled calls: Set((r716 <=> isBlack(cs1764)), (r712 <=> isBlack(cs1760)), (r696 <=> redNodesHaveBlackChildren(cs1738)), (r668 == blackHeight(cs1677)), (r698 <=> redNodesHaveBlackChildren(cs1740)), (r685 == balance(cs1704, ir14, cs1705, cs1706)), (r662 == blackHeight(cs1671)), (r687 == balance(cs1716, cs1717, cs1718, ir15)), (r691 == balance(cs1720, ir16, cs1721, cs1722)), (r710 <=> redNodesHaveBlackChildren(cs1756)), (r709 <=> redNodesHaveBlackChildren(cs1755)), (r700 <=> isBlack(cs1744)), (r676 == blackHeight(cs1691)), (r693 == ins(x, cs1732)), (r717 <=> redNodesHaveBlackChildren(cs1765)), (r719 <=> redNodesHaveBlackChildren(t)), (r692 == ins(x, cs1723)), (r706 <=> redNodesHaveBlackChildren(cs1750)), (r699 <=> isBlack(cs1743)), (r714 <=> redNodesHaveBlackChildren(cs1762)), (r675 == blackHeight(cs1684)), (r664 == blackHeight(cs1673)), (r669 == blackHeight(cs1678)), (r656 <=> blackBalanced(cs1665)), (r666 <=> blackBalanced(cs1675)), (r721 == blackHeight(t)), (r679 == blackHeight(cs1700)), (r672 == blackHeight(cs1681)), (r658 == blackHeight(cs1667)), (r663 == blackHeight(cs1672)), (r686 == ins(x, cs1715)), (r708 <=> redNodesHaveBlackChildren(cs1754)), (r682 <=> redNodesHaveBlackChildren(t)), (r697 <=> redNodesHaveBlackChildren(cs1739)), (r659 == blackHeight(cs1668)), (r718 <=> redNodesHaveBlackChildren(cs1766)), (r701 <=> redNodesHaveBlackChildren(cs1745)), (r715 <=> isBlack(cs1763)), (r674 == blackHeight(cs1683)), (r695 <=> redNodesHaveBlackChildren(cs1737)), (r704 <=> isBlack(cs1748)), (r677 == blackHeight(cs1694)), (r684 == ins(x, cs1703)), (r713 <=> redNodesHaveBlackChildren(cs1761)), (r703 <=> isBlack(cs1747)), (r707 <=> redNodesHaveBlackChildren(cs1753)), (r667 <=> blackBalanced(cs1676)), (r670 <=> blackBalanced(cs1679)), (r683 <=> blackBalanced(t)), (r678 == blackHeight(cs1697)), (r711 <=> isBlack(cs1759)), (r673 == blackHeight(cs1682)), (r665 == blackHeight(cs1674)), (r688 == blackHeight(t)), (r660 <=> blackBalanced(cs1669)), (r671 <=> blackBalanced(cs1680)), (r661 <=> blackBalanced(cs1670)), (r705 <=> redNodesHaveBlackChildren(cs1749)), (r720 <=> blackBalanced(t)), (r694 == balance(cs1733, cs1734, cs1735, ir17)), (r702 <=> redNodesHaveBlackChildren(cs1746)), (r657 <=> blackBalanced(cs1666)))
Unrolling (r713 <=> redNodesHaveBlackChildren(cs1761))
Unrolling (r709 <=> redNodesHaveBlackChildren(cs1755))
Unrolling (r672 == blackHeight(cs1681))
Unrolling (r702 <=> redNodesHaveBlackChildren(cs1746))
Inlining (r712 <=> isBlack(cs1760))
Unrolling (r679 == blackHeight(cs1700))
Unrolling (r677 == blackHeight(cs1694))
Unrolling (r705 <=> redNodesHaveBlackChildren(cs1749))
Unrolling (r665 == blackHeight(cs1674))
Unrolling (r664 == blackHeight(cs1673))
Unrolling (r678 == blackHeight(cs1697))
Unrolling (r656 <=> blackBalanced(cs1665))
Unrolling (r718 <=> redNodesHaveBlackChildren(cs1766))
Unrolling (r671 <=> blackBalanced(cs1680))
Inlining (r699 <=> isBlack(cs1743))
Inlining (r687 == balance(cs1716, cs1717, cs1718, ir15))
Unrolling (r686 == ins(x, cs1715))
Unrolling (r682 <=> redNodesHaveBlackChildren(t))
Unrolling (r693 == ins(x, cs1732))
Inlining (r704 <=> isBlack(cs1748))
Inlining (r703 <=> isBlack(cs1747))
Unrolling (r657 <=> blackBalanced(cs1666))
Unrolling (r661 <=> blackBalanced(cs1670))
Unrolling (r663 == blackHeight(cs1672))
Unrolling (r696 <=> redNodesHaveBlackChildren(cs1738))
Unrolling (r719 <=> redNodesHaveBlackChildren(t))
Unrolling (r683 <=> blackBalanced(t))
Unrolling (r676 == blackHeight(cs1691))
Inlining (r694 == balance(cs1733, cs1734, cs1735, ir17))
Inlining (r711 <=> isBlack(cs1759))
Unrolling (r659 == blackHeight(cs1668))
Unrolling (r698 <=> redNodesHaveBlackChildren(cs1740))
Unrolling (r697 <=> redNodesHaveBlackChildren(cs1739))
Unrolling (r706 <=> redNodesHaveBlackChildren(cs1750))
Unrolling (r710 <=> redNodesHaveBlackChildren(cs1756))
Unrolling (r720 <=> blackBalanced(t))
Unrolling (r717 <=> redNodesHaveBlackChildren(cs1765))
Unrolling (r708 <=> redNodesHaveBlackChildren(cs1754))
Inlining (r715 <=> isBlack(cs1763))
Unrolling (r670 <=> blackBalanced(cs1679))
Inlining (r685 == balance(cs1704, ir14, cs1705, cs1706))
Unrolling (r668 == blackHeight(cs1677))
Unrolling (r667 <=> blackBalanced(cs1676))
Unrolling (r669 == blackHeight(cs1678))
Unrolling (r692 == ins(x, cs1723))
Unrolling (r701 <=> redNodesHaveBlackChildren(cs1745))
Unrolling (r707 <=> redNodesHaveBlackChildren(cs1753))
Unrolling (r688 == blackHeight(t))
Unrolling (r673 == blackHeight(cs1682))
Unrolling (r674 == blackHeight(cs1683))
Inlining (r691 == balance(cs1720, ir16, cs1721, cs1722))
Unrolling (r695 <=> redNodesHaveBlackChildren(cs1737))
Unrolling (r666 <=> blackBalanced(cs1675))
Unrolling (r714 <=> redNodesHaveBlackChildren(cs1762))
Inlining (r700 <=> isBlack(cs1744))
Unrolling (r662 == blackHeight(cs1671))
Unrolling (r684 == ins(x, cs1703))
Unrolling (r675 == blackHeight(cs1684))
Unrolling (r658 == blackHeight(cs1667))
Unrolling (r660 <=> blackBalanced(cs1669))
Unrolling (r721 == blackHeight(t))
Inlining (r716 <=> isBlack(cs1764))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 0.599s
2: solved... in 0.005s
1: solved... in 2.009s
2: solved... in 0.005s
1: solved... in 1.1s
2: solved... in 0.006s
1: solved... in 1.107s
2: solved... in 0.006s
1: solved... in 0.079s
2: solved... in 0.006s
1: solved... in 0.081s
2: solved... in 0.006s
1: solved... in 0.083s
2: solved... in 0.006s
[[34m Info  [0m] - More unrollings for invariant inference
Unrolling: 380/380
Unrolled calls: Set((r1067 <=> redNodesHaveBlackChildren(cs2807)), (r900 <=> redNodesHaveBlackChildren(cs2309)), (r906 <=> redNodesHaveBlackChildren(cs2317)), (r1047 <=> redNodesHaveBlackChildren(cs2783)), (r739 <=> isBlack(cs1792)), (r817 == balance(cs2041, ir19, cs2042, cs2043)), (r865 <=> isBlack(cs2127)), (r994 == blackHeight(cs2562)), (r1075 <=> isBlack(cs2817)), (r793 <=> redNodesHaveBlackChildren(cs1882)), (r946 <=> redNodesHaveBlackChildren(cs2369)), (r861 <=> redNodesHaveBlackChildren(cs2121)), (r919 <=> redNodesHaveBlackChildren(cs2334)), (r904 <=> isBlack(cs2315)), (r1014 <=> redNodesHaveBlackChildren(cs2599)), (r914 <=> redNodesHaveBlackChildren(cs2327)), (r857 == blackHeight(cs2112)), (r722 <=> redNodesHaveBlackChildren(cs1769)), (r770 <=> redNodesHaveBlackChildren(cs1845)), (r763 == blackHeight(cs1834)), (r852 == blackHeight(cs2107)), (r835 == balance(cs2074, ir21, cs2075, cs2076)), (r1038 == blackHeight(cs2633)), (r993 == blackHeight(cs2559)), (r846 == blackHeight(cs2101)), (r939 <=> redNodesHaveBlackChildren(cs2360)), (r794 <=> redNodesHaveBlackChildren(cs1883)), (r869 <=> isBlack(cs2131)), (r1071 <=> isBlack(cs2813)), (r931 <=> redNodesHaveBlackChildren(cs2350)), (r986 <=> blackBalanced(cs2420)), (r917 <=> isBlack(cs2332)), (r863 <=> redNodesHaveBlackChildren(cs2123)), (r924 <=> redNodesHaveBlackChildren(cs2341)), (r1088 == blackHeight(cs2853)), (r1068 <=> redNodesHaveBlackChildren(cs2808)), (r1111 <=> redNodesHaveBlackChildren(cs1703)), (r955 == blackHeight(cs2379)), (r982 <=> blackBalanced(cs2416)), (r851 == blackHeight(cs2106)), (r1077 <=> redNodesHaveBlackChildren(cs2819)), (r984 == blackHeight(cs2418)), (r891 == blackHeight(cs2158)), (r774 <=> redNodesHaveBlackChildren(cs1849)), (r912 <=> redNodesHaveBlackChildren(cs2325)), (r780 == blackHeight(cs1865)), (r853 <=> blackBalanced(cs2108)), (r887 == blackHeight(cs2154)), (r809 <=> blackBalanced(cs1901)), (r983 <=> blackBalanced(cs2417)), (r849 <=> blackBalanced(cs2104)), (r969 <=> redNodesHaveBlackChildren(cs2396)), (r896 == blackHeight(cs2166)), (r1112 <=> blackBalanced(cs1703)), (r967 <=> isBlack(cs2394)), (r1094 <=> blackBalanced(cs2862)), (r1058 == blackHeight(cs2797)), (r978 <=> isBlack(cs2409)), (r1003 == blackHeight(cs2572)), (r990 == blackHeight(cs2424)), (r1035 <=> redNodesHaveBlackChildren(cs2626)), (r926 <=> redNodesHaveBlackChildren(cs2343)), (r1108 <=> redNodesHaveBlackChildren(cs1723)), (r889 <=> blackBalanced(cs2156)), (r730 <=> isBlack(cs1779)), (r818 == ins(x, cs2044)), (r756 <=> isBlack(cs1817)), (r1028 <=> redNodesHaveBlackChildren(cs2617)), (r1053 <=> isBlack(cs2791)), (r916 <=> isBlack(cs2331)), (r735 <=> redNodesHaveBlackChildren(cs1786)), (r979 <=> isBlack(cs2410)), (r1033 <=> isBlack(cs2624)), (r838 == ins(x, cs2089)), (r1020 <=> redNodesHaveBlackChildren(cs2607)), (r915 <=> redNodesHaveBlackChildren(cs2328)), (r1027 <=> redNodesHaveBlackChildren(cs2616)), (r1006 == blackHeight(cs2578)), (r878 <=> isBlack(cs2144)), (r1098 == blackHeight(cs2866)), (r910 <=> redNodesHaveBlackChildren(cs2321)), (r755 <=> redNodesHaveBlackChildren(cs1816)), (r996 <=> blackBalanced(cs2565)), (r1093 == blackHeight(cs2861)), (r792 <=> redNodesHaveBlackChildren(cs1881)), (r858 == blackHeight(cs2113)), (r779 == blackHeight(cs1862)), (r1102 <=> redNodesHaveBlackChildren(cs1715)), (r1048 <=> isBlack(cs2786)), (r972 <=> redNodesHaveBlackChildren(cs2401)), (r1024 <=> redNodesHaveBlackChildren(cs2611)), (r864 <=> redNodesHaveBlackChildren(cs2124)), (r1064 == blackHeight(cs2803)), (r922 <=> redNodesHaveBlackChildren(cs2337)), (r744 <=> redNodesHaveBlackChildren(cs1797)), (r736 <=> redNodesHaveBlackChildren(cs1787)), (r839 <=> blackBalanced(cs2094)), (r844 <=> blackBalanced(cs2099)), (r883 <=> redNodesHaveBlackChildren(cs2149)), (r746 == blackHeight(cs1801)), (r866 <=> isBlack(cs2128)), (r1032 <=> redNodesHaveBlackChildren(cs2623)), (r729 <=> redNodesHaveBlackChildren(cs1778)), (r872 <=> redNodesHaveBlackChildren(cs2134)), (r894 == blackHeight(cs2161)), (r823 <=> redNodesHaveBlackChildren(cs2060)), (r751 <=> redNodesHaveBlackChildren(cs1810)), (r1021 <=> isBlack(cs2608)), (r881 <=> isBlack(cs2147)), (r1105 <=> redNodesHaveBlackChildren(cs1732)), (r985 == blackHeight(cs2419)), (r890 <=> blackBalanced(cs2157)), (r1076 <=> redNodesHaveBlackChildren(cs2818)), (r775 <=> redNodesHaveBlackChildren(cs1850)), (r1070 <=> isBlack(cs2812)), (r1037 == blackHeight(cs2630)), (r1095 <=> blackBalanced(cs2863)), (r764 <=> redNodesHaveBlackChildren(cs1837)), (r974 <=> isBlack(cs2405)), (r877 <=> isBlack(cs2143)), (r1030 <=> isBlack(cs2621)), (r1002 == blackHeight(cs2571)), (r1013 <=> redNodesHaveBlackChildren(cs2598)), (r870 <=> isBlack(cs2132)), (r1004 == blackHeight(cs2573)), (r1063 == blackHeight(cs2802)), (r876 <=> redNodesHaveBlackChildren(cs2140)), (r742 <=> isBlack(cs1795)), (r743 <=> isBlack(cs1796)), (r784 == blackHeight(cs1872)), (r1085 == ins(x, cs2845)), (r749 <=> redNodesHaveBlackChildren(cs1808)), (r847 == blackHeight(cs2102)), (r968 <=> redNodesHaveBlackChildren(cs2395)), (r1066 <=> redNodesHaveBlackChildren(cs2806)), (r1101 == blackHeight(cs2872)), (r797 <=> isBlack(cs1888)), (r902 <=> redNodesHaveBlackChildren(cs2311)), (r923 <=> redNodesHaveBlackChildren(cs2338)), (r1089 == blackHeight(cs2856)), (r907 <=> redNodesHaveBlackChildren(cs2318)), (r766 <=> redNodesHaveBlackChildren(cs1839)), (r921 <=> isBlack(cs2336)), (r868 <=> redNodesHaveBlackChildren(cs2130)), (r785 == blackHeight(cs1873)), (r812 == blackHeight(cs1904)), (r875 <=> redNodesHaveBlackChildren(cs2139)), (r1011 == balance(cs2593, cs2594, cs2595, ir26)), (r727 <=> isBlack(cs1776)), (r1073 <=> redNodesHaveBlackChildren(cs2815)), (r952 <=> blackBalanced(cs2376)), (r948 <=> blackBalanced(cs2372)), (r1018 <=> isBlack(cs2605)), (r998 == blackHeight(cs2567)), (r950 == blackHeight(cs2374)), (r799 <=> redNodesHaveBlackChildren(cs1890)), (r837 == balance(cs2086, cs2087, cs2088, ir22)), (r1025 <=> redNodesHaveBlackChildren(cs2614)), (r757 <=> isBlack(cs1818)), (r1000 <=> blackBalanced(cs2569)), (r898 == blackHeight(cs2303)), (r951 == blackHeight(cs2375)), (r988 == blackHeight(cs2422)), (r819 == ins(x, cs2053)), (r942 <=> redNodesHaveBlackChildren(cs2365)), (r1005 == blackHeight(cs2575)), (r1044 <=> redNodesHaveBlackChildren(cs2780)), (r976 <=> redNodesHaveBlackChildren(cs2407)), (r1079 == blackHeight(cs2827)), (r885 <=> blackBalanced(cs2152)), (r821 <=> redNodesHaveBlackChildren(cs2058)), (r981 <=> redNodesHaveBlackChildren(cs2412)), (r773 <=> isBlack(cs1848)), (r1103 <=> blackBalanced(cs1715)), (r831 <=> redNodesHaveBlackChildren(cs2070)), (r1082 == ins(x, cs2830)), (r925 <=> redNodesHaveBlackChildren(cs2342)), (r933 <=> isBlack(cs2352)), (r1012 == ins(x, cs2596)), (r824 <=> redNodesHaveBlackChildren(cs2061)), (r1061 <=> blackBalanced(cs2800)), (r971 <=> redNodesHaveBlackChildren(cs2400)), (r963 <=> isBlack(cs2390)), (r726 <=> isBlack(cs1775)), (r820 == balance(cs2054, cs2055, cs2056, ir20)), (r723 <=> redNodesHaveBlackChildren(cs1770)), (r966 <=> isBlack(cs2393)), (r1069 <=> redNodesHaveBlackChildren(cs2809)), (r970 <=> redNodesHaveBlackChildren(cs2399)), (r932 <=> isBlack(cs2351)), (r1096 == blackHeight(cs2864)), (r800 <=> isBlack(cs1891)), (r938 <=> redNodesHaveBlackChildren(cs2359)), (r808 <=> blackBalanced(cs1900)), (r1097 == blackHeight(cs2865)), (r905 <=> isBlack(cs2316)), (r1090 <=> blackBalanced(cs2858)), (r1065 == blackHeight(cs2804)), (r862 <=> redNodesHaveBlackChildren(cs2122)), (r941 <=> isBlack(cs2364)), (r733 <=> redNodesHaveBlackChildren(cs1782)), (r1041 == blackHeight(cs2642)), (r1031 <=> redNodesHaveBlackChildren(cs2622)), (r748 <=> redNodesHaveBlackChildren(cs1807)), (r765 <=> redNodesHaveBlackChildren(cs1838)), (r1083 == balance(cs2831, ir28, cs2832, cs2833)), (r791 == blackHeight(cs1879)), (r943 <=> redNodesHaveBlackChildren(cs2366)), (r929 <=> isBlack(cs2348)), (r937 <=> redNodesHaveBlackChildren(cs2358)), (r1001 == blackHeight(cs2570)), (r1092 == blackHeight(cs2860)), (r777 == blackHeight(cs1856)), (r740 <=> redNodesHaveBlackChildren(cs1793)), (r1087 == blackHeight(cs2850)), (r1042 == blackHeight(cs2645)), (r802 <=> redNodesHaveBlackChildren(cs1893)), (r989 == blackHeight(cs2423)), (r806 == blackHeight(cs1898)), (r1045 <=> redNodesHaveBlackChildren(cs2781)), (r776 == blackHeight(cs1853)), (r975 <=> isBlack(cs2406)), (r895 == blackHeight(cs2163)), (r1040 == blackHeight(cs2639)), (r944 <=> isBlack(cs2367)), (r1054 <=> redNodesHaveBlackChildren(cs2792)), (r953 <=> blackBalanced(cs2377)), (r1009 == ins(x, cs2581)), (r845 == blackHeight(cs2100)), (r769 <=> isBlack(cs1844)), (r848 == blackHeight(cs2103)), (r767 <=> redNodesHaveBlackChildren(cs1840)), (r778 == blackHeight(cs1859)), (r1034 <=> isBlack(cs2625)), (r804 <=> blackBalanced(cs1896)), (r741 <=> redNodesHaveBlackChildren(cs1794)), (r1049 <=> isBlack(cs2787)), (r882 <=> isBlack(cs2148)), (r961 <=> redNodesHaveBlackChildren(cs2386)), (r753 <=> isBlack(cs1814)), (r893 == blackHeight(cs2160)), (r903 <=> redNodesHaveBlackChildren(cs2312)), (r1023 <=> redNodesHaveBlackChildren(cs2610)), (r805 <=> blackBalanced(cs1897)), (r1078 == blackHeight(cs2824)), (r732 <=> redNodesHaveBlackChildren(cs1781)), (r873 <=> redNodesHaveBlackChildren(cs2137)), (r899 == blackHeight(cs2306)), (r789 == blackHeight(cs1877)), (r1109 <=> blackBalanced(cs1723)), (r759 <=> redNodesHaveBlackChildren(cs1820)), (r783 <=> blackBalanced(cs1871)), (r827 <=> redNodesHaveBlackChildren(cs2066)), (r956 == blackHeight(cs2380)), (r788 == blackHeight(cs1876)), (r771 <=> redNodesHaveBlackChildren(cs1846)), (r1107 == blackHeight(cs1732)), (r1046 <=> redNodesHaveBlackChildren(cs2782)), (r1051 <=> redNodesHaveBlackChildren(cs2789)), (r867 <=> redNodesHaveBlackChildren(cs2129)), (r822 <=> redNodesHaveBlackChildren(cs2059)), (r958 <=> redNodesHaveBlackChildren(cs2383)), (r936 <=> redNodesHaveBlackChildren(cs2357)), (r826 <=> isBlack(cs2065)), (r1074 <=> isBlack(cs2816)), (r888 == blackHeight(cs2155)), (r920 <=> isBlack(cs2335)), (r1106 <=> blackBalanced(cs1732)), (r1091 <=> blackBalanced(cs2859)), (r796 <=> isBlack(cs1887)), (r790 == blackHeight(cs1878)), (r807 == blackHeight(cs1899)), (r1086 == blackHeight(cs2847)), (r1016 <=> redNodesHaveBlackChildren(cs2601)), (r859 == blackHeight(cs2115)), (r901 <=> redNodesHaveBlackChildren(cs2310)), (r935 <=> redNodesHaveBlackChildren(cs2354)), (r949 <=> blackBalanced(cs2373)), (r1062 == blackHeight(cs2801)), (r734 <=> redNodesHaveBlackChildren(cs1785)), (r830 <=> isBlack(cs2069)), (r1104 == blackHeight(cs1715)), (r965 <=> redNodesHaveBlackChildren(cs2392)), (r1099 == blackHeight(cs2867)), (r850 <=> blackBalanced(cs2105)), (r762 == blackHeight(cs1831)), (r1084 == balance(cs2842, cs2843, cs2844, ir29)), (r1072 <=> redNodesHaveBlackChildren(cs2814)), (r798 <=> redNodesHaveBlackChildren(cs1889)), (r871 <=> redNodesHaveBlackChildren(cs2133)), (r874 <=> redNodesHaveBlackChildren(cs2138)), (r1015 <=> redNodesHaveBlackChildren(cs2600)), (r927 <=> redNodesHaveBlackChildren(cs2344)), (r991 == blackHeight(cs2425)), (r973 <=> redNodesHaveBlackChildren(cs2402)), (r832 <=> redNodesHaveBlackChildren(cs2071)), (r843 <=> blackBalanced(cs2098)), (r880 <=> redNodesHaveBlackChildren(cs2146)), (r1059 == blackHeight(cs2798)), (r731 <=> isBlack(cs1780)), (r836 == ins(x, cs2077)), (r1113 == blackHeight(cs1703)), (r1100 == blackHeight(cs2869)), (r803 <=> redNodesHaveBlackChildren(cs1894)), (r795 <=> redNodesHaveBlackChildren(cs1884)), (r908 <=> isBlack(cs2319)), (r725 <=> redNodesHaveBlackChildren(cs1772)), (r750 <=> redNodesHaveBlackChildren(cs1809)), (r1029 <=> isBlack(cs2620)), (r728 <=> redNodesHaveBlackChildren(cs1777)), (r1010 == balance(cs2582, ir25, cs2583, cs2584)), (r745 <=> redNodesHaveBlackChildren(cs1798)), (r977 <=> redNodesHaveBlackChildren(cs2408)), (r1110 == blackHeight(cs1723)), (r1057 <=> blackBalanced(cs2796)), (r911 <=> redNodesHaveBlackChildren(cs2322)), (r854 <=> blackBalanced(cs2109)), (r811 == blackHeight(cs1903)), (r1039 == blackHeight(cs2636)), (r761 == blackHeight(cs1828)), (r879 <=> redNodesHaveBlackChildren(cs2145)), (r1056 <=> blackBalanced(cs2795)), (r945 <=> isBlack(cs2368)), (r781 == blackHeight(cs1868)), (r980 <=> redNodesHaveBlackChildren(cs2411)), (r752 <=> isBlack(cs1813)), (r959 <=> redNodesHaveBlackChildren(cs2384)), (r1019 <=> redNodesHaveBlackChildren(cs2606)), (r995 <=> blackBalanced(cs2564)), (r999 <=> blackBalanced(cs2568)), (r842 == blackHeight(cs2097)), (r760 == blackHeight(cs1825)), (r860 == blackHeight(cs2118)), (r754 <=> redNodesHaveBlackChildren(cs1815)), (r947 <=> redNodesHaveBlackChildren(cs2370)), (r960 <=> redNodesHaveBlackChildren(cs2385)), (r1050 <=> redNodesHaveBlackChildren(cs2788)), (r1026 <=> redNodesHaveBlackChildren(cs2615)), (r964 <=> redNodesHaveBlackChildren(cs2391)), (r954 == blackHeight(cs2378)), (r940 <=> isBlack(cs2363)), (r913 <=> redNodesHaveBlackChildren(cs2326)), (r856 == blackHeight(cs2111)), (r829 <=> isBlack(cs2068)), (r928 <=> isBlack(cs2347)), (r1022 <=> isBlack(cs2609)), (r758 <=> redNodesHaveBlackChildren(cs1819)), (r1060 <=> blackBalanced(cs2799)), (r724 <=> redNodesHaveBlackChildren(cs1771)), (r855 == blackHeight(cs2110)), (r841 == blackHeight(cs2096)), (r828 <=> redNodesHaveBlackChildren(cs2067)), (r1017 <=> isBlack(cs2604)), (r1036 <=> redNodesHaveBlackChildren(cs2627)), (r886 <=> blackBalanced(cs2153)), (r782 <=> blackBalanced(cs1870)), (r934 <=> redNodesHaveBlackChildren(cs2353)), (r737 <=> redNodesHaveBlackChildren(cs1788)), (r909 <=> isBlack(cs2320)), (r918 <=> redNodesHaveBlackChildren(cs2333)), (r825 <=> isBlack(cs2064)), (r957 == blackHeight(cs2381)), (r962 <=> isBlack(cs2389)), (r930 <=> redNodesHaveBlackChildren(cs2349)), (r884 <=> redNodesHaveBlackChildren(cs2150)), (r813 == blackHeight(cs1905)), (r987 <=> blackBalanced(cs2421)), (r787 <=> blackBalanced(cs1875)), (r1052 <=> isBlack(cs2790)), (r997 == blackHeight(cs2566)), (r801 <=> isBlack(cs1892)), (r772 <=> isBlack(cs1847)), (r810 == blackHeight(cs1902)), (r1055 <=> redNodesHaveBlackChildren(cs2793)), (r892 == blackHeight(cs2159)), (r747 == blackHeight(cs1804)), (r738 <=> isBlack(cs1791)), (r786 <=> blackBalanced(cs1874)), (r768 <=> isBlack(cs1843)), (r840 <=> blackBalanced(cs2095)))
Unrolling (r823 <=> redNodesHaveBlackChildren(cs2060))
Unrolling (r1059 == blackHeight(cs2798))
Unrolling (r1113 == blackHeight(cs1703))
Unrolling (r1041 == blackHeight(cs2642))
Unrolling (r894 == blackHeight(cs2161))
Unrolling (r1108 <=> redNodesHaveBlackChildren(cs1723))
Unrolling (r1079 == blackHeight(cs2827))
Unrolling (r746 == blackHeight(cs1801))
Unrolling (r806 == blackHeight(cs1898))
Unrolling (r985 == blackHeight(cs2419))
Inlining (r829 <=> isBlack(cs2068))
Inlining (r772 <=> isBlack(cs1847))
Inlining (r1033 <=> isBlack(cs2624))
Inlining (r940 <=> isBlack(cs2363))
Inlining (r768 <=> isBlack(cs1843))
Inlining (r1053 <=> isBlack(cs2791))
Unrolling (r856 == blackHeight(cs2111))
Unrolling (r991 == blackHeight(cs2425))
Unrolling (r1104 == blackHeight(cs1715))
Inlining (r881 <=> isBlack(cs2147))
Inlining (r730 <=> isBlack(cs1779))
Inlining (r1018 <=> isBlack(cs2605))
Inlining (r928 <=> isBlack(cs2347))
Unrolling (r851 == blackHeight(cs2106))
Inlining (r825 <=> isBlack(cs2064))
Unrolling (r1098 == blackHeight(cs2866))
Inlining (r1083 == balance(cs2831, ir28, cs2832, cs2833))
Unrolling (r954 == blackHeight(cs2378))
Unrolling (r779 == blackHeight(cs1862))
Unrolling (r813 == blackHeight(cs1905))
Unrolling (r876 <=> redNodesHaveBlackChildren(cs2140))
Unrolling (r855 == blackHeight(cs2110))
Inlining (r1071 <=> isBlack(cs2813))
Unrolling (r841 == blackHeight(cs2096))
Unrolling (r891 == blackHeight(cs2158))
Unrolling (r821 <=> redNodesHaveBlackChildren(cs2058))
Inlining (r870 <=> isBlack(cs2132))
Inlining (r865 <=> isBlack(cs2127))
Unrolling (r989 == blackHeight(cs2423))
Inlining (r933 <=> isBlack(cs2352))
Unrolling (r1089 == blackHeight(cs2856))
Inlining (r756 <=> isBlack(cs1817))
Unrolling (r993 == blackHeight(cs2559))
Unrolling (r990 == blackHeight(cs2424))
Unrolling (r1063 == blackHeight(cs2802))
Inlining (r1017 <=> isBlack(cs2604))
Unrolling (r858 == blackHeight(cs2113))
Unrolling (r1088 == blackHeight(cs2853))
Inlining (r837 == balance(cs2086, cs2087, cs2088, ir22))
Inlining (r727 <=> isBlack(cs1776))
Unrolling (r1105 <=> redNodesHaveBlackChildren(cs1732))
Inlining (r739 <=> isBlack(cs1792))
Unrolling (r874 <=> redNodesHaveBlackChildren(cs2138))
Unrolling (r1087 == blackHeight(cs2850))
Unrolling (r811 == blackHeight(cs1903))
Unrolling (r873 <=> redNodesHaveBlackChildren(cs2137))
Unrolling (r890 <=> blackBalanced(cs2157))
Unrolling (r776 == blackHeight(cs1853))
Inlining (r974 <=> isBlack(cs2405))
Unrolling (r777 == blackHeight(cs1856))
Inlining (r738 <=> isBlack(cs1791))
Inlining (r962 <=> isBlack(cs2389))
Inlining (r1052 <=> isBlack(cs2790))
Unrolling (r846 == blackHeight(cs2101))
Unrolling (r955 == blackHeight(cs2379))
Unrolling (r824 <=> redNodesHaveBlackChildren(cs2061))
Unrolling (r827 <=> redNodesHaveBlackChildren(cs2066))
Unrolling (r1002 == blackHeight(cs2571))
Inlining (r1075 <=> isBlack(cs2817))
Inlining (r801 <=> isBlack(cs1892))
Unrolling (r893 == blackHeight(cs2160))
Unrolling (r953 <=> blackBalanced(cs2377))
Unrolling (r889 <=> blackBalanced(cs2156))
Inlining (r866 <=> isBlack(cs2128))
Inlining (r1034 <=> isBlack(cs2625))
Inlining (r826 <=> isBlack(cs2065))
Unrolling (r956 == blackHeight(cs2380))
Unrolling (r828 <=> redNodesHaveBlackChildren(cs2067))
Unrolling (r1086 == blackHeight(cs2847))
Inlining (r796 <=> isBlack(cs1887))
Inlining (r1030 <=> isBlack(cs2621))
Inlining (r921 <=> isBlack(cs2336))
Unrolling (r1078 == blackHeight(cs2824))
Unrolling (r949 <=> blackBalanced(cs2373))
Unrolling (r857 == blackHeight(cs2112))
Inlining (r920 <=> isBlack(cs2335))
Inlining (r929 <=> isBlack(cs2348))
Unrolling (r957 == blackHeight(cs2381))
Inlining (r830 <=> isBlack(cs2069))
Inlining (r757 <=> isBlack(cs1818))
Inlining (r797 <=> isBlack(cs1888))
Unrolling (r852 == blackHeight(cs2107))
Unrolling (r847 == blackHeight(cs2102))
Unrolling (r1039 == blackHeight(cs2636))
Unrolling (r1109 <=> blackBalanced(cs1723))
Inlining (r726 <=> isBlack(cs1775))
Inlining (r932 <=> isBlack(cs2351))
Unrolling (r883 <=> redNodesHaveBlackChildren(cs2149))
Inlining (r1010 == balance(cs2582, ir25, cs2583, cs2584))
Unrolling (r790 == blackHeight(cs1878))
Inlining (r1049 <=> isBlack(cs2787))
Inlining (r904 <=> isBlack(cs2315))
Unrolling (r998 == blackHeight(cs2567))
Inlining (r963 <=> isBlack(cs2390))
Inlining (r975 <=> isBlack(cs2406))
Inlining (r743 <=> isBlack(cs1796))
Unrolling (r948 <=> blackBalanced(cs2372))
Inlining (r835 == balance(cs2074, ir21, cs2075, cs2076))
Inlining (r817 == balance(cs2041, ir19, cs2042, cs2043))
Unrolling (r860 == blackHeight(cs2118))
Unrolling (r997 == blackHeight(cs2566))
Inlining (r1084 == balance(cs2842, cs2843, cs2844, ir29))
Unrolling (r880 <=> redNodesHaveBlackChildren(cs2146))
Unrolling (r884 <=> redNodesHaveBlackChildren(cs2150))
Inlining (r1022 <=> isBlack(cs2609))
Unrolling (r1101 == blackHeight(cs2872))
Unrolling (r951 == blackHeight(cs2375))
Unrolling (r810 == blackHeight(cs1902))
Unrolling (r1111 <=> redNodesHaveBlackChildren(cs1703))
Unrolling (r1102 <=> redNodesHaveBlackChildren(cs1715))
Inlining (r773 <=> isBlack(cs1848))
Unrolling (r988 == blackHeight(cs2422))
Unrolling (r1065 == blackHeight(cs2804))
Unrolling (r899 == blackHeight(cs2306))
Unrolling (r845 == blackHeight(cs2100))
Unrolling (r952 <=> blackBalanced(cs2376))
Unrolling (r1106 <=> blackBalanced(cs1732))
Inlining (r967 <=> isBlack(cs2394))
Unrolling (r1103 <=> blackBalanced(cs1715))
Unrolling (r785 == blackHeight(cs1873))
Unrolling (r1096 == blackHeight(cs2864))
Unrolling (r984 == blackHeight(cs2418))
Inlining (r769 <=> isBlack(cs1844))
Unrolling (r1042 == blackHeight(cs2645))
Unrolling (r886 <=> blackBalanced(cs2153))
Unrolling (r1107 == blackHeight(cs1732))
Unrolling (r1064 == blackHeight(cs2803))
Unrolling (r1005 == blackHeight(cs2575))
Unrolling (r1062 == blackHeight(cs2801))
Unrolling (r859 == blackHeight(cs2115))
Unrolling (r888 == blackHeight(cs2155))
Unrolling (r1092 == blackHeight(cs2860))
Unrolling (r1004 == blackHeight(cs2573))
Unrolling (r994 == blackHeight(cs2562))
Unrolling (r812 == blackHeight(cs1904))
Inlining (r752 <=> isBlack(cs1813))
Unrolling (r1038 == blackHeight(cs2633))
Inlining (r1070 <=> isBlack(cs2812))
Unrolling (r898 == blackHeight(cs2303))
Inlining (r941 <=> isBlack(cs2364))
Inlining (r1048 <=> isBlack(cs2786))
Unrolling (r789 == blackHeight(cs1877))
Unrolling (r1100 == blackHeight(cs2869))
Inlining (r1021 <=> isBlack(cs2608))
Unrolling (r791 == blackHeight(cs1879))
Unrolling (r879 <=> redNodesHaveBlackChildren(cs2145))
Unrolling (r1037 == blackHeight(cs2630))
Inlining (r908 <=> isBlack(cs2319))
Unrolling (r807 == blackHeight(cs1899))
Inlining (r945 <=> isBlack(cs2368))
Unrolling (r892 == blackHeight(cs2159))
Unrolling (r842 == blackHeight(cs2097))
Inlining (r820 == balance(cs2054, cs2055, cs2056, ir20))
Unrolling (r1006 == blackHeight(cs2578))
Inlining (r917 <=> isBlack(cs2332))
Inlining (r1074 <=> isBlack(cs2816))
Inlining (r966 <=> isBlack(cs2393))
Inlining (r979 <=> isBlack(cs2410))
Inlining (r878 <=> isBlack(cs2144))
Unrolling (r778 == blackHeight(cs1859))
Inlining (r882 <=> isBlack(cs2148))
Unrolling (r1112 <=> blackBalanced(cs1703))
Inlining (r944 <=> isBlack(cs2367))
Inlining (r1029 <=> isBlack(cs2620))
Unrolling (r1099 == blackHeight(cs2867))
Inlining (r731 <=> isBlack(cs1780))
Unrolling (r950 == blackHeight(cs2374))
Unrolling (r1040 == blackHeight(cs2639))
Inlining (r978 <=> isBlack(cs2409))
Inlining (r905 <=> isBlack(cs2316))
Unrolling (r1097 == blackHeight(cs2865))
Inlining (r753 <=> isBlack(cs1814))
Inlining (r909 <=> isBlack(cs2320))
Unrolling (r788 == blackHeight(cs1876))
Unrolling (r1003 == blackHeight(cs2572))
Inlining (r916 <=> isBlack(cs2331))
Unrolling (r885 <=> blackBalanced(cs2152))
Unrolling (r784 == blackHeight(cs1872))
Unrolling (r848 == blackHeight(cs2103))
Unrolling (r822 <=> redNodesHaveBlackChildren(cs2059))
Unrolling (r1110 == blackHeight(cs1723))
Unrolling (r1001 == blackHeight(cs2570))
Unrolling (r832 <=> redNodesHaveBlackChildren(cs2071))
Unrolling (r1058 == blackHeight(cs2797))
Unrolling (r747 == blackHeight(cs1804))
Unrolling (r875 <=> redNodesHaveBlackChildren(cs2139))
Inlining (r869 <=> isBlack(cs2131))
Inlining (r800 <=> isBlack(cs1891))
Inlining (r877 <=> isBlack(cs2143))
Inlining (r742 <=> isBlack(cs1795))
Unrolling (r831 <=> redNodesHaveBlackChildren(cs2070))
Unrolling (r887 == blackHeight(cs2154))
Inlining (r1011 == balance(cs2593, cs2594, cs2595, ir26))
Unrolling (r1093 == blackHeight(cs2861))
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
[[34m Info  [0m] Number of axiom instances: 0
1: solved... in 18.943s
2: solved... in 0.006s
1: solved... in 22.862s
2: solved... in 0.006s
1: solved... in 0.246s
2: solved... in 0.006s
1: solved... in 0.251s
2: solved... in 0.006s
1: solved... in 25.109s
2: solved... in 0.007s
1: solved... in 0.227s
2: solved... in 0.006s
1: solved... in 24.675s
2: solved... in 0.006s
1: solved... in 17.669s
2: solved... in 0.007s
1: solved... in 17.248s
2: solved... in 0.007s
1: solved... in 25.36s
2: solved... in 0.007s
1: solved... in 36.122s
2: solved... in 0.007s
1: solved... in 26.204s
2: solved... in 0.008s
1: solved... in 29.053s
2: solved... in 0.008s
1: solved... in 34.286s
2: solved... in 0.008s
1: solved... in 24.143s
2: solved... in 0.008s
1: solved... in 24.012s
2: solved... in 0.008s
1: solved... in 23.941s
2: solved... in 0.009s
1: solved... in 25.196s
2: solved... in 0.008s
1: solved... in 29.525s
2: solved... in 0.009s
1: solved... in 20.952s
2: solved... in 0.01s
