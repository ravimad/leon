Total Time: 31.369s
VC refinements : 26
Disjunct Explorations : 71
Avg VC size : 391.15384615384613
Max VC size : 1428
Avg UIF-ADT size : 109.15384615384616
Max UIF-ADT size : 356
avgTempVars : 5.0
maxTempVars : 10
Total retries: 0
avgFarkaSize : 92.26760563380282
maxFarkaSize : 839
avgFarkaTime : 0.08380281690140845s
maxFarkaTime : 2.795s
avgNLSize : 12.04225352112676
maxNLSize : 98
avgDijSize : 125.0
maxDijSize : 1305
avgElimvars : 34.80281690140845
maxElimvars : 259
avgElimAtoms : 84.87323943661971
maxElimAtoms : 1127
avgExploreTime : 0.30984507042253523s
maxExploreTime : 4.94s
avgCompatCalls : 377.9718309859155
maxCompatCalls : 7150
avgLemmaApps : 0.0
maxLemmaApps : 0
########## Outputs ############
Invariants for Function: removeLast1
removeLast1 --> ((((-10 * size1(l)) + (1 * res8._2)) + -15) ≤ 0)
size1 --> (((-1 * #res) + -1) ≤ 0)

Invariants for Function: concat1
concat1 --> ((((-13 * size1(l1)) + (1 * res14._2)) + -2) ≤ 0)
size1 --> (((0 * #res) + -1) ≤ 0)

Invariants for Function: reverseRec1
reverseRec1 --> ((((-29 * size1(l1)) + (3 * res9._2)) + -12) ≤ 0)
size1 --> (((0 * #res) + -1) ≤ 0)

Invariants for Function: reverse1
reverse1 --> ((((-6 * size1(l)) + (1 * res11._2)) + -4) ≤ 0)
size1 --> (((-1 * #res) + -1) ≤ 0)
reverseRec1 --> ((((-6 * size1(l1)) + (1 * res9._2)) + -2) ≤ 0)

Invariants for Function: sizeList1
sizeList1 --> ((((1 * res15._2) + (-9 * size1(list))) + -2) ≤ 0)
size1 --> (((0 * #res) + -1) ≤ 0)

Invariants for Function: dequeue1
sizeList1 --> ((((-5 * size1(list)) + (1 * res15._2)) + -2) ≤ 0)
size1 --> (((-1 * #res) + -8) ≤ 0)
reverseRec1 --> ((((1 * res9._2) + (-5 * size1(l1))) + -2) ≤ 0)
concat1 --> ((((1 * res14._2) + (-5 * size1(l1))) + -2) ≤ 0)
dequeue1 --> ((((1 * res13._2) + (-11 * qsize1(q))) + -63) ≤ 0)

Invariants for Function: pop1
pop1 --> ((((-11 * size1(q.front)) + (1 * res12._2)) + -75) ≤ 0)
removeLast1 --> ((((-10 * size1(l)) + (1 * res8._2)) + 4) ≤ 0)
size1 --> (((-1 * #res) + -8) ≤ 0)
sizeList1 --> ((((1 * res15._2) + (-5 * size1(list))) + -2) ≤ 0)

Invariants for Function: enqueue1
sizeList1 --> ((((-5 * size1(list)) + (1 * res15._2)) + -2) ≤ 0)
size1 --> (((-1 * #res) + -1) ≤ 0)
reverseRec1 --> ((((-6 * size1(l1)) + (1 * res9._2)) + -2) ≤ 0)
concat1 --> ((((2 * res14._2) + (-11 * size1(l1))) + -4) ≤ 0)
enqueue1 --> ((((1 * res10._2) + (-11 * qsize1(q))) + -26) ≤ 0)


